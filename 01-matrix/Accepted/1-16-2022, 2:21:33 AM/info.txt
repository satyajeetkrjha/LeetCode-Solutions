{"id":620839706,"lang":"cpp","time":"7 months, 1 week","timestamp":1642317693,"status_display":"Accepted","runtime":"159 ms","url":"/submissions/detail/620839706/","is_pending":"Not Pending","title":"01 Matrix","memory":"30.2 MB","code":"class Solution {\npublic:\n    \n    int dx[4] ={1,-1,0,0};\n    int dy[4]={0,0,1,-1};\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        int r = mat.size();\n        int c = mat[0].size();\n        \n        vector <vector <int> > dist(r,vector<int>(c,INT_MAX));\n      \n        queue <pair <int ,int> > q;\n        \n        for(int i=0 ;i<r ;i++){\n            for(int j=0 ;j<c ;j++){\n                if(mat[i][j] ==0){\n                    dist[i][j] =0 ; // note u are 0 so mark that dist as 0\n                    q.push({i,j});\n                }\n            }\n        }\n        \n        \n        while(!q.empty()){\n            int sz= q.size();\n            for(int i =0 ;i<sz;i++){\n                auto curr = q.front();\n                q.pop();\n                for(int dir = 0 ;dir <4;dir++){\n                    int nr = curr.first + dx[dir];\n                    int nc = curr.second + dy[dir];\n                    if(nr >=0 && nr < r && nc >=0 && nc <c){\n                        if(dist[nr][nc] > dist[curr.first][curr.second]+1){\n                            dist[nr][nc] = dist[curr.first][curr.second]+1;\n                            q.push({nr,nc});\n                        }\n                    }\n                }    \n                \n            }\n        }\n        return dist ;\n        \n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix"}