{"id":620829456,"lang":"cpp","time":"7 months, 1 week","timestamp":1642316584,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/620829456/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\npublic:\n    \n    int dx[4] = {1,-1,0,0};\n    int dy[4] = {0,0,1,-1};\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        vector <vector <int> > res ;\n        int r = mat.size();\n        int c = mat[0].size();\n        \n        for(int i =0 ;i<r ;i++){\n             vector <int> temp ; \n            for(int j =0 ;j< c;j++){\n               if(mat[i][j] == 0){\n                   temp.push_back(0);\n               }\n                else{\n                    int count =1;\n                    queue <pair<int ,int> >q;\n                    q.push({i,j});\n                    \n                    while(!q.empty()){\n                        int sz = q.size();\n                    for(int k = 0 ;k<sz;k++){\n                        auto cur = q.front();\n                        q.pop();\n                        for(int dir = 0 ;dir <4;dir++){\n                            int nr = cur.first + dx[dir];\n                            int nc = cur.second + dy[dir];\n                            if(nr<0 || nr >= r || nc <0 || nc >= c){\n                                continue;\n                            }\n                            else{\n                                if(mat[nr][nc] ==0){\n                                    temp.push_back(count);\n                                    break;\n                                }\n                                else{\n                                    q.push({nr,nc});\n                                }\n                            }\n                        }\n                    }\n                        count++;\n                    \n                }\n            }\n        }\n            res.push_back(temp);\n        \n        }\n        return res ;\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000","title_slug":"01-matrix"}