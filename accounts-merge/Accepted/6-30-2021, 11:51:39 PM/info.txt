{"id":515664884,"lang":"cpp","time":"1 year, 1 month","timestamp":1625111499,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/515664884/","is_pending":"Not Pending","title":"Accounts Merge","memory":"37.7 MB","code":"class Solution {\npublic:\n    int find ( vector <int> &parent ,int i){\n        while(parent[i]!=i){\n            i = parent[i];\n        }\n        return i;\n    }\n    vector<vector<string>> accountsMerge(vector<vector<string>>& accounts) {\n        vector <int> parent(accounts.size(),0);\n        map <string ,int> emailtoindex ; \n        // this map basically maps the given emails to the accounts index \n        for(int i =0;i<accounts.size();i++){\n            parent[i] =i;\n             vector <string> temp = accounts[i]; \n            // temp[0] contains name but we want to map only emails in this step\n            for(int j =1;j<temp.size();j++){\n                if(emailtoindex.find(temp[j])!=emailtoindex.end()){ \n                    // this email already exists in the map\n                   int parent1 = find(parent,i);\n                   int parent2 = find(parent ,emailtoindex[temp[j]]); \n                   parent[parent1] = parent2;\n                }\n                else {\n                    emailtoindex[temp[j]] = i;\n                }\n            }\n        }\n            \n            map <int , vector<string> > groups ; \n            // group all elemets of a subset such that all enails with same parent will belong to one group\n            for(auto it:emailtoindex){\n                int root = find(parent ,it.second);\n                groups[root].push_back(it.first);\n            }\n            \n            vector< vector <string> > res; // this stores our result \n            \n            for (auto it: groups){\n                sort(it.second.begin(),it.second.end()) ; \n                vector <string> temp = {accounts[it.first][0]};\n                cout<<temp[0]<<endl;\n                for( auto i :it.second){\n                    temp.push_back(i);\n                }\n                res.push_back(temp);\n            }\n\n           return res;\n      }\n        \n    \n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"accounts-merge"}