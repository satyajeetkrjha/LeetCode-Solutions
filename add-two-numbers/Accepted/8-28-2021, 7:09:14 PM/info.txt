{"id":545808418,"lang":"cpp","time":"12Â months","timestamp":1630192154,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/545808418/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void printList(ListNode* head){\n        while(head!=NULL){\n            cout<<head->val<<\" \";\n            head = head->next;\n        }\n    }\n    \n    \n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int carry =0 ;\n        ListNode* cur ;\n        ListNode* head=NULL;\n        ListNode* dummyNode = new ListNode(-1);\n        cur = dummyNode ;\n        while(l1 !=NULL || l2!=NULL){\n            int x1 = l1!=NULL ?l1->val:0;\n            int x2=  l2!=NULL ?l2->val:0;\n            \n            int val = (carry+x1+x2)%10;\n            carry = (carry+x1+x2)/10;\n            \n            cur->next = new ListNode(val);\n            cur = cur->next;\n            \n            if(l1!=NULL){\n                l1 = l1->next;\n            }\n            if(l2!=NULL){\n                l2 = l2->next;\n            }\n            \n        }\n        if(carry!=0){\n            cur->next = new ListNode(carry);\n        }\n        // printList(dummyNode->next);\n        return dummyNode->next;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}