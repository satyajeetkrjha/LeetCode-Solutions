{"id":519787256,"lang":"cpp","time":"1 year, 1 month","timestamp":1625832867,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/519787256/","is_pending":"Not Pending","title":"Alien Dictionary","memory":"N/A","code":"class Solution {\npublic:\n    map <char ,int > indegree ;\n    map <char ,vector <char> > graph ;// this is our graph \n    string res;\n    \n    string alienOrder(vector<string>& words) {\n        res = \"\";\n        for(int i =0;i<words.size();i++){\n            string word = words[i];\n            for(int j =0;j<word.size();j++){\n                char c = word[j];\n                indegree[c]=0;\n                graph[c] = vector <char>();\n            }\n        }\n        cout<<\"working fine\"<<endl;\n    \n    // building the graph \n \n    for(int i =0;i<words.size()-1;i++){\n       string w1 = words[i];\n        string w2 = words[i+1];\n        \n        if(w1.size() > w2.size() && w1.find(w2) == 0){\n            return \" \";\n        }\n        for(int j =0;j<min(w1.size(),w2.size());j++){\n            char parent = w1[j];\n            char child = w2[j];\n            \n            if( parent != child){\n            // cout<<\"parent is \"<<parent <<endl;\n            // cout<<\"child is \"<<child <<endl;\n                graph[parent].push_back(child);\n                indegree[child]++;\n                break;\n            }\n        }\n    }\n        // cout<<\"till queue \"<<endl;\n    \n    queue<char> q;\n      \n     // for( auto it :indegree){\n     //     cout<<\"it->first is \"<<it.first<< \"  and it->second is \"<<it.second<<endl;\n     // }   \n        \n        \n        \n        \n    // loop through indegree map \n    for( auto it: indegree){\n        if(it.second == 0){\n            q.push(it.first);\n        }\n    }\n        // cout<<\"q.size() is \"<<q.size()<<endl;\n    \n    while(!q.empty()){\n         char current = q.front();\n         q.pop();\n         res+= current ;\n         vector <char > neighbours = graph[current];\n         // cout<<\"sz is \"<<neighbours.size()<<endl;\n         for(int i =0;i<neighbours.size();i++){\n             char c = neighbours [i];\n             indegree[c]--;\n             if(indegree[c] == 0){\n                 q.push(c);\n             }\n         }\n         \n       }\n        if(res.size() !=indegree.size()){\n            return \" \";\n        }\n     return res ;\n    }\n    \n    \n};","compare_result":"11011111101101100111110101110011000000100100000110010010000100000100000011011000100010001000111011001000010000100000001101","title_slug":"alien-dictionary"}