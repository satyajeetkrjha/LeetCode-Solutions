{"id":362156768,"lang":"cpp","time":"2 years, 1 month","timestamp":1593899678,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/362156768/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"16.6 MB","code":"class Solution {\npublic:\n    vector <vector<int> > ans;\n    bool visited[1000];\n    void dfs(vector<vector<int>>& graph,vector <int> temp,int node,int n){\n        cout<<\"node is \"<<node<<endl;\n        if(node ==n){\n            cout<<\"condition match\"<<endl;\n            temp.push_back(node);\n            ans.push_back(temp);\n            return;\n        }\n        visited[node] =true;\n        temp.push_back(node);\n        cout<<\"node pushed in vector is \"<<node <<endl;\n        for(int i=0;i<graph[node].size();i++){\n            int adjacentnode=graph[node][i];\n            if(visited[adjacentnode]==false){\n                dfs(graph,temp,adjacentnode,n);\n            }\n        }\n        visited[node]=false;\n    }\n    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {\n      \n        int n=graph.size();\n        if(n ==0)\n            return ans;\n        \n        vector <int> temp;\n        bool visited[n+1];\n        for(int i=0;i<n;i++){\n            visited[i]=false;\n        }\n        dfs(graph,temp,0,n-1);\n        return ans;\n        \n    }\n};","compare_result":"11111111111111111111111111","title_slug":"all-paths-from-source-to-target"}