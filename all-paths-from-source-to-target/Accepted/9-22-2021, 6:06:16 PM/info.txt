{"id":559395761,"lang":"cpp","time":"11 months, 1 week","timestamp":1632348376,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/559395761/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"16.8 MB","code":"class Solution {\npublic:\n    bool visited[100];\n    vector < vector <int> > res ;\n    void dfs (vector <vector <int> > & graph ,int u ,int destination,vector <int> temp){\n        cout<<\" u is \"<<u <<endl;\n       \n        if(u == destination){\n            temp.push_back(u);\n            res.push_back(temp);\n            return;  \n        }\n        visited[u] = true ;\n        temp.push_back(u);\n        for(int i =0 ;i< graph[u].size();i++){\n            int adjacentnode = graph[u][i];\n            cout<<\"adjacent node is \"<<adjacentnode <<endl;\n            if(visited[adjacentnode] == false){\n                dfs(graph,adjacentnode,destination,temp);\n            }\n        }\n        visited[u] = false ;\n        \n        \n    }\n    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {\n        int n = graph.size();\n        if(n == 0) return res ;\n        for(int i =0 ;i<n+1 ;i++){\n            visited[i] = false ;\n        }\n        vector <int> temp;\n        dfs(graph,0 ,n-1 ,temp);\n        return res ;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target"}