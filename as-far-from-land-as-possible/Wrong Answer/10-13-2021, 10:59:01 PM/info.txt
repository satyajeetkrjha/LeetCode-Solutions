{"id":570891754,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1634180341,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/570891754/","is_pending":"Not Pending","title":"As Far from Land as Possible","memory":"N/A","code":"class Solution {\npublic:\n    int maxDistance(vector<vector<int>>& grid) {\n        queue <pair <int,int> > q;\n        int r = grid.size();\n        int c = grid[0].size();\n        \n       \n        \n        for(int i =0 ;i<r;i++){\n            for(int j =0 ;j<c;j++){\n                if(grid[i][j] == 1){\n                    q.push({i,j});\n                }\n            }\n        }\n      //  cout <<\"q.size() is \"<<q.size()<<endl;\n        \n        int dx[4] ={0,0,1,-1};\n        int dy[4] ={1,-1,0,0};\n        int maxval =0;\n        while(!q.empty()){  \n            pair <int ,int> cur = q.front();\n            q.pop();\n            int r = cur.first ;\n            int c=  cur.second;\n          //  cout <<\"r and c is \"<< r << \" \"<< c<<endl;\n            for(int i =0 ;i<4;i++){\n                int nr = r+ dx[i];\n                int nc = c+ dy[i];\n                //cout<<\"nr nc \"<< nr<<\" \"<< nc<<endl;\n                if(nr >=0 && nc >=0 && nr<=r && nc <=c && grid[nr][nc] ==0){\n                   \n                    grid[nr][nc] = grid[r][c]+1;\n                   //  cout <<\"dist[\"<< nr << \" ]\"<<\"[ \"<<nc <<\" ]\"<<dist[nr][nc]<<endl;\n                    maxval = max(maxval ,grid[nr][nc]);\n                    q.push({nr,nc});\n                     \n                }\n            }\n        }\n        return maxval >0 ? maxval-1:-1;\n        \n        \n        \n        \n    }\n};","compare_result":"10110000000000000000000000000000000","title_slug":"as-far-from-land-as-possible"}