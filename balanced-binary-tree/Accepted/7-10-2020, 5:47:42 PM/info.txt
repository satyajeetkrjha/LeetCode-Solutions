{"id":364861842,"lang":"cpp","time":"2 years, 1 month","timestamp":1594417662,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/364861842/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"22 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int  balanced( TreeNode* root){\n        if(root==NULL){\n            return 0;\n        }\n        int lh = balanced(root->left);\n        if(lh ==-1){\n            return -1;\n        }\n        int rh =balanced(root->right);\n        if(rh ==-1){\n            return -1;\n        }\n        int diff =abs(lh-rh);\n        if(diff>1)\n            return -1;\n        return max(lh,rh)+1;\n    }\n    bool isBalanced(TreeNode* root) {\n        int ans = balanced(root);\n        if(ans ==-1)\n            return false;\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}