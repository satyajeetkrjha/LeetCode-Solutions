{"id":753283265,"lang":"cpp","time":"1Â month","timestamp":1658445200,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/753283265/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool flag = true;\n    int dfs(TreeNode* root){\n        if(!root)\n            return 0;\n        int lh = dfs(root->left);\n        if(lh == -1)\n            return -1;\n        int rh  = dfs(root->right);\n        if(rh == -1)\n            return -1;\n        if(abs(lh-rh)>1){\n            return -1;\n        }\n        return max(lh,rh)+1;\n        \n            \n    }\n    \n    \n    \n    \n    bool isBalanced(TreeNode* root) {\n        if(dfs(root) == -1)\n            return false;\n        return true ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}