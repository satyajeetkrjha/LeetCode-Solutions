{"id":778506748,"lang":"cpp","time":"5 days, 12 hours","timestamp":1661000430,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/778506748/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool flag ;\n    \n    int dfs(TreeNode* root){\n        if(!root)\n            return 0;\n        int lh = dfs(root->left);\n        int rh = dfs(root->right);\n        if(abs(lh-rh)>1){\n          flag = true; \n        }\n        return max(lh,rh)+1;\n    }\n    \n    \n    \n    bool isBalanced(TreeNode* root) {\n        flag = false ;\n        dfs(root);\n        return !flag ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}