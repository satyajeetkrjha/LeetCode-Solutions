{"id":374972560,"lang":"cpp","time":"2Â years","timestamp":1596380680,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/374972560/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"7.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* bstToGst(TreeNode* root) {\n        int pre =0;\n        TreeNode* cur = root;\n        stack <TreeNode*> s;\n        while(!s.empty() ||  cur!=NULL){\n            if(cur !=NULL){\n                s.push(cur);\n                cur = cur->right;\n            }\n            else {\n                cur =s.top();\n                s.pop();\n                cur->val =pre=pre+cur->val;\n                cur = cur->left;\n                \n            }\n        }\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree"}