{"id":355056757,"lang":"cpp","time":"2 years, 2 months","timestamp":1592430370,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/355056757/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector <int> res;\n        stack <TreeNode*> s;\n        bool done = false;\n        TreeNode* cur =root;\n        while(cur!=NULL || !s.empty() ){ \n            while(cur!=NULL){\n                s.push(cur);\n                cur= cur->left;\n            }\n            cur =s.top();\n            s.pop();\n            res.push_back(cur->val);\n            cur = cur->right;\n            \n            \n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}