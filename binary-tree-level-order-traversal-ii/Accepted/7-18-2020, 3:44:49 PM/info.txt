{"id":368370512,"lang":"cpp","time":"2 years, 1 month","timestamp":1595101489,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/368370512/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"13.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector <vector <int> > ans;\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        vector <int> v;\n        if(root ==NULL)\n            return ans;\n        queue <TreeNode*> q;\n        q.push(root);\n        \n        while(!q.empty()){\n            int sz = q.size();\n            v.clear();\n            for(int i=0;i<sz;i++){\n                TreeNode* cur = q.front();\n                q.pop();\n                v.push_back(cur->val);\n                if(cur->left)\n                    q.push(cur->left);\n                if(cur->right)\n                    q.push(cur->right);\n            }\n            ans.push_back(v);\n            \n        }\n        reverse(ans.begin(),ans.end());\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}