{"id":361578640,"lang":"cpp","time":"2 years, 1 month","timestamp":1593790343,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/361578640/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n      vector <vector <int> > res;\n        if(root==NULL)\n            return res;\n      queue <TreeNode*> q;\n      q.push(root);\n      TreeNode* cur;\n      while(!q.empty()){\n          int sz= q.size();\n          vector <int> temp;\n          for(int i=0;i<sz;i++){\n              cur =q.front();\n              q.pop();\n              temp.push_back(cur->val);\n              if(cur->left)\n                  q.push(cur->left);\n              if(cur->right)\n                  q.push(cur->right);\n              \n          }\n          res.push_back(temp);\n      }\n        reverse(res.begin(),res.end());\n        return res;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}