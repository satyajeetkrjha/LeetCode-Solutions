{"id":713287589,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1654232052,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/713287589/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence II","memory":"22.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     int ans;\n    int longestConsecutive(TreeNode* root) {\n        ans =0;\n        dfs(root);\n        return ans ;\n    }\n    pair <int ,int> dfs(TreeNode* root){\n        if(!root){\n            return {0,0};\n        }\n        \n        int inc = 1;\n        int dec = 1 ;\n        \n        \n        if(root->left!=NULL){\n            pair <int,int> left = dfs(root->left);\n            if(root->val == root->left->val +1){\n                dec = left.second+1;\n            }\n            else if(root->val == root->left->val-1){\n                inc = left.first+1;\n            }\n        }\n        \n        if(root->right!=NULL){\n            pair <int ,int> right = dfs(root->right);\n            if(root->val == root->right->val+1){\n                dec = max(dec,right.second+1);\n            }\n            else if (root->val == root->right->val -1){\n                inc = max(inc,right.first +1);\n            }\n        }\n        ans = max(ans ,inc+dec-1);\n        \n        return {inc,dec};\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence-ii"}