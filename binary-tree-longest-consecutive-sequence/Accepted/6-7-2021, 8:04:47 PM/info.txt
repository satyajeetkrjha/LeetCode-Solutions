{"id":504646720,"lang":"cpp","time":"1 year, 2 months","timestamp":1623110687,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/504646720/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"33.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxval =1;\n    void bfs(TreeNode* root){\n        queue <pair <TreeNode*,int>> q;\n        q.push(make_pair(root,1));\n        while(!q.empty()){\n            int sz =q.size();\n            for(int i=0;i<sz;i++){\n              pair<TreeNode*,int> p =q.front();\n                q.pop();\n            TreeNode* cur = p.first;\n            int val =p.second;\n                cout<<\"val is here \"<<val <<endl;\n            if(cur->left){\n                if(cur->left->val -cur->val ==1){\n                    maxval =max(maxval,p.second+1);\n                    cout<<\"maxval is \"<<maxval;\n                    q.push(make_pair(cur->left,p.second+1));\n                }\n                else{\n                    q.push(make_pair(cur->left,1));\n                }\n             } \n             if(cur->right){\n                 if(cur->right->val - cur->val == 1){\n                     maxval=max(maxval,p.second+1);\n                      cout<<\"maxval second is \"<<maxval;\n                     q.push(make_pair(cur->right,p.second+1));\n                 }\n                 else{\n                      q.push(make_pair(cur->right,1));\n                 }\n             }              \n            \n        }\n      }\n    }\n                           \n\n\n                    \n    \n    int longestConsecutive(TreeNode* root) {\n        if(!root){\n            return 0;\n        }\n        bfs(root);\n        return maxval;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence"}