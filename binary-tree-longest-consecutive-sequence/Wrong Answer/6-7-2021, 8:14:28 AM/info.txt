{"id":504387732,"lang":"cpp","time":"1 year, 2 months","timestamp":1623068068,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/504387732/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxval =1;\n    void bfs(TreeNode* root){\n        int currentleft =1;\n        int currentright=1;\n        queue <TreeNode*> q;\n        q.push(root);\n        \n        bool leftflag =false;\n        bool rightflag =false;\n        while(!q.empty()){\n            int sz =q.size();\n            for(int i=0;i<sz;i++){\n                TreeNode * cur = q.front();\n                q.pop();\n                \n                 leftflag =false;\n                 rightflag =false;\n                cout<<\"cur->val is \"<<cur->val<<endl;;\n                if(cur->left){\n                    if(cur->left->val - cur->val == 1){\n                        leftflag =true;\n                    }\n                }\n                if(cur->right){\n                    if(cur->right->val - cur->val ==1){\n                        rightflag =true;\n                    }\n                }\n                if(cur->left){\n                    cout<<\"cur->left->val is \"<<cur->left->val<<endl;\n                     q.push(cur->left);\n                }\n                if(cur->right){\n                     cout<<\"cur->right->val is \"<<cur->right->val<<endl;\n                    q.push(cur->right); \n                }\n                   \n                   \n            }\n        \n                    if(leftflag){\n                        currentleft++;\n                        maxval =max(maxval,currentleft);\n                    }\n                   if(rightflag){\n                      currentright++;\n                      maxval=max(maxval,currentright);\n                   }\n                   if(!leftflag){\n                       currentleft =1;\n                   } \n                  if(!rightflag){\n                      currentright =1;\n                  }\n              }\n      }\n\n                    \n    \n    int longestConsecutive(TreeNode* root) {\n        if(!root){\n            return 0;\n        }\n        bfs(root);\n        return maxval;\n        \n    }\n};","compare_result":"11111111111111110110101101111011111111110000100001111","title_slug":"binary-tree-longest-consecutive-sequence"}