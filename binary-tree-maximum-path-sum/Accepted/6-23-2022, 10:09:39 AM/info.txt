{"id":729343567,"lang":"cpp","time":"2Â months","timestamp":1655993379,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/729343567/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    \n    int maxpathsum =INT_MIN;\n    int maxgain(TreeNode* root){\n        if(!root)\n            return 0 ;\n        int leftgain = max(maxgain(root->left),0);\n        int rightgain = max(maxgain(root->right),0);\n        int pathsum = leftgain + rightgain + root->val;\n        maxpathsum = max(maxpathsum ,pathsum);\n        return root->val + max(leftgain,rightgain);\n    }\n    \n    \n    \n    \n    int maxPathSum(TreeNode* root) {\n        maxgain(root);\n        return maxpathsum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}