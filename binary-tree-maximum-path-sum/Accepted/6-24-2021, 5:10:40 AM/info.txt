{"id":512483991,"lang":"cpp","time":"1 year, 2 months","timestamp":1624525840,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/512483991/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     int dfs(TreeNode* root,int &ans){\n         if(root == NULL){\n             return  0;\n         }\n         int max_left_gain = max(dfs(root->left,ans),0);\n         int max_right_gain = max(dfs(root->right,ans),0);\n         \n         int cur_sum = root->val +max_left_gain+max_right_gain;\n         ans = max(ans,cur_sum);\n         return root->val +max(max_left_gain,max_right_gain);\n     }\n    int maxPathSum(TreeNode* root) {\n      int ans =INT_MIN;\n       dfs(root,ans);\n        return ans ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}