{"id":778753472,"lang":"cpp","time":"5 days, 7 hours","timestamp":1661017480,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/778753472/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxpath ;\n    \n    int dfs(TreeNode* root){\n        if(!root)\n            return 0;\n        int maxleft = max(dfs(root->left),0);\n        int maxright = max(dfs(root->right),0);\n        maxpath = max(maxpath ,maxleft+maxright+root->val);\n        return root->val + max(maxleft,maxright);\n    }\n    int maxPathSum(TreeNode* root) {\n        maxpath =INT_MIN ;\n        dfs(root);\n        return maxpath ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}