{"id":550627882,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1630967667,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/550627882/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int max_sum =INT_MIN;\n    int max_gain(TreeNode* root){\n        if(root == NULL)\n            return 0 ;\n        int left_gain = max(max_gain(root->left),0);\n        int right_gain= max(max_gain(root->right),0);\n        int newpathsum = root->val + left_gain+right_gain;\n        max_sum = max(max_sum ,newpathsum);\n        return root->val + max(left_gain,right_gain);\n    }\n    int maxPathSum(TreeNode* root) {\n        max_gain(root);\n        return max_sum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}