{"id":512342393,"lang":"cpp","time":"1 year, 2 months","timestamp":1624502193,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/512342393/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     int dfs(TreeNode* root,int &ans){\n        if(root==NULL){\n            return 0;\n        }\n        int leftsum = dfs(root->left,ans);\n        int rightsum = dfs(root->right,ans);\n        int totalsum = leftsum +rightsum+root->val;\n        ans = max(totalsum,max(leftsum,rightsum));\n        return totalsum;\n    }\n    int maxPathSum(TreeNode* root) {\n      int ans =INT_MIN;\n       dfs(root,ans);\n        return ans ;\n    }\n};","compare_result":"1111010100011011010001010011000010000000000000000000000000000010000100000000000000000000000000","title_slug":"binary-tree-maximum-path-sum"}