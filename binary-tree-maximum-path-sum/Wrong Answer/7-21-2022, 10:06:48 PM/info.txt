{"id":753356617,"lang":"cpp","time":"1Â month","timestamp":1658455608,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/753356617/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxsum ;\n    \n    int  dfs(TreeNode* root){\n        if(!root)\n            return 0 ;\n        \n        int leftsum = dfs(root->left);\n        int rightsum = dfs(root->right);\n        int pathsum = leftsum +rightsum +root->val;\n        maxsum =max(maxsum ,pathsum);\n        return root->val + max(leftsum ,rightsum);\n        \n    }\n    \n\n    int maxPathSum(TreeNode* root) {\n        maxsum =INT_MIN ;\n        dfs(root);\n        return maxsum ;\n    }\n};","compare_result":"1111110110011011011111011111110011011100001100111101010100111111111101100011110111111101111111","title_slug":"binary-tree-maximum-path-sum"}