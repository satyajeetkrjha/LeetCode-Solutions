{"id":729403896,"lang":"cpp","time":"2Â months","timestamp":1655998710,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/729403896/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"13.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    vector <string> res ;\n\n    void dfs(TreeNode* root ,string cur){\n        if(!root)\n            return;\n          cur += to_string(root->val);\n         if(!root->left && !root->right){\n             res.push_back(cur);\n         }\n        else {\n            cur = cur+\"->\";\n            if(root->left){\n                  dfs(root->left,cur);\n            }\n            if(root->right){\n                dfs(root->right ,cur);\n            }\n          \n        }\n    }\n    \n    \n    vector<string> binaryTreePaths(TreeNode* root) {\n        if(!root)\n            return res ;\n        string cur =\"\";\n        dfs(root,cur);\n        return res ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}