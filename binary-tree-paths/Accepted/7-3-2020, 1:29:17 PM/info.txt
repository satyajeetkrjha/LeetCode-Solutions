{"id":361616753,"lang":"cpp","time":"2 years, 1 month","timestamp":1593797357,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/361616753/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"14.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     vector <string> res;\n    vector<string> binaryTreePaths(TreeNode* root) {\n        if(root ==NULL){\n            return res;\n        }\n        string cur =\"\";\n        dfs(root,cur);\n        return res;\n    }\n     void dfs(TreeNode* root,string cur){\n        cur+=to_string(root->val);\n        if(root->left==NULL && root->right==NULL){\n            res.push_back(cur);\n        }\n        else {\n            cur =cur+\"->\";\n            if(root->left){\n                dfs(root->left,cur);\n            }  \n            if(root->right){\n                dfs(root->right,cur);\n            }\n        }\n    }\n  \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}