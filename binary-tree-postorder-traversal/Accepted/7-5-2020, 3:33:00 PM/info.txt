{"id":362574149,"lang":"cpp","time":"2 years, 1 month","timestamp":1593977580,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/362574149/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector <int> res;\n        stack<TreeNode*> s;\n        if(root == NULL)\n            return res;\n        TreeNode* cur =root;\n        s.push(cur);\n        while(!s.empty()){\n            cur =s.top();\n            s.pop();\n            res.push_back(cur->val);\n            if(cur->left){\n                s.push(cur->left);\n            }\n            if(cur->right){\n                s.push(cur->right);\n            }\n            \n        }\n        reverse(res.begin(),res.end());\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal"}