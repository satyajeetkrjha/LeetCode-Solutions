{"id":362137737,"lang":"cpp","time":"2 years, 1 month","timestamp":1593896535,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/362137737/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n         vector <int> v;\n        if(root==NULL)\n            return v;\n        stack<TreeNode*> s;\n        s.push(root);\n       \n        while(!s.empty()){\n            TreeNode* cur = s.top();\n            s.pop();\n            v.push_back(cur->val);\n            if(cur->right){\n                s.push(cur->right);\n            }\n            if(cur->left){\n                s.push(cur->left);\n            }\n        }\n            \n            return v;\n       }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}