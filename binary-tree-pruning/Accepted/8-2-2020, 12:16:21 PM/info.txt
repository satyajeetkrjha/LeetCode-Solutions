{"id":374997690,"lang":"cpp","time":"2Â years","timestamp":1596384981,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/374997690/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"7.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* pruneTree(TreeNode* root) {\n       if(root ==NULL){\n           return NULL;\n       }\n        root->left = pruneTree(root->left);\n        root->right = pruneTree(root->right);\n        if(root ->left ==NULL && root->right ==NULL && root->val ==0){\n            root =NULL;\n        }\n        return root ;\n        \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"binary-tree-pruning"}