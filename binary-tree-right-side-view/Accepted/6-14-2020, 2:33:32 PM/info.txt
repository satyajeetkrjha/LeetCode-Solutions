{"id":353642688,"lang":"cpp","time":"2 years, 2 months","timestamp":1592159612,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/353642688/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector <int> v;\n        vector <int > ans;\n        queue <TreeNode*> q;\n        if(root==NULL)\n            return ans;\n        TreeNode* cur =root;\n        q.push(cur);\n        while(!q.empty()){\n            int sz=q.size();\n            for(int i=0;i<sz;i++){\n                TreeNode* temp =q.front();\n                q.pop();\n                v.push_back(temp->val);\n                if(temp->left)\n                    q.push(temp->left);\n                if(temp->right)\n                    q.push(temp->right);\n                \n            }\n            ans.push_back(v[sz-1]);\n            v.clear();\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}