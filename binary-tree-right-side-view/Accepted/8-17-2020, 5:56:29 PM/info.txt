{"id":382398690,"lang":"cpp","time":"2Â years","timestamp":1597701389,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/382398690/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector <int> v;\n        if(!root){\n            return v;\n        }\n        queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i=0;i<sz;i++){\n                \n                TreeNode* cur = q.front();\n                q.pop();\n                if( i ==sz-1){\n                    v.push_back(cur->val);\n                }\n                if(cur->left){\n                    q.push(cur->left);\n                }\n                if(cur->right){\n                    q.push(cur->right);\n                }\n            }\n        }\n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}