{"id":778542644,"lang":"cpp","time":"5 days, 11 hours","timestamp":1661004148,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/778542644/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        queue <TreeNode*> q ;\n        q.push(root);\n        vector <int> res ;\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i =0 ;i <sz;i++){\n                auto cur = q.front();\n                q.pop();\n                if(i == sz-1){\n                    res.push_back(cur->val);\n                }\n                if(cur->left)\n                    q.push(cur->left);\n                if(cur->right)\n                    q.push(cur->right);\n            }\n        }\n        return res ;\n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-right-side-view"}