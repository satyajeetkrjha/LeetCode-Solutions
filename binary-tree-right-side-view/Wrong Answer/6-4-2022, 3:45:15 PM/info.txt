{"id":714419849,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1654371915,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/714419849/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void dfs(TreeNode* root ,vector <int> &res){\n        if(!root) return ;\n         res.push_back(root->val);\n        if(root->right){\n            dfs(root->right,res);\n        }\n        else if(root->left){\n            dfs(root->left,res);\n        }\n    }\n    \n    \n    vector<int> rightSideView(TreeNode* root) {\n        vector <int> res ;\n        dfs(root,res);\n        return res;\n    }\n};","compare_result":"11111100111011011111011010011111111111111110111100011111001011011111111111110111111101111111011100110110111011101111100010110010101111101011111001011001111011110111111110101101111011011011101111111111100110010010010","title_slug":"binary-tree-right-side-view"}