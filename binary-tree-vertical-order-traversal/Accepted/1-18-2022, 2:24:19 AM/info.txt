{"id":622341141,"lang":"cpp","time":"7 months, 1 week","timestamp":1642490659,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/622341141/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalOrder(TreeNode* root) {\n        queue <pair <TreeNode*, int> > q ;\n        vector <vector <int> > res ;\n        q.push({root,0});\n        if(!root){\n            return res ;\n        }\n        map <int ,vector <int> > m;\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i =0 ;i<sz;i++){\n                pair <TreeNode* ,int> pr = q.front();\n                q.pop();\n                TreeNode* cur = pr.first ;\n                int val = pr.second ;\n                m[val].push_back(cur->val);\n                if(cur->left){\n                    q.push({cur->left,val-1});\n                }\n                if(cur->right){\n                    q.push({cur->right,val+1});\n                }\n                \n            }\n        }\n        \n        \n        for(auto it :m){\n            cout <<\"it.first is \"<< it.first << endl;\n            vector <int> temp = it.second ;\n            for(int j =0 ;j< temp.size();j++){\n                cout << temp[j]<< \"  \";\n            }\n            cout << endl;\n            res.push_back(it.second);\n        }\n         return res ;\n        \n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-vertical-order-traversal"}