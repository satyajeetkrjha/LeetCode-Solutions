{"id":613198180,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1641340962,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/613198180/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalOrder(TreeNode* root) {\n        queue< pair <TreeNode* ,int> > q;\n        map <int ,vector <int> > m;\n        vector <vector <int> > res ;\n        if(!root){\n            return res ;\n        }\n        q.push({root,0});\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i =0 ;i<sz;i++){\n                 pair <TreeNode*,int> cur = q.front();\n                q.pop();\n                TreeNode* n = cur.first ;\n                int val = cur.second;\n                m[val].push_back(n->val);\n                if(n->left){\n                    q.push({n->left,val-1});\n                }\n                if(n->right){\n                    q.push({n->right,val+1});\n                }\n            }\n        } \n       for(auto it :m){\n           vector <int> v = it.second;\n           res.push_back(v);\n       } \n        return res ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-vertical-order-traversal"}