{"id":725964717,"lang":"cpp","time":"2 months, 1 week","timestamp":1655645210,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/725964717/","is_pending":"Not Pending","title":"Binary Tree Vertical Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalOrder(TreeNode* root) {\n        queue <pair <TreeNode*,int> > q ;\n        q.push({root,0});\n        map <int ,vector <int> > m;\n        vector <vector <int> > res ;\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i=0 ;i<sz;i++){\n                auto cur = q.front();\n                q.pop();\n                TreeNode* temp = cur.first ;\n                int val = cur.second ;\n                m[val].push_back(temp->val);\n                if(temp->left){\n                    q.push({temp->left ,val-1});\n                }\n                if(temp->right){\n                    q.push({temp->right ,val+1});\n                }\n            }\n        }\n        for(auto &it:m){\n            //cout << it.first << \" \";\n            res.push_back(it.second);\n        }\n        cout << endl;\n        return res ;\n    }\n};","compare_result":"1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-vertical-order-traversal"}