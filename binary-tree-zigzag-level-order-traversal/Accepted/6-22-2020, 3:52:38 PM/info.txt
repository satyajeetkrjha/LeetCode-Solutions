{"id":357093775,"lang":"cpp","time":"2 years, 2 months","timestamp":1592855558,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/357093775/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n#include <algorithm>\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector <vector <int> > ans;\n        if(root==NULL)\n            return ans;\n        vector<int> temp;\n        queue <TreeNode*> q;\n        int level =1;\n        q.push(root);\n        while(!q.empty()){\n            temp.clear();\n            int sz= q.size();\n            cout<<\"Queue before processing \"<<sz<<endl;\n            cout<<\"level is \"<<level<<endl;\n            for(int i=0;i<sz;i++){\n                TreeNode *cur=q.front();\n                q.pop();\n                temp.push_back(cur->val);\n                if(cur->left)\n                    q.push(cur->left);\n                if(cur->right)\n                    q.push(cur->right);\n                \n            }\n            cout<<\"temp is \"<<\" \";\n            for(int i=0;i<temp.size();i++){\n                cout<<temp[i]<<\" \";\n            }\n            cout<<endl;\n            if(level%2 ==0)\n                reverse(temp.begin(),temp.end());\n            ans.push_back(temp);\n            level++;\n            \n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}