{"id":550602595,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1630964087,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/550602595/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n       int level = 1;\n       queue<TreeNode*> q;\n       q.push(root);\n       vector <vector<int>> ans;\n        vector <int> v;\n        if(!root){\n            return ans ;\n        }\n       while(!q.empty()){\n           int sz = q.size();\n           for(int i =0 ;i<sz;i++){\n               TreeNode* cur = q.front();\n               q.pop();\n               v.push_back(cur->val);\n               if(cur->left){\n                   q.push(cur->left);\n               }\n               if(cur->right){\n                   q.push(cur->right);\n               }   \n           }\n           if( level % 2 == 0){\n               reverse(v.begin(),v.end());\n           }\n           ans.push_back(v);\n           v.clear();\n           level++;\n           \n       }\n        return ans ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}