{"id":703988233,"lang":"cpp","time":"3Â months","timestamp":1653129905,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/703988233/","is_pending":"Not Pending","title":"Burst Balloons","memory":"N/A","code":"class Solution {\npublic:\n    int maxCoins(vector<int>& nums) {\n        \n        int n = nums.size()+2;\n        \n        vector <int> newNums(n);\n        newNums[0] =1 ;\n        newNums[n-1]=1;\n        for(int i = 1;i<=n-2;i++){\n            newNums[i] = nums[i-1];\n        }\n        \n        /*\n        for(auto &it:newNums){\n            cout <<it << \"  \";\n        }\n        cout << endl;\n      */\n        \n        cout << endl;\n        vector <vector <int>> memo;\n        memo.resize(n,vector<int>(n,0));\n        \n        return dp(memo,newNums,1,n-2);\n    }\n    \n    \n    \n    int dp(vector <vector<int>>memo,vector <int> nums,int left,int right){\n        // base case \n        if(right < left){\n            return 0;\n        }\n        \n        if(memo[left][right]>0) \n            return memo[left][right];\n        \n        int res =0;\n        for(int i =left ;i<=right;i++){\n            int gain = nums[i]*nums[right+1]*nums[left-1];\n            int remaining = dp(memo,nums,left,i-1)+\n                dp(memo,nums,i+1,right);\n            res = max(res ,remaining+gain);\n        }\n        memo[left][right] = res;\n        return res;        \n    }\n    \n};","compare_result":"1111111111111111111111110000000000000000000000000000000000000000000000000","title_slug":"burst-balloons"}