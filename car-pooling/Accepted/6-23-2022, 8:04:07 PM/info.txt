{"id":729700101,"lang":"cpp","time":"2Â months","timestamp":1656029047,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/729700101/","is_pending":"Not Pending","title":"Car Pooling","memory":"10.5 MB","code":"class Solution {\npublic:\n    \n    priority_queue <pair <int,int>,vector<pair<int,int> > ,greater <pair <int,int>>> pq ;\n    \n    bool carPooling(vector<vector<int>>& trips, int capacity) {\n        int n = trips.size();\n        for(int i =0 ;i<trips.size();i++){\n            int people = trips[i][0];\n            int start = trips[i][1];\n            int end = trips[i][2];\n            pq.push({start,people});\n            pq.push({end,-people});\n        }\n        \n        int onboarded = 0;\n        while(!pq.empty()){\n            auto cur = pq.top();\n            pq.pop();\n            onboarded += cur.second ;\n            if(onboarded >capacity)\n                return false;\n        }\n        return true ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"car-pooling"}