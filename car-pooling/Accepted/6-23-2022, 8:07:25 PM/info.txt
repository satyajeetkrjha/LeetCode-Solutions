{"id":729701477,"lang":"cpp","time":"2Â months","timestamp":1656029245,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/729701477/","is_pending":"Not Pending","title":"Car Pooling","memory":"10.5 MB","code":"class Solution {\npublic:\n    \n    priority_queue<pair <int ,int> ,vector <pair <int ,int>> ,greater<pair <int ,int>>> pq ;\n    \n    bool carPooling(vector<vector<int>>& trips, int capacity) {\n        for(int i =0 ;i< trips.size();i++){\n            int people = trips[i][0];int start = trips[i][1];\n            int end = trips[i][2];\n            pq.push({start,+people});\n            pq.push({end,-people});\n        }\n        \n        int onboarding =0 ;\n        while(!pq.empty()){\n            onboarding+= pq.top().second ;\n            pq.pop();\n            if(onboarding> capacity){\n                return false;\n            }\n        }\n        return true ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"car-pooling"}