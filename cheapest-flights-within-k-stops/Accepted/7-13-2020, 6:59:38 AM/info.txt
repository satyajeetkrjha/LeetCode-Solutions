{"id":365998303,"lang":"cpp","time":"2 years, 1 month","timestamp":1594637978,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/365998303/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"32 MB","code":"class Solution {\npublic:\n   \n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {\n        vector <vector <vector <int>>> adj(n);\n        int sz =flights.size();\n       \n        for(auto f : flights) {\n            int from = f[0];\n            int to = f[1];\n            int cost = f[2];\n            adj[from].push_back({to, cost});\n        }\n        \n        queue <vector <int> > q;\n        q.push({src,0,-1});\n        int minCost =INT_MAX;\n        while(!q.empty()){\n            vector <int> cur =q.front();\n            q.pop();\n            int cur_node =cur[0];\n            int cur_amount=cur[1];\n            int cur_k=cur[2];\n          \n            if(cur_node ==dst){\n                minCost=min(minCost,cur_amount);\n                continue;\n            }\n           \n            for( auto p:adj[cur_node]){\n               \n                if(cur_k+1<=K && p[1]+cur_amount <minCost){\n                    q.push({p[0],p[1]+cur_amount,cur_k+1});\n                }\n            }\n        }\n        return minCost==INT_MAX?-1:minCost;   \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops"}