{"id":756726377,"lang":"cpp","time":"1Â month","timestamp":1658790229,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/756726377/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution {\npublic:\n    vector <pair <int ,int> > adj[1005];\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {\n        \n        for(int i =0 ;i<flights.size();i++){\n            vector <int> temp = flights[i];\n            int u = temp[0];int v = temp[1];int w = temp[2];\n            adj[u].push_back({v,w});\n        }\n        \n        queue <vector <int> > q;\n        q.push({src,0,-1});\n        int minCost = INT_MAX;\n        while(!q.empty()){\n            auto cur = q.front();\n            q.pop();\n            int cur_node = cur[0];int cur_weight = cur[1];int curK = cur[2];\n            if(cur_node == dst){\n                minCost = min(minCost ,cur_weight);\n                continue;\n            }\n            for(auto [neighbor,weight]:adj[cur_node]){\n                if(curK+1 <=K && cur_weight+weight <minCost){\n                    q.push({neighbor,cur_weight+weight,curK+1});\n                }\n            }\n            \n        }\n        return minCost==INT_MAX?-1:minCost;   \n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111110000","title_slug":"cheapest-flights-within-k-stops"}