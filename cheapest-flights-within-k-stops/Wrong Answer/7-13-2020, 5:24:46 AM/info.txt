{"id":365977264,"lang":"cpp","time":"2 years, 1 month","timestamp":1594632286,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/365977264/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution {\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {\n       vector <vector <vector <int>>> adj(n);\n       \n        for(int i=0;i<flights.size();i++){\n            for(int j=0;j<flights[i].size();j++){\n                int u =flights[j][0];int v = flights[j][1];int w = flights[j][2];\n                adj[u].push_back({v,w});\n            }\n        }\n        queue <vector <int> > q;\n        q.push({src,0,-1});\n        int minCost =INT_MAX;\n        while(!q.empty()){\n            vector <int> cur =q.front();\n            q.pop();\n            int cur_node =cur[0];\n            int cur_amount=cur[1];\n            int cur_k=cur[2];\n            if(cur_node ==dst){\n                minCost=min(minCost,cur_amount);\n                continue;\n            }\n            for( auto p:adj[cur_node]){\n                int adjacent_cost=p[1];\n                if(adjacent_cost+cur_amount <minCost && cur_k+1<=K){\n                    q.push({p[0],adjacent_cost+cur_amount,cur_k+1});\n                }\n            }\n        }\n        return minCost==INT_MAX?-1:minCost;   \n    }\n};","compare_result":"11100000000000000000000000000000000000000000000","title_slug":"cheapest-flights-within-k-stops"}