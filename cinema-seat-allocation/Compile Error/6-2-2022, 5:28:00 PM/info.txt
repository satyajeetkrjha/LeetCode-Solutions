{"id":713093582,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1654205280,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/713093582/","is_pending":"Not Pending","title":"Cinema Seat Allocation","memory":"N/A","code":"class Solution {\n    public int maxNumberOfFamilies(int n, int[][] reservedSeats) {\n        // Just code for rules, no need to merge intervals\n\t\t// Make sure you seat 2 families for rows with no reservations\n        // Greedy approach\n        // First possibility: Split seating at  [2, 3     4, 5]\n        // Second possibility: Split seating at [6, 7     8, 9]\n        // Only possibility:  Center four seats [  4, 5, 6, 7 ]\n        \n        int result = 0;\n        Map<Integer, List<Integer>> rowToSeatRes = new HashMap<>();\n        \n        for(int[] row : reservedSeats) {\n            if(rowToSeatRes.containsKey(row[0])) {\n                rowToSeatRes.get(row[0]).add(row[1]);\n            } else {\n                rowToSeatRes.put(row[0], new ArrayList<Integer>(Arrays.asList(row[1])));\n            }\n        }\n\t\t\n        // System.out.println(rowToSeatRes);\n        result = (n - rowToSeatRes.size()) * 2;         // These rows do not contain any reservations\n        \n       for(List<Integer> res : rowToSeatRes.values()) { // Check possible family seating in each row \n            boolean flag = false;\n            \n\t\t\t// Check first possibility\n            if(!res.contains(2) &&\n              !res.contains(3) &&\n              !res.contains(4) &&\n              !res.contains(5)) {\n                result++;\n                flag = true;\n            }\n            \n            // Check second possibility\n            if(!res.contains(6) &&\n              !res.contains(7) &&\n              !res.contains(8) &&\n              !res.contains(9)) {\n                result++;\n                flag = true;\n            }\n            \n            // Check middle seats only if first two are not used\n            if(!flag) {\n                if(!res.contains(4) &&\n                   !res.contains(5) &&\n                   !res.contains(6) &&\n                   !res.contains(7))\n                result++;\n            }\n        }\n        \n        return result;\n    }\n}","compare_result":null,"title_slug":"cinema-seat-allocation"}