{"id":755750950,"lang":"cpp","time":"1Â month","timestamp":1658695777,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/755750950/","is_pending":"Not Pending","title":"Combination Sum","memory":"11.3 MB","code":"class Solution {\npublic:\n    vector< vector <int> > res ;\n    int sum ;\n    int target ;\n    \n    void backtrack(vector<int>&candidates,vector<int> &cur,int start){\n        if(sum >target) return ;\n       // cout <<\"target is \"<< target << endl;\n        if(sum == target){\n            res.push_back(cur);\n            return;\n        }\n        for(int i =start;i<candidates.size();i++){\n            sum = sum+ candidates[i];\n            cur.push_back(candidates[i]);\n            backtrack(candidates,cur,i);\n            sum = sum - candidates[i];\n            cur.pop_back();\n        }\n    }\n    \n    vector<vector<int>> combinationSum(vector<int>& candidates, int t) {\n        sum =0;\n        target = t;\n        sort(candidates.begin(),candidates.end());\n        vector <int> temp;\n        backtrack(candidates,temp,0);\n        return res ;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum"}