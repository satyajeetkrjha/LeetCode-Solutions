{"id":636032249,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1644190517,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/636032249/","is_pending":"Not Pending","title":"Concatenated Words","memory":"N/A","code":"class Solution {\npublic:\n    vector<string> findAllConcatenatedWordsInADict(vector<string>& words) {\n        sort(words.begin(), words.end(), [](string& w1, string& w2){\n            return (w1.length() <= w2.length());\n        });\n        \n        /*\n        for(auto &word :words){\n            cout << word << \" \";\n        }\n        cout << endl;\n        */\n        vector<string> ret;\n        unordered_set<string> m;\n        \n        for(string w : words) {\n            vector<bool> dp(w.length()+1, false);\n            dp[0] = true;\n            for(int i = 0; i < w.length(); i++) {\n                for(int j = i; j >= 0; j--) {\n                    string s = w.substr(j, i-j+1); // O(length) operation\n                 //   cout <<\"string s is \"<< s<< endl;\n                    if(dp[j] && m.find(s) != m.end()) {\n                        dp[i+1] = true;\n                        break;\n                    }\n                }\n            }\n            \n            if(dp[w.length()])\n                ret.push_back(w);\n            \n            m.insert(w);\n        }\n        \n        return ret;\n    }\n};","compare_result":"110110000000000000000000000000000000000000000","title_slug":"concatenated-words"}