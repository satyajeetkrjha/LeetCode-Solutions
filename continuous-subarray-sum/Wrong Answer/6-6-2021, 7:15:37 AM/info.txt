{"id":503848348,"lang":"cpp","time":"1 year, 2 months","timestamp":1622978137,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/503848348/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        map <int ,int > m; // sum and index\n        m[0] = -1;\n        int sum =0;\n        for(int i =0;i< nums.size();i++){\n            sum = sum +nums[i];\n            if( k!= 0){\n                sum = sum %k;\n            }\n            cout<<\"sum val is \"<<sum<<endl;\n            cout <<\"m[sum] is \"<<m.count(sum)<<endl;\n            if(m.count(sum)>0){\n                if(i-m[sum] >=2){\n                    return true;\n                }\n            }\n            \n            m[sum] =i;\n            cout<<\"m[sum] after modification is \"<<m[sum]<<endl;\n        }\n        return false;\n    }\n};","compare_result":"1111110101100000010111011110111110111011111111111111111111111111111111111001111111111111111101","title_slug":"continuous-subarray-sum"}