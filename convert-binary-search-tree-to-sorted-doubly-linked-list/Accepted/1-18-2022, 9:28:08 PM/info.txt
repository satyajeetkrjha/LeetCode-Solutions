{"id":622909911,"lang":"cpp","time":"7Â months, 1Â week","timestamp":1642559288,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/622909911/","is_pending":"Not Pending","title":"Convert Binary Search Tree to Sorted Doubly Linked List","memory":"7.7 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n        left = NULL;\n        right = NULL;\n    }\n\n    Node(int _val, Node* _left, Node* _right) {\n        val = _val;\n        left = _left;\n        right = _right;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* head = NULL ;\n    Node* tail =NULL;\n    \n    void dfs(Node* root){\n        if(!root) return ;\n        dfs(root->left);\n        if(head == NULL){\n            head = root ;\n        }\n        else{\n            root ->left = tail ;\n            tail->right = root ;\n        }\n        tail = root ;\n        dfs(root->right);\n    }\n    \n    \n    Node* treeToDoublyList(Node* root) {\n        if(!root) return NULL ;\n        dfs(root);\n        head->left = tail ;\n        tail->right = head ;\n        return head ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"convert-binary-search-tree-to-sorted-doubly-linked-list"}