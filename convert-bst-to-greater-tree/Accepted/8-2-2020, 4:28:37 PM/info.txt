{"id":375094488,"lang":"cpp","time":"2Â years","timestamp":1596400117,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/375094488/","is_pending":"Not Pending","title":"Convert BST to Greater Tree","memory":"27.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int pre=0;\n    TreeNode* inorder(TreeNode* root){\n        if( root ==NULL){\n            return NULL;\n        }\n        inorder(root->right);\n        pre = root->val =root->val+pre;\n        inorder(root->left);\n        return root;\n        \n    }\n    TreeNode* convertBST(TreeNode* root) {\n       TreeNode* ans = inorder(root);\n        return ans ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-bst-to-greater-tree"}