{"id":616636678,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1641780328,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/616636678/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"342.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* convert(vector <int> nums ,int low ,int high){\n        if(low > high){\n            return NULL;\n        }\n        int mid =(low+high)/2;\n        TreeNode* res = new TreeNode(nums[mid]);\n        res ->left = convert(nums ,low ,mid-1);\n        res ->right = convert(nums,mid+1,high);\n        return res ;\n    }\n    \n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        int n = nums.size();\n        return convert(nums ,0 ,n-1);\n        \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}