{"id":356124550,"lang":"cpp","time":"2 years, 2 months","timestamp":1592660143,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/356124550/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"20.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* helper(int start,int end , vector<int>& nums){\n        if(start>end)\n            return NULL;\n        int mid =(start+end)/2;\n        TreeNode* root=new TreeNode(nums[mid]);\n        root->left=helper(start,mid-1,nums);\n        root->right = helper(mid+1,end,nums);\n        return root;\n        \n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        int start =0;\n        int end =nums.size()-1;\n        TreeNode* ans =helper(start,end,nums);\n        return ans;\n    }\n\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}