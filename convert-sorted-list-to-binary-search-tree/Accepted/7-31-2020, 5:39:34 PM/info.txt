{"id":374189462,"lang":"cpp","time":"2Â years","timestamp":1596231574,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/374189462/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"24.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedListToBST(ListNode* head) {\n       vector <int> v;\n       ListNode* cur = head;\n        while(cur!=NULL){\n            v.push_back(cur->val);\n            cur = cur->next;\n        }\n        int n = v.size();\n        if( n ==0)\n            return NULL;\n        int left =0;\n        int right =n-1;\n        TreeNode* ans =buildBst(v,left,right);\n        return ans ;\n    }\n    TreeNode* buildBst(vector <int> &v ,int left ,int right){\n        if(left>right){\n            return NULL;\n        }\n        int mid = (left+right)/2;\n        TreeNode* root = new TreeNode(v[mid]);\n        root ->left = buildBst(v,left,mid-1);\n        root->right =buildBst(v,mid+1,right);\n        return root; \n        \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}