{"id":367048335,"lang":"cpp","time":"2 years, 1 month","timestamp":1594835825,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/367048335/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"31.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        if(!root)\n            return 0;\n        queue<TreeNode*> q;\n        q.push(root);\n        int ans =0;\n        while(!q.empty()){\n            int sz =q.size();\n           // cout<<\"sz is \"<<sz<<endl;\n            ans+=sz;\n           // cout<<\"ans is \"<<ans<<endl;\n            for(int i=0;i<sz;i++){\n                TreeNode* cur =q.front();\n                q.pop();\n              //  cout<<\"cur->val is\"<<cur->val<<endl;\n                if(cur->left!=NULL)\n                    q.push(cur->left);\n                if(cur->right!=NULL)\n                    q.push(cur->right);\n            }\n          //  cout<<\"after loop\"<<endl;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}