{"id":499791681,"lang":"cpp","time":"1 year, 2 months","timestamp":1622282215,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/499791681/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"86.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans =0;\n    void dfs(TreeNode* root ,int maxVal){\n        if(!root){\n            return ;\n        }\n        if(root-> val >= maxVal){\n            ans++;\n            maxVal = max(maxVal,root->val);\n        }\n        dfs(root->left,maxVal);\n        dfs(root->right,maxVal);\n    }\n    int goodNodes(TreeNode* root) {\n        dfs(root,INT_MIN);\n            return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}