{"id":778555819,"lang":"cpp","time":"5 days, 11 hours","timestamp":1661005372,"status_display":"Accepted","runtime":"146 ms","url":"/submissions/detail/778555819/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"86.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans =0 ;\n    void dfs(TreeNode* root,int val){\n        if(!root)\n            return ;\n        if(root->val >=val){\n          ans++;\n          val = root->val;\n        }\n        dfs(root->left,val);\n        dfs(root->right,val);\n    }\n    \n    \n    \n    int goodNodes(TreeNode* root) {\n        dfs(root,INT_MIN);\n        return ans ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}