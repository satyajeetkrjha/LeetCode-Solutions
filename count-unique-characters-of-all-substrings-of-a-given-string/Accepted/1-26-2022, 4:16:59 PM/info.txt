{"id":628512507,"lang":"cpp","time":"7Â months","timestamp":1643231819,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/628512507/","is_pending":"Not Pending","title":"Count Unique Characters of All Substrings of a Given String","memory":"29.5 MB","code":"\n#include <iostream>\ntypedef long long int ll ;\nclass Solution {\npublic:\n    int uniqueLetterString(string s) {\n        const ll MOD = 1e9+7;\n        int n = s.size();\n        vector<ll> L(n ,-1);\n        vector<ll> R(n ,-1);\n    \n        vector<ll> LastL(26,-1);\n        vector<ll> LastR(26,n);\n        \n        for(int i =0 ;i<n;i++){\n            L[i] = i - LastL[s[i]-'A'];\n            LastL[s[i]-'A'] =i;\n        }\n        \n        for(int i = n-1;i>=0 ;i--){\n            R[i] = LastR[s[i]-'A']-i;\n            LastR[s[i]-'A'] =i;\n        }\n        /*\n        for(int i=0 ;i<n;i++){\n            cout <<L[i]<< \" \";\n        }\n        cout << endl;\n        \n        for(int i =0 ;i<n;i++){\n            cout <<R[i]<< \" \";\n        }\n        cout << endl;\n        */\n        int ans =0 ;\n        for(int i =0 ;i<n;i++){\n            ans= (ans+(L[i]*R[i])%MOD)%MOD;\n        }\n        return ans ;\n        \n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-unique-characters-of-all-substrings-of-a-given-string"}