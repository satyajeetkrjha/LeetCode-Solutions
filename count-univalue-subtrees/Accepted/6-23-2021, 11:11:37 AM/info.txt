{"id":512122094,"lang":"cpp","time":"1 year, 2 months","timestamp":1624461097,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/512122094/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n    pair <int,int> dfs(TreeNode* root){\n        if(!root){\n            return {INT_MAX,INT_MIN};\n        }\n        \n      auto [leftmin,leftmax] = dfs(root->left);\n      auto [rightmin,rightmax] = dfs(root->right);\n        \n     leftmin = min(leftmin,root->val);\n     leftmax = max(leftmax,root->val);\n        \n     rightmin = min (rightmin,root->val);\n     rightmax = max (rightmax ,root->val);\n     \n      int totalmin = min(leftmin,rightmin);\n       int totalmax = max(leftmax,rightmax);\n        if(totalmin ==totalmax){\n            ans++;\n        }\n        cout<<\"totalmin \"<<totalmin<<endl;\n        cout<<\"totalmax is \"<<totalmax <<endl;\n        return {totalmin,totalmax};\n        \n    }\n    int countUnivalSubtrees(TreeNode* root) {\n        dfs(root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-univalue-subtrees"}