{"id":512139886,"lang":"cpp","time":"1 year, 2 months","timestamp":1624463836,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/512139886/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"16.5 MB","code":"typedef pair<int,int> range;\nrange combine(const range& a, const range& b) {\n  return {min(a.first,b.first), max(a.second,b.second)};\n}\n\nclass Solution {\n public:\n  int ans;\n  range dfs(TreeNode* root) {\n    if (!root) return {INT_MAX, INT_MIN};\n    //range is the datatype equal to pair<int,int>\n    //ret is the variable name\n    //range ret{a,b} means initialise ret with .first as a and .second as b\n    //this is called brace initialisation  \n    range ret{root->val, root->val};\n    ret = combine(ret, combine(dfs(root->left), dfs(root->right)));\n    if (ret.first == ret.second) ans++;\n\n    return ret;\n  }\n  int countUnivalSubtrees(TreeNode* root) {\n    ans = 0;\n    dfs(root);\n    return ans;\n  }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-univalue-subtrees"}