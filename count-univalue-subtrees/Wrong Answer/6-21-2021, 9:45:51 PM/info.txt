{"id":511352292,"lang":"cpp","time":"1 year, 2 months","timestamp":1624326351,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/511352292/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n    pair <int,int> dfs(TreeNode* root){\n        if(root == NULL){\n            return {0,0};\n        }\n        auto[leftsum,leftcount] = dfs(root->left);\n        auto [rightsum,rightcount] = dfs(root->right);\n        int totalsum = leftsum +rightsum +root->val;\n        int nodecount = leftcount +rightcount+1;\n        if( root->val == (totalsum/nodecount)){\n            ans++;\n        }\n        return {totalsum,nodecount};\n    }\n    int countUnivalSubtrees(TreeNode* root) {\n        dfs(root);\n        return ans;\n    }\n};","compare_result":"11111110010000001111001110011111111100111111111111111111111111111111111111111111111111111111111101111111111111111111111111111101111111111011111111111111111111111110111111111111110111111111111110110111","title_slug":"count-univalue-subtrees"}