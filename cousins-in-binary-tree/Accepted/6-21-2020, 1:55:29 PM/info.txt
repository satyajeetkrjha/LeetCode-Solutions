{"id":356641230,"lang":"cpp","time":"2 years, 2 months","timestamp":1592762129,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/356641230/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"11.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n       \n        queue<TreeNode* >q;\n        q.push(root);\n        bool xfound =false;\n        bool yfound =false;\n        while(!q.empty()){\n            \n            int sz = q.size();\n            cout<<\"Queue Processing\"<<endl;\n            cout<<\"Queue size is \"<<sz<<endl;\n            for(int i=0;i<sz;i++){\n                TreeNode* cur =q .front();\n                q.pop();\n                // you are at current node and current node has x and y as child nodes\n                if(cur->left && cur->left->val == x && cur->right && cur->right->val ==y){\n                    return false;\n                }\n                 if(cur->left && cur->left->val == y && cur->right && cur->right->val ==x){\n                    return false;\n                }\n                // if ur current node's value is either x or y mark xfound and yfound to be true\n                cout<<\"cur->val is \"<<cur->val<<endl;\n                if( cur->val==x){\n                    xfound =true;\n                }\n                if(cur->val==y){\n                    yfound =true;\n                }\n                if(cur->left)\n                q.push(cur->left);\n                \n                if(cur->right)\n                q.push(cur->right);\n                \n                \n            }\n            // after every level that we do in bfs we check for things \n        if(xfound && yfound )\n            return true;\n        if(xfound || yfound)\n            return false;\n        }\n        \n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree"}