{"id":356643555,"lang":"cpp","time":"2 years, 2 months","timestamp":1592762540,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/356643555/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isCousins(TreeNode* root, int x, int y) {\n        queue<TreeNode*> q;\n        bool xfound =true;\n        bool yfound =true;\n        \n        q.push(root);\n        while(!q.size()){\n            int sz =q.size();\n            for(int i=0;i<sz;i++){\n                TreeNode* cur =q.front();\n            q.pop();\n            if(cur ->left && cur->left->val ==x && cur->right && cur->right->val ==y){\n                return false;\n            }\n            if(cur->left && cur->left->val == y && cur->right && cur->right->val ==x){\n                return false;\n            }\n            if(cur->val ==x){\n                xfound=false;\n            }\n            if(cur->val ==y){\n                yfound =false;\n            }\n            if(cur->left)\n                q.push(cur->left);\n            if(cur->right)\n                q.push(cur->right);\n            }\n           if(xfound || yfound )\n              return false;\n           if(xfound && yfound )\n            return true;  \n        }\n        return false;\n        \n    }\n};","compare_result":"10111111111110111110111111111111110101111110111010011100111111110110011111110111111111110011000011111100","title_slug":"cousins-in-binary-tree"}