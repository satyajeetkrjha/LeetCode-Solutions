{"id":702016666,"lang":"cpp","time":"3 months, 1 week","timestamp":1652868566,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/702016666/","is_pending":"Not Pending","title":"Critical Connections in a Network","memory":"N/A","code":"class Solution {\npublic:\n    vector <int> adj[10005];\n    vector <int> visited ,tin ,low ;\n    int timer;\n    \n    vector <vector <int> > res ;\n    void dfs (int u ,int p =-1){\n        visited[u] =1 ;\n        tin[u] = low[u] = timer++;\n        for(int i =0 ;i<adj[u].size();i++){\n            int v = adj[u][i];\n            if( v == p ) continue ;\n            if(visited[v]){\n                low[u] = min(low[u],tin[v]);\n            }\n            else{\n                dfs(v,u);\n                low[u] = min(low[u],low[v]);\n                if(low[v] > tin[u]){\n                    vector <int> temp ={v,u};\n                    res.push_back(temp);\n                }\n                \n            }\n        }\n    }\n    \n    \n    vector<vector<int>> criticalConnections(int n, vector<vector<int>>& connections) {\n        \n      \n        \n        for(int i =0 ;i<n;i++){\n            int u  = connections[i][0];\n            int v = connections[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        \n        timer =0 ;\n        visited.assign(n+1,0);\n        tin.assign(n+1,-1);\n        low.assign(n+1,-1);\n        \n        for(int i =0 ;i<n; i++){\n            if(!visited[i]){\n                dfs(i);\n            }\n        }\n        \n    return res;\n    }\n};","compare_result":"10000000000000000","title_slug":"critical-connections-in-a-network"}