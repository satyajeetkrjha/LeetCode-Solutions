{"id":510720870,"lang":"cpp","time":"1 year, 2 months","timestamp":1624210304,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/510720870/","is_pending":"Not Pending","title":"Decode String","memory":"11 MB","code":"class Solution {\npublic:\n    string decodeString(string s) {\n        stack <char > stack;\n        \n        for(int i=0;i<s.size();i++){\n            // super simple step\n            if(s[i] != ']'){\n                stack.push(s[i]);\n            }\n            else if (s[i] == ']'){\n                // take out everything from stack now and add it to decoded string until you find an opening bracket\n                string decodedstring =\"\";\n                while(stack.top() != '['){\n                  decodedstring +=stack.top();\n                    stack.pop();\n                }\n                cout<<\"decoded string is \"<<decodedstring <<endl;\n                // pop the opening bracket now as we find one opening bracket \n                stack.pop();\n                // now we are sure to find digits so build the digit \n                \n                int base =1;\n                int k =0;\n                \n               \n                while(!stack.empty() && isdigit(stack.top())){\n                    k  = k+((stack.top()-'0')*base);\n                    cout<<\"k now is \"<<k<<endl;\n                    base = base*10;\n                    cout<<\"base is \"<<base <<endl;\n                    stack.pop();\n                }\n                cout<<\"k is \"<<k<<endl;\n                int len = decodedstring.size();\n                \n                while(k!=0){\n                    for(int index = len -1;index >=0;index --){\n                      stack.push(decodedstring[index]);\n                    }\n                    k--;\n                }\n            }\n        }\n        \n        string result ;\n        for(int i = stack.size() -1;i>=0;i--){\n            cout<<\"st.top is \"<<stack.top()<<endl;\n            result = stack.top()+result;\n            stack.pop();\n        }\n    \n        return result ;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string"}