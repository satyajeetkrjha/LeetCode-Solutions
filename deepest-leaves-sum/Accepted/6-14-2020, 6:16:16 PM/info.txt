{"id":353725228,"lang":"cpp","time":"2 years, 2 months","timestamp":1592172976,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/353725228/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n         queue <TreeNode*> q;\n         TreeNode* temp =root;\n         q.push(temp);\n         int sum =0;\n         while(!q.empty()){\n              int sz = q.size();\n             sum =0;\n              for(int i=0;i<sz;i++){\n                  TreeNode* cur =q.front();\n                  q.pop();\n                  sum+= cur->val;\n                  if(cur->left)\n                      q.push(cur->left);\n                  if(cur->right)\n                      q.push(cur->right);\n                  \n              }\n         }\n        cout<<\"sum is \"<<sum<<endl;\n        return sum;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}