{"id":737124542,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1656821803,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/737124542/","is_pending":"Not Pending","title":"Degree of an Array","memory":"26.1 MB","code":"class Solution {\npublic:\n    int findShortestSubArray(vector<int>& nums) {\n           map <int,int> count ,first ;\n        int degree = 0 ;\n        int res =0;\n        for(int i =0 ;i< nums.size();i++){\n             if(first.count(nums[i]) == 0){\n                 first[nums[i]] = i;\n             }\n           if(++count[nums[i]]> degree){\n                degree = count[nums[i]];\n                res = i - first[nums[i]]+1 ;\n            }\n            else if(count[nums[i]] == degree){\n                res  = min(res , i-first[nums[i]]+1);\n            }\n        }\n        return res ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"degree-of-an-array"}