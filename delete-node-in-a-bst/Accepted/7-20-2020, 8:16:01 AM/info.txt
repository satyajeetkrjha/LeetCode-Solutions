{"id":369154207,"lang":"cpp","time":"2 years, 1 month","timestamp":1595247361,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/369154207/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"15.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* findMin(TreeNode* root){\n        while(root->left !=NULL){\n            root = root ->left;\n        }\n        return root ;\n    }\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if(root ==NULL)\n            return root;\n        if(root->val >key){\n            root->left =deleteNode(root->left,key);\n        }\n        else if(root->val <key){\n            root->right =deleteNode(root->right,key);\n        }\n        else{\n            if( root ->left ==NULL && root->right ==NULL){\n                delete(root);\n                root =NULL;\n            }\n            else if(root->left ==NULL){\n                TreeNode* temp = root;\n                root = root ->right;\n                delete temp;\n               \n            }\n            else if(root->right ==NULL){\n                TreeNode* temp = root ;\n                root =root->left;\n                delete temp;\n            }\n            else {\n                TreeNode* temp = findMin(root->right);\n                root->val = temp->val;\n                root->right = deleteNode(root->right,temp->val);\n            }\n        }\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst"}