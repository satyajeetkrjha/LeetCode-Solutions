{"id":727704159,"lang":"cpp","time":"2Â months","timestamp":1655826872,"status_display":"Accepted","runtime":"1424 ms","url":"/submissions/detail/727704159/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if(head->next == NULL)\n            return NULL;\n            \n        ListNode* slow = head ;\n        ListNode* fast = head->next->next ;\n        while(fast && fast->next){\n            slow = slow ->next ;\n            fast = fast->next->next;\n        }\n        cout << slow->val << endl;\n        slow->next = slow ->next->next ;\n        return head ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list"}