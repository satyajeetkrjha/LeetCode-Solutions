{"id":727092347,"lang":"cpp","time":"2Â months","timestamp":1655761364,"status_display":"Accepted","runtime":"1753 ms","url":"/submissions/detail/727092347/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"561.9 MB","code":"\nstruct Node{\n    \n    Node* links [26];\n    bool flag = false ;\n    \n    void set(char ch ,Node* node){\n        links[ch-'a'] = node;\n    }\n    Node* get(char ch){\n      return links[ch-'a'];\n    }\n    \n    bool containsKey(char ch){\n        return links[ch-'a']!=NULL;\n    }\n    \n    void setEnd(){\n        flag = true;\n    }\n    \n    bool isEnd(){\n        return flag;\n    }  \n};\n\n\nclass WordDictionary {\n    \nprivate :\n   Node* root ;\npublic:\n    \n   \n    WordDictionary() {\n        root = new Node();\n    }\n    \n    void insert(string word){\n        Node* node = root ;\n        for(int i =0 ;i<word.size();i++){\n            char ch = word[i];\n            if(!node->containsKey(ch)){\n                node->set(ch,new Node());\n            }\n            node = node->get(ch);\n        }\n        node->setEnd();\n    }\n    \n    bool searchTrie(Node* node ,string &word ,int pos){\n        if(pos == word.size()){\n            return node->isEnd() ;\n        }\n        \n        if(word[pos] == '.'){\n            for(int i = 0 ;i< 26;i++){\n                if(node->links[i] && searchTrie(node->links[i] ,word,pos+1))\n                    return true;\n            }\n            return false ;\n         }\n        \n        node = node->get(word[pos]);\n        return node && searchTrie(node,word,pos+1);\n   }\n    \n    void addWord(string word) {\n        insert(word);\n    }\n    \n    bool search(string word) {\n         Node* node = root ;\n         return searchTrie(node ,word,0);\n    }\n};\n\n/**\n * Your WordDictionary object will be instantiated and called as such:\n * WordDictionary* obj = new WordDictionary();\n * obj->addWord(word);\n * bool param_2 = obj->search(word);\n */","compare_result":"11111111111111111111111111111","title_slug":"design-add-and-search-words-data-structure"}