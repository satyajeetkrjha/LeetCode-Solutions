{"id":604278142,"lang":"cpp","time":"8 months, 1 week","timestamp":1639971092,"status_display":"Accepted","runtime":"244 ms","url":"/submissions/detail/604278142/","is_pending":"Not Pending","title":"Detect Cycles in 2D Grid","memory":"57.1 MB","code":"class Solution {\npublic:\n    int count =0;\n    bool dfs(vector<vector<char>>& grid,int r ,int c ,int prevr,int prevc,vector <vector<int>> &visited,char ch){\n        if(r < 0 || c < 0 || r >= grid.size() || c >= grid[0].size() || grid[r][c]!=ch){\n            return false;\n        }\n        if(visited[r][c] -visited[prevr][prevc] >= 3){\n            return true;\n        }\n        if(visited[r][c]!=0)\n            return false;\n        \n        visited[r][c]=count++;\n        \n        \n        return \n            dfs(grid,r+1,c,r,c,visited,grid[r][c]) ||\n            dfs(grid,r-1,c,r,c,visited,grid[r][c]) ||\n            dfs(grid,r,c+1,r,c,visited,grid[r][c]) ||\n            dfs(grid,r,c-1,r,c,visited,grid[r][c]);\n        \n    }\n    \n    \n    \n    bool containsCycle(vector<vector<char>>& grid) {\n        int rows = grid.size();\n        int columns = grid[0].size();\n        vector < vector <int> > visited(rows ,vector <int> (columns,0));\n        for(int i =0 ;i<rows;i++){\n            for(int j =0 ;j<columns ;j++){\n                if(visited[i][j] ==0){\n                    bool ans = dfs(grid,i,j,i,j,visited,grid[i][j]);\n                    if(ans){\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"detect-cycles-in-2d-grid"}