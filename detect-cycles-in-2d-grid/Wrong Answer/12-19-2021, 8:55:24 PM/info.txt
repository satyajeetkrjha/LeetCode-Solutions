{"id":604245487,"lang":"cpp","time":"8 months, 1 week","timestamp":1639965324,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/604245487/","is_pending":"Not Pending","title":"Detect Cycles in 2D Grid","memory":"N/A","code":"class Solution {\npublic:\n    int dx[4] ={1,-1,0,0};\n    int dy[4] ={0,0,1,-1};\n    int rows ,columns ;\n    \n    int dfs (vector<vector<char>>& grid, vector < vector <int> > visited,int r ,int c,char ch,int &val){\n        visited[r][c] =1;\n        val++;\n        for(int i =0 ;i<4 ;i++){\n            int nr = r + dx[i];\n            int nc = c+ dy[i];\n            if(nr >=0 && nr < rows && nc >=0 & nc < columns && !visited[nr][nc] && grid[nr][nc] == ch ){\n                dfs(grid,visited ,nr,nc,grid[nr][nc],val);\n            }\n        }\n        return val;\n        \n        \n    }\n    bool containsCycle(vector<vector<char>>& grid) {\n        rows = grid.size();\n        columns = grid[0].size();\n        vector < vector <int> > visited(rows,vector <int> (columns,0));\n        \n        for(int r =0 ;r <rows ;r++){\n            for(int c =0 ;c< columns ;c++){\n                char ch = grid[r][c];\n                if(visited[r][c] == 0){\n                    int val =0;\n                    int len = dfs (grid,visited, r,c ,ch,val );\n                    if(len >=4){\n                        return true;\n                    }\n                }\n            }\n        }\n      return false;\n    }\n};","compare_result":"111111001111110111111011011000100011010010000101001000001100110011010000000","title_slug":"detect-cycles-in-2d-grid"}