{"id":654336180,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1646547778,"status_display":"Accepted","runtime":"632 ms","url":"/submissions/detail/654336180/","is_pending":"Not Pending","title":"Detect Squares","memory":"93.5 MB","code":"class DetectSquares {\npublic:\n    \n    vector <pair <int ,int> > vec;\n    map <pair <int ,int> ,int> m;\n    \n    DetectSquares() {\n        \n    }\n    \n    void add(vector<int> point) {\n        vec.push_back({point[0],point[1]});\n        pair <int,int> temp = {point[0],point[1]};\n        m[temp]++;\n    }\n    \n    int count(vector<int> point) {\n        int qx = point[0];\n        int qy = point[1];\n        int ans =0;\n        for(auto &[x,y] : vec){\n            if(abs(qx-x) != abs(qy-y) || abs(qy-y) == 0){\n                continue;\n            }\n            pair <int ,int> firstpair = {x,qy};\n            pair <int,int> secondpair = {qx,y};\n            ans += m[firstpair]*m[secondpair];\n        }\n        return ans ;\n    }\n    \n};\n\n/**\n * Your DetectSquares object will be instantiated and called as such:\n * DetectSquares* obj = new DetectSquares();\n * obj->add(point);\n * int param_2 = obj->count(point);\n */","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"detect-squares"}