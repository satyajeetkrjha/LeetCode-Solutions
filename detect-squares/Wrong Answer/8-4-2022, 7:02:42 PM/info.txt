{"id":765435419,"lang":"cpp","time":"3Â weeks","timestamp":1659654162,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/765435419/","is_pending":"Not Pending","title":"Detect Squares","memory":"N/A","code":"class DetectSquares {\npublic:\n    vector <pair <int ,int> > vec;\n    map<pair<int ,int> ,int> m;\n    DetectSquares() {\n        \n    }\n    \n    void add(vector<int> point) {\n        vec.push_back({point[0],point[1]});\n        m[{point[0],point[1]}]++;\n    }\n    \n    int count(vector<int> point) {\n        \n        int ans =0;\n        int qx = point[0] ; // query x\n        int qy = point[1] ; // query y \n        \n        for(auto[x,y]:vec){\n            if(abs(qx-x)!=abs(qy-y)){\n                continue ;\n            }\n            pair <int ,int> topleft = make_pair(x,qy);\n            pair <int ,int> bottomleft = make_pair(qx,y);\n            ans += m[topleft]*m[bottomleft];\n        }\n        return ans ;\n        \n        \n        \n    }\n};\n\n/**\n * Your DetectSquares object will be instantiated and called as such:\n * DetectSquares* obj = new DetectSquares();\n * obj->add(point);\n * int param_2 = obj->count(point);\n */","compare_result":"111111111111111100000000000000000000000000111011111111","title_slug":"detect-squares"}