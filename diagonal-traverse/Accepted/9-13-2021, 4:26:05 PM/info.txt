{"id":554393266,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1631564765,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/554393266/","is_pending":"Not Pending","title":"Diagonal Traverse","memory":"31.3 MB","code":"class Solution {\npublic:\n    vector<int> findDiagonalOrder(vector<vector<int>>& mat) {\n        vector <int> res;\n        // map of sum of indices and the vector which contains all the elements with that sum\n        map <int ,vector <int> > m; \n        int r = mat.size() ;\n        if(r  == 0 )\n            return res ;\n        \n        int c = mat[0].size();\n        \n        for(int i =0 ;i<r;i++){\n            for(int j =0;j<c;j++){\n                int sum = i +j ;\n                m[sum].push_back(mat[i][j]);\n            }\n        }\n        \n        /*\n        so our map has\n        0  1\n        1  2 4\n        2  3 5 7 \n        .......\n        ......\n        */\n        int index =0 ;\n        for(auto element :m){\n            int sum = element.first ;\n            vector <int> values= element.second ;\n            if(index % 2 ==0){\n                reverse(values.begin(),values.end());\n                for(int i =0 ;i<values.size();i++){\n                    res.push_back(values[i]);\n                }\n            }\n            else{\n                for(int i =0 ;i<values.size();i++){\n                    res.push_back(values[i]);\n                }\n            }\n            index++;\n        }\n        \n        return res ;\n        \n        \n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"diagonal-traverse"}