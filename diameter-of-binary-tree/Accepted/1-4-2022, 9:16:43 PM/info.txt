{"id":613261824,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1641349003,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/613261824/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    \n    int diameter ;\n    int diameterOfBinaryTree(TreeNode* root) {\n        diameter = 0 ;\n        depth(root);\n        return diameter ;\n    }\n    \n    int depth(TreeNode* root){\n        if(!root){\n            return 0;\n        }\n        int ld = depth(root->left);\n        int rd = depth(root->right);\n        diameter = max(diameter ,ld+rd);\n        return max(ld,rd)+1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}