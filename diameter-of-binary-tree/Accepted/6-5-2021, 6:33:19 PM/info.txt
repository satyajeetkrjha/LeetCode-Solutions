{"id":503565851,"lang":"cpp","time":"1 year, 2 months","timestamp":1622932399,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/503565851/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n int diamter;\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        diamter = 0;\n        longestpath(root);\n        return diamter;\n    }\n    int longestpath(TreeNode* root){\n        if (root == NULL){\n            return 0;\n        }\n        int leftpath = longestpath(root->left);\n        int rightpath = longestpath(root->right);\n        diamter = max(diamter,leftpath+rightpath);\n        return max(leftpath,rightpath)+1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}