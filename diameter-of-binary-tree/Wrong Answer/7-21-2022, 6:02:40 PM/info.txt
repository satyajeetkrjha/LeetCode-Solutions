{"id":753253249,"lang":"cpp","time":"1Â month","timestamp":1658440960,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/753253249/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int diameter ;\n    int dfs(TreeNode* root){\n        if(!root)\n            return 0;\n        int lh = dfs(root->left);\n        int rh = dfs(root->right);\n        diameter = max(diameter ,lh+rh);\n        return max(lh,lh)+1;\n    }\n    \n    \n    \n    \n    \n    int diameterOfBinaryTree(TreeNode* root) {\n        diameter =0 ;\n        dfs(root);\n        return diameter ;\n    }\n};","compare_result":"11111101011101000011000111101011000001100000000000011101000000000001111101100000100100010000000000000000","title_slug":"diameter-of-binary-tree"}