{"id":778501482,"lang":"cpp","time":"5 days, 12 hours","timestamp":1660999876,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/778501482/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int diameter ;\n    int dfs(TreeNode* root){\n        if(!root)\n            return 0 ;\n        int lh = dfs(root->left);\n        int rh = dfs(root->right);\n        diameter  = max(diameter ,lh+rh);\n        return max(lh,rh)+1;\n    }\n    \n    \n    \n    int diameterOfBinaryTree(TreeNode* root) {\n        if(!root)\n            return 0 ;\n        diameter =0 ;\n         return dfs(root);\n    }\n};","compare_result":"10000100001001101000000010000001001001111101000001000000000000000000001101000011110100100010000010000000","title_slug":"diameter-of-binary-tree"}