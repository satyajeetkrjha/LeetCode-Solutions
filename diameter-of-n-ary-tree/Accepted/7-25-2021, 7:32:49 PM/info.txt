{"id":528305295,"lang":"cpp","time":"1 year, 1 month","timestamp":1627255969,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/528305295/","is_pending":"Not Pending","title":"Diameter of N-Ary Tree","memory":"10.9 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> children;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n    }\n\n    Node(int _val, vector<Node*> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    int res = 0;\n    int maximumdepth(Node* root){\n        if(root->children.size() == 0)\n            return 0;\n        \n        int maxheight1 = 0 ;int maxheight2 = 0;\n        for(Node* child: root->children ){\n            // cout<<\"child->val is \"<<child->val<<endl;\n            int parentheight = maximumdepth(child)+1;\n            // cout<<\"parentheight is \"<<parentheight <<endl;\n            if(parentheight >maxheight1){\n                maxheight2 = maxheight1;\n                maxheight1 = parentheight;\n            }\n            else if(parentheight >maxheight2){\n                maxheight2= parentheight;\n            }\n            int distance = maxheight1 +maxheight2;\n            res = max(res,distance);\n        }\n        return maxheight1;\n        \n    }\n    int diameter(Node* root) {\n        maximumdepth(root);\n        return res ;\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"diameter-of-n-ary-tree"}