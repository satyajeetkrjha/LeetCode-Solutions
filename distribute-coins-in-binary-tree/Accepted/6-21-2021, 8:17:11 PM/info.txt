{"id":511326699,"lang":"cpp","time":"1 year, 2 months","timestamp":1624321031,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/511326699/","is_pending":"Not Pending","title":"Distribute Coins in Binary Tree","memory":"13.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int steps =0;\n    int dfs(TreeNode *root){\n        if(!root){\n            return 0;\n        }\n        int left= dfs(root->left); // defecit or excess in left\n        int right = dfs(root->right); // defecit or excess in right \n        steps += abs(left)+abs(right); \n        return left+right +(root->val -1);\n        \n        \n    }\n    int distributeCoins(TreeNode* root) {\n        dfs(root);\n        return steps ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distribute-coins-in-binary-tree"}