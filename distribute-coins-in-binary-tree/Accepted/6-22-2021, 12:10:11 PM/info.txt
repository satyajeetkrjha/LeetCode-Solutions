{"id":511654947,"lang":"cpp","time":"1 year, 2 months","timestamp":1624378211,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/511654947/","is_pending":"Not Pending","title":"Distribute Coins in Binary Tree","memory":"13.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int res;\n    pair <int, int> dfs(TreeNode* root){\n        if(!root){\n            return {0,0};\n        }\n        int n =1; int coin = root->val ;\n        auto [leftcount ,leftcoins ] = dfs(root->left);\n        \n        res += abs(leftcount -leftcoins);\n        n+=leftcount;\n        coin+=leftcoins;\n        \n        auto [rightcount ,rightcoins] = dfs(root->right);\n        res += abs(rightcount - rightcoins);\n        n+=rightcount;\n        coin +=rightcoins;\n        \n        return {n,coin};\n        \n    }\n    int distributeCoins(TreeNode* root) {\n       res =0;\n        dfs(root);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distribute-coins-in-binary-tree"}