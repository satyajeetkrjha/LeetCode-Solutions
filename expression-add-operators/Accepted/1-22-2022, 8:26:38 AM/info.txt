{"id":625249828,"lang":"cpp","time":"7Â months","timestamp":1642857998,"status_display":"Accepted","runtime":"565 ms","url":"/submissions/detail/625249828/","is_pending":"Not Pending","title":"Expression Add Operators","memory":"115.8 MB","code":"class Solution {\npublic:\n    vector <string> res ;\n    string s ;\n    int target ;\n    vector<string> addOperators(string num, int target) {\n        this->s = num;\n        this->target = target;\n        backtrack(0,\"\",0,0);\n        return res ;\n    }\n    \n    void backtrack(int i ,const string &path ,long ressofar,long prevnum){\n        if(i== s.size()){\n            if(ressofar == target){\n                res.push_back(path);\n            }\n            return;\n        }\n        string numstr ;\n        long num =0 ;\n        for(int j =i ;j<s.size();j++){\n            if(j > i  && s[i] =='0') break;\n            numstr += s[j];\n            num = num*10+s[j]-'0';\n            if( i == 0){\n                backtrack(j+1,path+numstr,num,num);\n            }\n            else{\n                 backtrack(j + 1, path + \"+\" + numstr, ressofar + num, num);\n                backtrack(j + 1, path + \"-\" + numstr, ressofar - num, -num);\n                backtrack(j + 1, path + \"*\" + numstr, ressofar - prevnum + prevnum * num, prevnum * num); \n            }\n                \n            \n        }\n    }\n};","compare_result":"11111111111111111111111","title_slug":"expression-add-operators"}