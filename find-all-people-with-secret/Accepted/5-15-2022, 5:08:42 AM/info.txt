{"id":699916221,"lang":"cpp","time":"3 months, 1 week","timestamp":1652605722,"status_display":"Accepted","runtime":"1270 ms","url":"/submissions/detail/699916221/","is_pending":"Not Pending","title":"Find All People With Secret","memory":"188.2 MB","code":"class Solution {\npublic:\n    vector<int> findAllPeople(int n, vector<vector<int>>& meetings, int firstPerson) {\n      \n        vector <vector <pair <int ,int>>> graph(n);\n        int sz = meetings.size();\n        for(int i =0 ;i< sz;i++){\n            vector <int> vec = meetings[i];\n            int u = vec[0];int v = vec[1];int t = vec[2];\n            graph[u].push_back({v,t});\n            graph[v].push_back({u,t});\n        }\n        \n        \n        priority_queue <pair <int ,int> ,vector <pair <int ,int> > ,greater<pair <int,int>>> q;\n        // time and person\n        q.push({0,firstPerson});\n        q.push({0,0});\n        vector <int> res ;\n        vector <int> visited(n,false);\n        while(!q.empty()){\n            auto cur =q.top();\n            q.pop();\n            int person = cur.second ;\n            int time = cur.first ;\n            if(visited[person]){\n                continue;\n            }\n            visited[person] = true ;\n            for(auto it:graph[person]){\n                int person = it.first ;\n                if(!visited[person] && time <=it.second){\n                    q.push({it.second ,person});\n                }\n            }\n               \n        }\n        \n        for(int i =0 ;i< n ;i++){\n            if(visited[i]){\n               res.push_back(i); \n            }\n        }\n        return res ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"find-all-people-with-secret"}