{"id":654224861,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1646537336,"status_display":"Accepted","runtime":"1158 ms","url":"/submissions/detail/654224861/","is_pending":"Not Pending","title":"Find All Possible Recipes from Given Supplies","memory":"159 MB","code":"class Solution {\npublic:\n    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {\n        \n        map <string ,int> indegree ;\n        map <string ,vector <string> > adj;\n        \n        for(int i =0 ;i< ingredients.size();i++){\n            for(int j = 0 ;j<ingredients[i].size();j++){\n                string item = ingredients[i][j] ;\n                adj[item].push_back(recipes[i]);\n                indegree[recipes[i]]++;\n            }\n        }\n        \n        queue <string> q ;\n        for(auto &it: supplies){\n            q.push(it);\n        }\n        \n        vector<string> ans ;\n        \n        while(!q.empty()){\n            auto s = q.front();\n            q.pop();\n            for(auto neighbour: adj[s]){\n                indegree[neighbour] --;\n                if(indegree[neighbour] == 0){\n                    q.push(neighbour);\n                }\n            }\n        }\n        \n        for(auto &item :recipes){\n            if(indegree[item] == 0){\n                ans.push_back(item);\n            }\n        }\n        return ans ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-all-possible-recipes-from-given-supplies"}