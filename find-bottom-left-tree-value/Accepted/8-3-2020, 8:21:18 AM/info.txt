{"id":375393253,"lang":"cpp","time":"2Â years","timestamp":1596457278,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/375393253/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"21.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int findBottomLeftValue(TreeNode* root) {\n       queue<TreeNode*> q;\n        q.push(root);\n        TreeNode* cur ;\n        while(!q.empty()){\n            cur = q.front();\n            q.pop();\n            if(cur->right){\n                q.push(cur->right);\n            }\n            if(cur->left){\n                q.push(cur->left);\n                \n            }\n        }\n        return cur->val;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value"}