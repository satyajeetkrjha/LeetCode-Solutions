{"id":650964397,"lang":"cpp","time":"5 months, 3 weeks","timestamp":1646106084,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/650964397/","is_pending":"Not Pending","title":"Find Distance in a Binary Tree","memory":"31.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* lcafinder(TreeNode* root ,int p ,int q){\n        if(root == NULL){\n            return NULL;\n        }\n        if(root->val == p || root->val == q){\n            return root ;\n        }\n        \n        auto left = lcafinder(root->left ,p,q);\n        auto right = lcafinder(root->right,p,q);\n        \n        if(left!=NULL && right!=NULL){\n            return root ;\n        }\n        return !left ? right :!right ? left :NULL;\n        \n    }\n    \n    bool search(TreeNode*  root ,int target ,string &s){\n        if(root == NULL){\n            return false;\n        }\n        if(root ->val == target){\n            return true ;\n        }\n        \n        auto leftsearch = search(root->left ,target,s+='L');\n        if(leftsearch){\n            return true ;\n        }\n        s.pop_back();\n        \n        auto rightsearch = search(root->right ,target,s+='R');\n        if(rightsearch){\n            return true;\n        }\n        s.pop_back();\n        return false ;\n        \n        \n        \n    }\n    \n    \n    int findDistance(TreeNode* root, int p, int q) {\n       TreeNode* lca  = lcafinder(root ,p,q);\n       cout << lca->val << endl;\n       string s1,s2;\n       search(lca,p,s1);\n       search(lca,q,s2);\n       return s1.size()+s2.size(); \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"find-distance-in-a-binary-tree"}