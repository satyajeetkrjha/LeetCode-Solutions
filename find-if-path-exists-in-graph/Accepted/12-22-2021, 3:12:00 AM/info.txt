{"id":605411271,"lang":"cpp","time":"8Â months","timestamp":1640160720,"status_display":"Accepted","runtime":"560 ms","url":"/submissions/detail/605411271/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"151.9 MB","code":"class Solution {\npublic:\n    bool validPath(int n, vector<vector<int>>& edges, int start, int end) {\n          \n        vector <vector <int> > adj(n+2);\n        for(int i =0 ;i<edges.size();i++){\n            int u = edges[i][0];\n            int v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        int dist[n+2];\n        for(int i =0 ;i<n+2;i++){\n            dist[i] = -1;\n        }\n        \n        \n        dist[start] =0 ;\n        queue <int> q;\n        q.push(start);\n        while(!q.empty()){\n            int u = q.front();\n            q.pop();\n            //cout <<\"u is \"<< u << endl;\n            for(int i =0 ;i<adj[u].size();i++){\n                int v = adj[u][i];\n                //cout <<\"v is \"<< v << endl;\n                if(dist[v] == -1){\n                    dist[v] = dist[u]+1;\n                    q.push(v);\n                }\n            }\n        }\n        return dist[end] == -1 ? false :true ;\n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111","title_slug":"find-if-path-exists-in-graph"}