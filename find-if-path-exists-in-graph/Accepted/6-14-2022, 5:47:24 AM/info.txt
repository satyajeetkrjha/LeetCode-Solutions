{"id":721961121,"lang":"cpp","time":"2 months, 1 week","timestamp":1655200044,"status_display":"Accepted","runtime":"1211 ms","url":"/submissions/detail/721961121/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"148.2 MB","code":"class Solution {\npublic:\n    \n  \n   \n    \n    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {\n       \n        vector <int> adj[n+2];\n        for(int i =0 ;i< edges.size();i++){\n            int u = edges[i][0];int v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n         \n        int dist[n+2];\n        for(int i =0 ;i<n;i++){\n            dist[i] = INT_MAX;\n        }\n        queue <int> q;\n        q.push(source);\n        dist[source] = 0 ;\n        while(!q.empty()){\n            int u = q.front();\n            q.pop();\n            for(auto neigh:adj[u]){\n                if(dist[neigh]> dist[u]+1){\n                    dist[neigh] = dist[u]+1;\n                    q.push(neigh);\n                }\n            }\n        }\n        \n        return dist[destination] == INT_MAX ?  false :true ;\n        \n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111","title_slug":"find-if-path-exists-in-graph"}