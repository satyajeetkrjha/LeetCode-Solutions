{"id":518694253,"lang":"cpp","time":"1 year, 1 month","timestamp":1625648658,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/518694253/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"46.8 MB","code":"class MedianFinder {\npublic:\n    /** initialize your data structure here. */\n    priority_queue <int> lo;\n    priority_queue <int ,vector <int> ,greater<int> > hi;\n    MedianFinder() {\n        \n    }\n    \n    void addNum(int num) {\n        lo.push(num);\n        hi.push(lo.top());\n        lo.pop();\n        if(lo.size() < hi.size()){\n            lo.push(hi.top());\n            hi.pop();\n        }\n    }\n    \n    double findMedian() {\n        if(lo.size() >hi.size()){\n            return lo.top();\n        }\n        else {\n            return (double)(lo.top()+hi.top())*0.5;\n        }\n    }\n};\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder* obj = new MedianFinder();\n * obj->addNum(num);\n * double param_2 = obj->findMedian();\n */","compare_result":"111111111111111111","title_slug":"find-median-from-data-stream"}