{"id":607362652,"lang":"cpp","time":"8Â months","timestamp":1640510980,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/607362652/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"25.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    map <int ,int> m;\n    void dfs(TreeNode* root){\n        if(!root){\n            return ;\n        }\n        dfs(root->left);\n        m[root->val]++;\n        dfs(root->right);\n    }\n    vector<int> findMode(TreeNode* root) {\n        dfs(root);\n        int maxVal  = -1;\n        \n        for(auto it :m){\n            if(it.second > maxVal){\n                maxVal = it.second;\n            }\n        }\n        vector <int> res ;\n        \n        for(auto it : m){\n            if(it.second == maxVal){\n                res.push_back(it.first);\n            }\n        }\n        return res ;\n        \n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree"}