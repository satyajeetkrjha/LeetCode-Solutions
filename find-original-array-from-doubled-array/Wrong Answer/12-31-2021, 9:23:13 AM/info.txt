{"id":610390954,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1640960593,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/610390954/","is_pending":"Not Pending","title":"Find Original Array From Doubled Array","memory":"N/A","code":"class Solution {\npublic:\n    bool comp(int a ,int b){\n        return abs(a) < abs(b);\n    }\n    vector<int> findOriginalArray(vector<int>& changed) {\n        vector <int> res ;\n        if(changed.size() % 2 == 1){\n            return res ;\n        }\n        map <int ,int> m ;\n        for(int i =0 ;i<changed.size();i++){\n            m[changed[i]]++;\n        }\n        vector <int> keys ;\n        for(auto it : m){\n            keys.push_back(it.first);\n        }\n        \n         sort(keys.begin(), keys.end(), [](int i, int j) {return abs(i) < abs(j);});\n        \n        for(auto it : keys){\n            if(m[it] > m[2*it]){\n                return res ;\n            }\n           // cout <<\"m[it] ....\"<< m[it]<< endl;\n           // cout <<\"m[2*it] ....\"<< m[2*it]<< endl;\n            for(int i =0 ;i< m[it];++i ,m[2*it]--){\n             //  cout << \"it is ... \"<< it << endl;\n                res.push_back(it);\n            }\n        }\n        return res ;\n        \n        \n        \n    }\n};","compare_result":"1011111111111111111111111101000111100110101100011110100011011111111111111110010110111111110011000010100110100100011111111111111111111100010010000000000000111111111101011111000111","title_slug":"find-original-array-from-doubled-array"}