{"id":720751760,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1655069369,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/720751760/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"7.5 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    Node* flatten(Node* head) {\n        Node* cur = head ;\n        Node* tail = head ;\n        stack <Node*> st ;\n        \n        while(cur!=NULL){\n            if(cur->child!=NULL){\n                Node* child = cur->child ;\n                if(cur->next!=NULL){\n                    st.push(cur->next);\n                    cur->next->prev=NULL;\n                }\n                cur->next = child ;\n                child->prev = cur;\n                cur->child =NULL;\n            }\n            tail = cur ;\n            cur = cur->next;\n        }\n        \n        while(!st.empty()){\n           auto cur= st.top();st.pop();\n            tail->next = cur;\n            cur->prev = tail ;\n            while(cur!=NULL){\n                tail = cur ;\n                cur = cur->next;\n            }\n        }\n        return head ;\n        \n    }\n};","compare_result":"11111111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list"}