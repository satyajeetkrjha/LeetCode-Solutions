{"id":375503035,"lang":"cpp","time":"2Â years","timestamp":1596475787,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/375503035/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if( root ==NULL || (!root->left && !root->right)){\n            return;\n        }\n        if(root->left){\n            flatten(root->left);\n            TreeNode* temp = root->right;\n            root->right = root->left;\n            root->left =NULL;\n            \n            TreeNode* t = root->right;\n            while( t->right !=NULL){\n                t = t->right;\n            }\n            t->right = temp;\n        }\n        flatten(root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}