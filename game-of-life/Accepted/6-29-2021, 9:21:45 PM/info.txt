{"id":515144325,"lang":"cpp","time":"1 year, 1 month","timestamp":1625016105,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/515144325/","is_pending":"Not Pending","title":"Game of Life","memory":"6.9 MB","code":"class Solution {\npublic:\n    void gameOfLife(vector<vector<int>>& board) {\n        int rows = board.size();\n        int columns = board[0].size();\n        \n        int dx[8] ={-1,-1,-1,0,0,1,1,1};\n        int dy[8] ={-1,0,1,-1,1,-1,0,1};\n        \n        \n        \n        for(int i =0;i<rows;i++){\n            for(int j =0;j<columns;j++){\n                int livecells =0;\n                for(int k=0;k<8;k++){\n                    int nr = i+dx[k];\n                    int nc = j+dy[k];\n                    if(nr >=0 && nr <rows && nc>=0 && nc <columns && abs(board[nr][nc]) == 1){\n                        livecells++;\n                    }\n                }\n                \n                if(board[i][j] == 1 && (livecells  >3 || livecells <2)){\n                    board[i][j] = -1;\n                }\n                if(board[i][j] == 0 && livecells ==3){\n                    board[i][j] =2;\n                }\n            }\n        }\n        \n        for(int i =0;i<rows;i++){\n            for(int j=0;j<columns ;j++){\n                if(board[i][j] >0){\n                    board[i][j] =1;\n                }\n                else {\n                    board[i][j] =0;\n                }\n            }\n        }\n        \n    }\n};","compare_result":"1111111111111111111111","title_slug":"game-of-life"}