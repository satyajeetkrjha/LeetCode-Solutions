{"id":508781866,"lang":"cpp","time":"1 year, 2 months","timestamp":1623851295,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/508781866/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"14.1 MB","code":"class Solution {\nprivate:\n  vector <int> adj[2005];  \n  bool visited[2005];\n    \npublic:\n    void dfs (int u){\n        if(!visited[u]){\n            visited[u]=true;\n        }\n        for(int i = 0;i<adj[u].size();i++){\n            int v= adj[u][i];\n            if(!visited[v]){\n                 dfs(v);\n            }\n           \n        }\n    }\n    bool validTree(int n, vector<vector<int>>& edges) {\n        \n        for(int i=0;i<edges.size();i++){\n            vector <int> v = edges[i];\n            cout<<\"v.size() is \"<<v.size()<<endl;\n            adj[v[0]].push_back(v[1]);\n            adj[v[1]].push_back(v[0]);\n        }\n        dfs(0);\n        for(int i=0;i<n;i++){\n            if(!visited[i])\n                return false ;\n        }\n        if((n-1)!= edges.size()){\n            return false ;\n        }\n        return true ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"graph-valid-tree"}