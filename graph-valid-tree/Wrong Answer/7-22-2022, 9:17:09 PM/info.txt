{"id":754130919,"lang":"cpp","time":"1Â month","timestamp":1658539029,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/754130919/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"N/A","code":"class Solution {\npublic:\n    int visited[2005];\n    bool cyclefound = false;\n     vector <int> adj[2005];\n    void dfs(int u ,int parent){\n        if(!visited[u])\n            visited[u] = 1 ;\n        for(int i =0 ;i<adj[u].size();i++){\n            int v = adj[u][i];\n            if(!visited[v]){\n                dfs(v,u);\n            }\n            else if (visited[v] && v!= parent){\n                cyclefound = true ;\n                return ;\n            }\n        }\n    }\n    \n    \n    bool validTree(int n, vector<vector<int>>& edges) {\n     \n     \n      \n        for(int i =0 ;i<edges.size();i++){\n            int u = edges[i][0] ;int v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        \n        for(int i =0 ;i<n;i++) \n            visited[i] =0;\n        \n        dfs(0,-1);\n        return !cyclefound ;\n        \n        \n        \n        \n        \n    }\n};","compare_result":"111100110111011001111111001111101011111111111","title_slug":"graph-valid-tree"}