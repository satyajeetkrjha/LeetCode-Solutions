{"id":383055327,"lang":"cpp","time":"2Â years","timestamp":1597813642,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/383055327/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"43.8 MB","code":"class Trie {\npublic:\n    struct Node{\n        bool isEnd =false;\n        Node *children[26]={NULL};\n    };\n    Node * root;\n    /** Initialize your data structure here. */\n    Trie() {\n        root = new Node(); \n    }\n    \n    /** Inserts a word into the trie. */\n    void insert(string word) {\n      Node *cur = root ;\n      for(int i=0;i<word.size();i++){\n          int index = word[i]-'a';\n          if(cur ->children[index] ==NULL){\n              cur->children[index] = new Node();\n          }\n          cur = cur->children[index];\n      }\n        cur->isEnd =true;\n    }\n    \n    /** Returns if the word is in the trie. */\n    bool search(string word) {\n        Node *cur = root;\n        for(int i=0;i<word.size();i++){\n            int index = word[i]-'a';\n            if(cur->children[index] ==NULL){\n                return false;\n            }else{\n                cur = cur->children[index];\n            }\n        }\n        if(cur->isEnd ==true){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    \n    /** Returns if there is any word in the trie that starts with the given prefix. */\n    bool startsWith(string prefix) {\n        Node  *cur =root ;\n        for(int i=0;i<prefix.size();i++){\n            int index = prefix[i] -'a';\n            if(cur->children[index] ==NULL){\n                return false;\n            }\n            cur = cur->children[index];\n        }\n        if(cur->isEnd){\n            return true;\n        }\n        return true ;\n    }\n};\n\n/**\n * Your Trie object will be instantiated and called as such:\n * Trie* obj = new Trie();\n * obj->insert(word);\n * bool param_2 = obj->search(word);\n * bool param_3 = obj->startsWith(prefix);\n */","compare_result":"111111111111111","title_slug":"implement-trie-prefix-tree"}