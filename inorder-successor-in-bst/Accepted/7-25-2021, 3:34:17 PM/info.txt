{"id":528224729,"lang":"cpp","time":"1 year, 1 month","timestamp":1627241657,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/528224729/","is_pending":"Not Pending","title":"Inorder Successor in BST","memory":"22.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {\n        TreeNode* successor = NULL ;\n        \n        while(root!=NULL){\n            if(p->val >= root->val){\n                // discard left subtree \n                root = root ->right;\n                \n            }\n            else{\n                successor = root ;\n                // cout<<\"successor possible value is \"<<successor->val <<endl;\n                root =root->left;\n                // cout<<\"root value after moving to left is \"<<root->val <<endl;\n            }\n        }\n        return successor ;\n        \n    }\n};","compare_result":"111111111111111111111111","title_slug":"inorder-successor-in-bst"}