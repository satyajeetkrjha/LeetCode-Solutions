{"id":639759547,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1644655180,"status_display":"Accepted","runtime":"301 ms","url":"/submissions/detail/639759547/","is_pending":"Not Pending","title":"Insert Delete GetRandom O(1)","memory":"97.3 MB","code":"class RandomizedSet {\npublic:\n    \n    map <int ,int> m;\n    vector <int> list ;\n    \n    RandomizedSet() {\n        \n    }\n    \n    bool insert(int val) {\n        // elment already exists so just return false\n        if(m.count(val) > 0){\n            return false;\n        }\n        int sz = list.size();\n        m[val]= sz;\n        list.push_back(val);\n        return true ;\n    }\n    \n    bool remove(int val) {\n        /*\n        This portion was. abit tough to understand so here it goes .\n        First thing first ,we store the indexof the element we are removing from map by just doing \n        int indexToRemove = m[val] ;\n        and then we remove it \n        m.erase(val);\n        .Till now ,it looks easy where you just stored the index of the element ina varaible and deleted the element from map .\n        Next ,we store the element at last index in your list .let's call it A.\n        Now ,suppose that your indexToremove is 2 and ur list is of size 10 so \n        you place the element presesnt at last to the index 2 in ur vector/list .\n        Wait ,do you see that element at last index had some index in ur map .It \n        must have been (element,10) but now it has been moved to index 2\n        so yeah ,update it to (elememt,2);\n        \n        int lastval = list[list.size()-1];\n        list[indexToRemove] = lastval ;\n        m[lastval] =indexToRemove;\n        \n        \n        At last just pop the lement from list .\n        \n        \n        */\n        \n        \n        \n        // element does not exist in the map\n        if(m.count(val) == 0) return false;\n        \n        int indexToRemove = m[val] ;\n        m.erase(val);\n        \n        if(indexToRemove < list.size()-1){\n            int lastval = list[list.size()-1];\n            list[indexToRemove] = lastval ;\n            m[lastval] =indexToRemove;\n        }\n        list.pop_back();\n        return true ;\n    }\n    \n    int getRandom() {\n       int sz = list.size();\n       int randomIndex = rand()% sz;\n        return list[randomIndex];\n    }\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet* obj = new RandomizedSet();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */","compare_result":"1111111111111111111","title_slug":"insert-delete-getrandom-o1"}