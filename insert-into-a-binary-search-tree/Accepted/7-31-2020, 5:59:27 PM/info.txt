{"id":374194927,"lang":"cpp","time":"2Â years","timestamp":1596232767,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/374194927/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"38.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n      TreeNode* temp = root;\n      if(root ==NULL)\n      {\n          TreeNode* newRoot = new TreeNode(val);\n          return newRoot;\n      }\n        else {\n            while(temp!=NULL){\n                if(temp->val <val){\n                    if(temp->right){\n                        temp = temp->right;\n                    }\n                    else {\n                        temp->right =new TreeNode(val);\n                        return root;\n                    }\n                }\n                else{\n                    if(temp->left){\n                        temp = temp->left;\n                    }\n                    else{\n                        temp->left = new TreeNode(val);\n                        return root ;\n                    }\n                }\n            }\n        }\n        return root;\n    }\n    \n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}