{"id":625071624,"lang":"cpp","time":"7Â months","timestamp":1642832883,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/625071624/","is_pending":"Not Pending","title":"Insert into a Sorted Circular Linked List","memory":"8.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n        next = NULL;\n    }\n\n    Node(int _val, Node* _next) {\n        val = _val;\n        next = _next;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* insert(Node* head, int insertVal) {\n     \n        if(!head){\n            Node * temp = new Node(insertVal,NULL);\n            temp->next = temp;\n            return temp;\n        }\n        Node* prev = head ;\n        Node * cur = head->next ;\n        bool toinsert = false;\n        \n        \n        do{\n            if(insertVal >= prev->val && insertVal<= cur->val){\n                toinsert = true;\n            }\n            else if(prev->val > cur->val){\n               if(insertVal >= prev->val || insertVal <= cur->val){\n                   toinsert = true;\n               }\n            }\n            if(toinsert){\n                prev->next = new Node(insertVal,cur);\n                return head ;\n                \n            }\n            prev = cur ;\n            cur = cur->next; \n        }while(prev!=head);\n        prev->next = new Node(insertVal,cur);\n        return head;\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-into-a-sorted-circular-linked-list"}