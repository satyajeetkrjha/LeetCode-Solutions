{"id":719471801,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654938557,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/719471801/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void dfs(TreeNode* root){\n        if(!root)\n            return ;\n        dfs(root->left);\n        dfs(root->right);\n        TreeNode* temp = root->right ;\n        root->right = root->left ;\n        root->left = temp ;\n    }\n    \n    \n    TreeNode* invertTree(TreeNode* root) {\n        dfs(root);\n        return root ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}