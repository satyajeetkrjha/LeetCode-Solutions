{"id":753216254,"lang":"cpp","time":"1Â month","timestamp":1658436594,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/753216254/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        \n        if(!root)\n            return NULL ;\n     queue <TreeNode*> q ;\n        q.push(root);\n        while(!q.empty()){\n            auto cur = q.front();\n            q.pop();\n            auto temp = cur->right ;\n            cur->right = cur->left;\n            cur->left = temp;\n            \n           \n            \n            if(cur->left)\n                q.push(cur->left);\n            \n            if(cur->right)\n                q.push(cur->right);\n        }\n        return root ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}