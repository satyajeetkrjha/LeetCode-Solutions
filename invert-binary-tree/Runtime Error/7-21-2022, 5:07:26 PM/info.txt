{"id":753225931,"lang":"cpp","time":"1Â month","timestamp":1658437646,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/753225931/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n     \n        if(!root)\n            return NULL ;\n        invertTree(root->left);\n        invertTree(root->right);\n        \n        TreeNode* temp = root->right;\n        root->left = root->right ;\n        root->right = temp;\n        \n        return root ;\n        \n    }\n};","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"invert-binary-tree"}