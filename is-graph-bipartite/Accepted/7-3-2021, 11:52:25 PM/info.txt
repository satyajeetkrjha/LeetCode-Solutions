{"id":517058314,"lang":"cpp","time":"1 year, 1 month","timestamp":1625370745,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/517058314/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"13.5 MB","code":"\n// https://leetcode.com/problems/is-graph-bipartite/discuss/1289575/C%2B%2B-super-simple-solution-using-BFS\nclass Solution {\npublic:\n     \n  \n    bool dfs( int u ,vector<vector<int>>& graph,vector <int> &color){\n       queue <int> q;\n        q.push(u);\n        color[u] =1;\n        while(!q.empty()){\n           int node = q.front();\n            q.pop();\n              for(auto it:graph[node]){\n                if( color[it] == -1){\n                    color [it] = 1-color[node];\n                    q.push(it);\n                }\n                else if(color[it] == color[node]){\n                    return false;\n                }\n            }\n            \n        }\n        return true;\n        \n        \n    }\n    \n    bool isBipartite(vector<vector<int>>& graph) {\n       \n        int n = graph.size();\n        vector <int> color(n+1,-1);\n        for(int i =0;i<n;i++){\n            if(color[i] == -1){\n                if(dfs(i,graph,color) == false){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite"}