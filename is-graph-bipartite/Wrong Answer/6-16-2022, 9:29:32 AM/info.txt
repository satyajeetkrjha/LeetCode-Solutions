{"id":723677510,"lang":"cpp","time":"2 months, 1 week","timestamp":1655386172,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/723677510/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"N/A","code":"class Solution {\npublic:\n    \n    \n    bool bfs(vector<vector<int>>& graph ,vector<int> &color ,int u){\n        \n        color[u] = 0 ;// red\n        queue <int> q ;\n        q.push(u);\n        while(!q.empty()){\n          auto cur = q.front();\n          q.pop();\n          for(auto &neigh: graph[cur]){\n              if(color[neigh] == -1){\n                  color[neigh] = 1 - color[cur];\n                  q.push(neigh);\n              }\n              else if(color[neigh] == color[u]){\n                  return false ;\n              }\n            }  \n        }\n        return true;\n    }\n    \n    \n    \n    \n    bool isBipartite(vector<vector<int>>& graph) {\n      \n        int n = graph.size();\n        vector <int> color(n,-1) ;\n      \n        bool isbipartite = true;\n        for(int i =0 ;i<n;i++){\n            if(color[i] == -1){\n                if(bfs(graph,color,i)) // returns true means bipratite\n                    continue;\n                else{\n                    isbipartite = false;\n                    break;\n                }\n            }\n        }\n        \n        return isbipartite ;\n        \n        \n        \n        \n    }\n};","compare_result":"101100011100011110111010011111111111111111111111111111111110010110110000000001110","title_slug":"is-graph-bipartite"}