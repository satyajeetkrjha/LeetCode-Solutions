{"id":527698838,"lang":"cpp","time":"1 year, 1 month","timestamp":1627155870,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/527698838/","is_pending":"Not Pending","title":"Jump Game III","memory":"N/A","code":"class Solution {\npublic:\n    bool canReach(vector<int>& arr, int start) {\n        queue<int> q ;\n        q.push(start);\n        \n        int n = arr.size();\n        \n        while(!q.empty()){\n            int index = q.front();\n            q.pop();\n            \n            cout<<\"index is \"<<index<<endl;\n            \n            int node1 = arr[index]+ index ;\n            int node2 = arr[index]- index ;\n            \n            cout<<\"neighbour node1 is \"<<node1 <<endl;\n            cout<<\"neighbour node2 is \"<<node2 <<endl;\n            \n            if(node1 >=0 && node1 <n){\n                if(arr[node1] ==0)\n                    return true;\n                else{\n                    q.push(arr[node1]);\n                }\n            }\n            if(node2 >=0 && node2 <n){\n                if(arr[node2] ==0)\n                    return true;\n                else{\n                    q.push(arr[node2]);\n                }\n            }\n                \n        \n        }\n        return false ;\n        \n    }\n};","compare_result":"1100000000000000000000000000000000000000000000000000000","title_slug":"jump-game-iii"}