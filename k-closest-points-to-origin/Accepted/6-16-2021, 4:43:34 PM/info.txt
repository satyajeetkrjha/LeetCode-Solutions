{"id":508940813,"lang":"cpp","time":"1 year, 2 months","timestamp":1623876214,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/508940813/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"61.2 MB","code":"class Solution {\npublic:\n    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {\n        priority_queue <pair <int,int> > pq; // dist and index\n        // this is max heap so the top most element will be the largest\n        \n        vector <vector <int> > res; // this contains the answer\n        \n        for(int i=0;i<points.size();i++){\n            vector <int> v = points[i];\n            int dist = (v[0]*v[0])+(v[1]*v[1]);\n            if(pq.size()<k){\n                pq.push(make_pair(dist,i));\n            }\n            else {\n                if(pq.top().first>dist){\n                    pq.pop();\n                    pq.push(make_pair(dist,i));\n                }\n            }\n        }\n        \n        while(!pq.empty()){\n            int index = pq.top().second;\n            pq.pop();\n            vector <int> vec = points[index];\n            res.push_back(vec);\n        }\n        return res ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin"}