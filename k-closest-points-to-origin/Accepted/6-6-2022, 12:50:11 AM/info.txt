{"id":715455606,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654491011,"status_display":"Accepted","runtime":"317 ms","url":"/submissions/detail/715455606/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"65.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {\n        \n        // so we store dist and index in priority queue\n        \n        priority_queue <pair <int ,int> > pq;\n        \n        for(int i =0 ;i< points.size();i++){\n            \n            int dist = (points[i][0]*points[i][0])+(points[i][1]*points[i][1]);\n            if(pq.size() <k){\n               pq.push({dist,i});           \n            }\n            else{\n                auto cur = pq.top();\n                if(cur.first > dist){\n                    pq.pop();\n                    pq.push({dist,i});\n                }\n            }\n            \n        }\n        \n        vector <vector <int> > res ;\n        while(!pq.empty()){\n            auto cur = pq.top();\n            pq.pop();\n            vector <int> temp = points[cur.second];\n            res.push_back(temp);\n        }\n        return res ;\n        \n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin"}