{"id":551910964,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1631166661,"status_display":"Accepted","runtime":"246 ms","url":"/submissions/detail/551910964/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"58.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {\n      priority_queue <pair <int ,int> > pq ; // max heap storing dist and index\n      \n        vector <vector <int> > res;\n        for(int i =0 ;i<points.size();i++){\n             vector <int> v = points[i];\n            int dist = (v[0]*v[0])+v[1]*v[1];\n            if(pq.size() <k){\n                pq.push({dist,i});\n            }\n            else {\n                pair <int,int> val = pq.top();\n                if(val.first>dist){\n                    pq.pop();\n                    pq.push({dist,i});\n                }\n               // do nothing otherwise                \n            }\n        }\n        \n        while(pq.size()!=0){\n           pair <int ,int> val = pq.top();\n            pq.pop();\n            int index = val.second ;\n            res.push_back(points[index]);\n        }\n        return res ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin"}