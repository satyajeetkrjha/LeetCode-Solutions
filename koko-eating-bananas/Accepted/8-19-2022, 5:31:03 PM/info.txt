{"id":778066129,"lang":"cpp","time":"6 days, 3 hours","timestamp":1660944663,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/778066129/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"18.9 MB","code":"class Solution {\npublic:\n    \n    bool caneat(int speed,int time ,vector <int> &piles){\n        int t =0;\n        for(auto &it:piles){\n            if(it %speed == 0){\n                t+= it/speed;\n            }\n            else\n                t+= (it/speed)+1;\n        }\n        if(t>time)\n            return false;\n        return true ;\n    }\n    \n    \n    \n    int minEatingSpeed(vector<int>& piles, int h) {\n        int low =1 ;\n        int high =0;\n        for(int i =0 ;i<piles.size();i++){\n            high = max(high,piles[i]);\n        }\n        cout <<\"high is \"<< high << endl;\n        while(low <high){\n            int mid= (low+high)/2 ;\n            if(caneat(mid,h,piles)){\n                high =mid;\n            }\n            else\n                low =mid+1;\n        }\n        return high ;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas"}