{"id":767480735,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1659868512,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/767480735/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"18.9 MB","code":"class Solution {\npublic:\n    \n    bool caneat(vector<int>&piles ,int val,int h){\n        int t =0;\n        for(int i =0 ;i<piles.size();i++){\n            t+= ceil((double)piles[i]/val);\n            if(t >h)\n                return false;\n        }\n        return true;\n    }\n    \n    \n    int minEatingSpeed(vector<int>& piles, int h) {\n        int low = 1;\n        int high ;\n        for(auto &it: piles){\n            high = max(high,it);\n        }\n        \n        while(low <high){\n            int mid = (low+high)/2;\n            if(caneat(piles,mid,h)){\n                high = mid;\n            }\n            else\n                low = mid+1;\n        }\n        return high ;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas"}