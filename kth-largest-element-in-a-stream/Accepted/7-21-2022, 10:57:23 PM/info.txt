{"id":753382004,"lang":"cpp","time":"1Â month","timestamp":1658458643,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/753382004/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"19.9 MB","code":"class KthLargest {\npublic:\n    int heapsize;\n    priority_queue <int ,vector<int> ,greater <int> > pq ;\n    KthLargest(int k, vector<int>& nums) {\n        heapsize = k;\n        for(auto &it:nums){\n            pq.push(it);\n            if(pq.size() >k){\n                pq.pop();\n            }\n        }\n    }\n    \n    int add(int val) {\n        pq.push(val);\n        if(pq.size() > heapsize){\n            pq.pop();\n        }\n        return pq.top();\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream"}