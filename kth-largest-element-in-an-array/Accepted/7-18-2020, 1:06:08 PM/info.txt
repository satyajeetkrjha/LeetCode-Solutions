{"id":368313012,"lang":"cpp","time":"2 years, 1 month","timestamp":1595091968,"status_display":"Accepted","runtime":"136 ms","url":"/submissions/detail/368313012/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"10.1 MB","code":"class Solution {\npublic:\n   int partition(vector<int>& nums, int left, int right) {\n        int pivot = nums[left], l = left + 1, r = right;\n        while (l <= r) {\n            if (nums[l] < pivot && nums[r] > pivot) {\n                swap(nums[l++], nums[r--]);\n            }\n            if (nums[l] >= pivot) {\n                l++;\n            }\n            if (nums[r] <= pivot) {\n                r--;\n            }\n        }\n        swap(nums[left], nums[r]);\n        return r;\n    }\n    void printvector(vector <int> &nums){\n        for(int i=0;i<nums.size();i++){\n            cout<<nums[i]<<\" \";\n        }\n        cout<<endl;\n    }\n    int findKthLargest(vector<int>& nums, int k) {\n         int left = 0, right = nums.size() - 1, kth;\n        while (true) {\n            int idx = partition(nums, left, right);\n            if (idx == k - 1) {\n                kth = nums[idx];\n                break;\n            }\n            if (idx < k - 1) {\n                left = idx + 1;\n            } else {\n                right = idx - 1;\n            }\n        }\n        return kth;\n        \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"kth-largest-element-in-an-array"}