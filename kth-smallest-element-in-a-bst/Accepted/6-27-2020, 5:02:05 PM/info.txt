{"id":359123873,"lang":"cpp","time":"2 years, 1 month","timestamp":1593291725,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/359123873/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n      stack<TreeNode*> s;\n      TreeNode* cur= root;\n        int count =0;\n        int ans ;\n      while(cur!=NULL || !s.empty()){\n          while(cur!=NULL){\n              s.push(cur);\n              cur = cur->left;\n          }\n          cur =s.top();\n          s.pop();\n          count++;\n          if(count==k){\n             ans=cur->val;\n              break;\n          }\n          cur = cur->right;   \n      }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}