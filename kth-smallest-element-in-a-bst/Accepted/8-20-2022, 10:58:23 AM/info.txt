{"id":778597135,"lang":"cpp","time":"5 days, 10 hours","timestamp":1661007503,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/778597135/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int val;\n    int ans ;\n    void inorder(TreeNode *root,int k){\n        if(!root)\n            return ;\n        inorder(root->left, k);\n        val ++;\n        if(val == k){\n            ans = root->val;\n        }\n        inorder(root->right,k);\n    }\n    int kthSmallest(TreeNode* root, int k) {\n        val =0;\n        inorder(root,k);\n        return ans ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}