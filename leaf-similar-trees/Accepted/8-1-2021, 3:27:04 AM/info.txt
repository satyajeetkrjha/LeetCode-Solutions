{"id":531469256,"lang":"cpp","time":"1Â year","timestamp":1627802824,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/531469256/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void dfs (TreeNode* root,vector <int> &v){\n         if(!root){\n             return;\n         }\n         dfs(root->left,v);\n         if(root->left == NULL && root->right ==NULL){\n             v.push_back(root->val);\n         }\n        dfs(root->right,v);\n    }\n    \n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n           vector <int> v1,v2;\n            dfs(root1,v1);\n            dfs(root2,v2);\n        //     for(int i =0 ;i<v1.size();i++){\n        //         cout<<v1[i]<<\" \";\n        //     }\n        // cout<<endl;\n        //   for(int i =0 ;i<v2.size();i++){\n        //       cout<<v2[i]<<\" \";\n        //   }\n        // cout<<endl;\n        \n           if(v1 == v2){\n               return true;\n           }\n        return false ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees"}