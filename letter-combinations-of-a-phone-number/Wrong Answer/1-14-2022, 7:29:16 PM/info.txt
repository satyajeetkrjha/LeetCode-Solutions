{"id":619967538,"lang":"cpp","time":"7 months, 1 week","timestamp":1642206556,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/619967538/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution {\npublic:\n    vector<string> vec = {\" \",\" \",\"abc\",\"def\",\"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wzyz\"};\n    \n    void backtrack(vector<string> &res,string &temp,string digits,vector<string>vec,int start){\n        if(temp.size() == digits.size()){\n            res.push_back(temp);\n            return;\n        }\n        int index = digits[start]-'0'; // this will give 2 3 4 ..... \n        for(int i = 0 ;i<vec[index].size();i++){\n            temp.push_back(vec[index][i]);\n            backtrack(res,temp,digits,vec,start+1);\n            temp.pop_back();\n        }\n    \n    }\n    \n    \n    \n    vector<string> letterCombinations(string digits) {\n        vector <string> res;\n        string temp;\n        if(digits.size() == 0)\n            return res ;\n        backtrack(res,temp,digits,vec,0);\n        return res ;\n        \n    }\n};","compare_result":"1111111110111111110111001","title_slug":"letter-combinations-of-a-phone-number"}