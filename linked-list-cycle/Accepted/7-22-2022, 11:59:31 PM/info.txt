{"id":754193658,"lang":"cpp","time":"1Â month","timestamp":1658548771,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/754193658/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n         ListNode* slow = head ;\n        ListNode* fast = head ;\n        while( slow!=NULL && fast!=NULL && fast->next !=NULL){\n            slow = slow->next ;\n            fast = fast->next->next;\n            if(slow ==  fast){\n                return true ;\n            }\n        }\n        return false ;\n    }\n};","compare_result":"111111111111111111111","title_slug":"linked-list-cycle"}