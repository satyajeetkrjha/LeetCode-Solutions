{"id":733911864,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1656470838,"status_display":"Accepted","runtime":"193 ms","url":"/submissions/detail/733911864/","is_pending":"Not Pending","title":"Logger Rate Limiter","memory":"32.6 MB","code":"class Logger {\npublic:\n    map <string ,int> m ;\n    Logger() {\n        \n    }\n    \n    bool shouldPrintMessage(int timestamp, string message) {\n        // check uniqueness first \n        if(m.find(message) == m.end()){\n            m[message] = timestamp ;\n            return true ;\n        }\n        else {\n            \n            // check and update\n            \n            if(m.find(message)!=m.end() && abs(m[message] -timestamp) >= 10){\n                cout << message<< \" \"<<timestamp << endl;\n                m[message]  = timestamp;\n                return true ;\n            }\n        }\n        return false ;\n    }\n};\n\n/**\n * Your Logger object will be instantiated and called as such:\n * Logger* obj = new Logger();\n * bool param_1 = obj->shouldPrintMessage(timestamp,message);\n */","compare_result":"11111111111111111111","title_slug":"logger-rate-limiter"}