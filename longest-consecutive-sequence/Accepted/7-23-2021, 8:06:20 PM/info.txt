{"id":527284432,"lang":"cpp","time":"1 year, 1 month","timestamp":1627085180,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/527284432/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"31.7 MB","code":"class Solution {\npublic:\n    int longestConsecutive(vector<int>& nums) {\n      set <int> s;\n      int n = nums.size();\n        \n      for(int i =0 ;i<n;i++){\n          s.insert(nums[i]);\n      }\n        for ( auto num: s){\n            cout<<\"num is \"<<num<<endl;\n        }\n        cout<<endl;\n        \n      // iterate through the set and pick a number \n        int longeststreak =0;\n        \n        for( auto elem :s){\n            int currentstreak =1;\n            \n            // first check that a number just smaller than this does not exist in set\n            // this will stop from tle \n            // imagine your set contains 1 2 3 4 100 200 so once we have calculated for 1,2,3,4 we should not calculate again for 2,3,4 and similarly we should not calculate for 3,4 because we already have a longer answer already found when we did  1 ,2 ,3,4 so checking this elem -1 makes sene and prevents tle\n            if(s.find(elem-1) == s.end()){\n                \n                while(s.find(elem+1)!= s.end()){\n                    elem ++;\n                    currentstreak++;\n                    \n                }\n                longeststreak = max(longeststreak ,currentstreak);\n                \n            }\n        }\n            return longeststreak ;\n            \n            \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence"}