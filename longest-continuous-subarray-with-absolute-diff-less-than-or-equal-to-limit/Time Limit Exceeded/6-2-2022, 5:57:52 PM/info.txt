{"id":713106047,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1654207072,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/713106047/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"N/A","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums, int limit) {\n        multiset <int> m;\n        \n        int j =0 ;\n        int ans =1 ;\n        \n        for(int i =0 ;i< nums.size();i++){\n            m.insert(nums[i]);\n            \n            while(!m.empty() && *m.rbegin() - *m.begin() > limit){\n                m.erase(m.find(nums[j++]));\n            }\n            //cout <<\"i is \"<< i << endl;\n            //cout <<\" j is \"<< j << endl;\n            ans = max(ans ,i-j+1);\n            multiset<int>::iterator itr;\n            for (itr = m.begin(); itr != m.end(); ++itr) {\n                     cout << *itr << \" \";\n                  }\n            cout << endl;\n        }\n        return ans ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111100000","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"}