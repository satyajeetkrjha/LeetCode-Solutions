{"id":767194959,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1659842569,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/767194959/","is_pending":"Not Pending","title":"Longest Ideal Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int bucket[26];\n    int count =0;\n    \n   \n    \n    int longestIdealString(string s, int k) {\n     \n        for(char a ='a';a<='z';a++){\n          bucket[a-'a']= count;\n          count++;\n        }\n        int maxwindow =0;\n        int left =0 ;int right =1;\n        while(left <=right && left>=0 && right <s.size()){   \n            cout << s[right] << \" \"<< s[left]<<endl;\n            cout << bucket[s[right]-'a'] << \" \"<< bucket[s[left]-'a'] <<endl;\n            if((bucket[s[right]-'a']-bucket[s[left]-'a']) == k){\n                maxwindow += max(maxwindow,right-left+1);\n                right++ ;\n                left++;\n                continue ;\n            }\n            else{\n                left++;\n            }\n            right++;\n        }\n        return maxwindow ;\n    }\n};","compare_result":"100000000000000000001000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-ideal-subsequence"}