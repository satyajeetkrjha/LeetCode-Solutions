{"id":551869221,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1631161355,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/551869221/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"15.1 MB","code":"class Solution {\npublic:\n    \n    \n    int dx[4] ={-1,0,0,1};\n    int dy[4] ={0,1,-1,0};\n    int cache[205][205];\n    int dfs( vector <vector <int> >& matrix ,int r ,int c){\n        \n        if(cache[r][c] >0) return cache[r][c];\n        for(int i =0 ;i<4;i++){\n            int nr = r+ dx[i];\n            int nc = c+ dy[i];\n            if(nr >= 0 \n               && nc >=0 \n               && nr <matrix.size()\n               && nc <matrix[0].size()\n               && matrix[nr][nc]>matrix[r][c]\n              ){\n                cache[r][c]= max(cache[r][c],dfs(matrix,nr,nc));\n            }\n        }\n         return ++ cache[r][c];\n        \n\n        \n    }\n    \n    \n    \n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n       \n        int n = matrix.size();\n        if(n == 0) return 0;\n        int m = matrix[0].size();\n        \n        \n        for(int i =0 ;i<205;i++){\n            for(int j =0 ;j<205;j++){\n                cache[i][j] = 0;\n            }\n        }\n        \n        \n        int ans = 0;\n        for(int i =0 ;i<n;i++){\n            for(int j =0 ;j<m;j++){\n                ans = max(ans ,dfs(matrix ,i,j));\n                \n            }\n        }\n        return ans ;\n        \n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-path-in-a-matrix"}