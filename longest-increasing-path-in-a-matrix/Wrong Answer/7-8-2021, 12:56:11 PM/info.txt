{"id":519376076,"lang":"cpp","time":"1 year, 1 month","timestamp":1625763371,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/519376076/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"N/A","code":"class Solution {\npublic:\n    int memo[205][205];\n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n       int n = matrix.size();\n       int m = matrix[0].size();\n      \n        for(int i =0;i<205;i++){\n            for(int j =0;j<205;j++){\n                memo[i][j] = -1;\n            }\n        }\n        int ans = 0;\n        for(int i =0 ;i<n;i++){\n            for(int j =0;j<m;j++){\n                int val = dfs(matrix,n,m,i,j);\n                ans = max(ans ,val);\n            }\n        }\n        return ans ;\n    \n    }\n    int dfs(vector<vector<int>>& matrix ,int n,int m, int r ,int c ){\n        if(memo[r][c] >0) return memo[r][c];\n        int dx[4] ={0,-1,1,0};\n        int dy[4] ={1,0,0,-1};\n        int ans =0;\n        \n        for(int i  =0;i<4;i++){\n            int nr = r +dx[i]; int nc = c+ dy[i];\n            if( nr >=0 && nc>=0 && nr < r && nc <m && matrix[nr][nc]> matrix[r][c]){\n                ans = max(ans,dfs(matrix ,n,m,nr,nc));\n            }\n        }\n        cout<<\"r and c are \"<<r <<\" \"<< c<<endl;\n        memo[r][c] =ans+1;\n        cout<<\"memo[r][c] is \"<<memo[r][c]<<endl;\n        return ans+1;\n     }\n    \n    \n};","compare_result":"001001000000010000000000000000000000000000000000000000000000010000000000001000000000000000000000000000000000000000001000000000000000000000","title_slug":"longest-increasing-path-in-a-matrix"}