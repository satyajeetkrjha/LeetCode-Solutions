{"id":779483875,"lang":"cpp","time":"4 days, 10 hours","timestamp":1661092128,"status_display":"Accepted","runtime":"453 ms","url":"/submissions/detail/779483875/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.6 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        vector <int> dp;\n        dp.resize(n);\n        for(int i =0 ;i<n;i++)\n            dp[i] =1 ;\n        for(int i =0 ;i<n;i++)\n            for(int j =0 ;j<i;j++)\n                if(nums[i]>nums[j])\n                    dp[i]= max(dp[i],dp[j]+1);\n        \n        int ans =0;\n        for(int i =0 ;i<n;i++) ans = max(ans ,dp[i]);\n        return ans ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}