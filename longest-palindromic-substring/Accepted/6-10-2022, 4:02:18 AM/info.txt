{"id":718744819,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654848138,"status_display":"Accepted","runtime":"239 ms","url":"/submissions/detail/718744819/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"231.4 MB","code":"class Solution {\npublic:\n    \n    \n    int maxlenfun(string s ,int left ,int right){\n        \n        while(left >=0 && right <=s.size()-1 &&  left <= right && s[right] == s[left]){\n            left --;\n            right++;\n        }\n        return right - left -1; // why ? because u subtract those two extra chars \n        \n    }\n    \n    \n    \n    \n    string longestPalindrome(string s) {\n        int start =0 ;\n        int maxlen =0;\n        for(int i =0;i < s.size();i++){\n            int len1 = maxlenfun(s,i,i); // odd length palindrome\n            int len2 = maxlenfun(s,i,i+1) ; // even lenbth palindrome \n            int len = max(len1,len2);\n            if(len > maxlen){\n                start = i -(len-1)/2;\n                maxlen = max(maxlen,len);\n                \n            }\n        }\n        return s.substr(start ,maxlen);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}