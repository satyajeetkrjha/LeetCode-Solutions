{"id":752311813,"lang":"cpp","time":"1Â month","timestamp":1658346227,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/752311813/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"231.7 MB","code":"class Solution {\npublic:\n    \n    \n    int expandaroundcenter(string s,int left ,int right){\n        \n        while(left>=0 && right <= s.size()-1 && left <= right && s[left] == s[right]){\n            left--;\n            right++;\n        }\n        return right - left -1;\n        \n    }\n    \n    \n    \n    string longestPalindrome(string s) {\n        int maxlen =0 ;\n        int start =0;\n        for(int i =0 ;i<s.size();i++){\n            int len1 = expandaroundcenter(s,i,i);\n            int len2 = expandaroundcenter(s,i,i+1);\n            int len = max(len1,len2);\n            if(len >maxlen){\n                maxlen = len;\n                start = i - (len-1)/2;\n                \n            }\n            \n        }\n        cout <<\"start is \"<<start << endl;\n        cout <<\"maxlen is \"<<maxlen << endl;\n        return s.substr(start ,maxlen);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}