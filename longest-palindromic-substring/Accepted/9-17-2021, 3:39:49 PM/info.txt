{"id":556616425,"lang":"cpp","time":"11 months, 1 week","timestamp":1631907589,"status_display":"Accepted","runtime":"193 ms","url":"/submissions/detail/556616425/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"231.6 MB","code":"class Solution {\npublic:\n    int expandaroundcenters(string s, int left ,int right){\n        while(left >=0 && right <s.size() && s[left] == s[right]){\n            left--;\n            right++;\n        }\n        return right-left-1;\n    }\n    string longestPalindrome(string s) {\n        \n        /*\n        we are basically considering every single character and every two characters as a possible centers of palinfromic substring and expanding around it\n        */\n        int len = 0 ;\n        int start =0 ;int end =0;\n        int maxlen =0;\n        for(int i =0 ;i<s.size();i++){\n            int len1 = expandaroundcenters(s,i,i);\n            int len2 = expandaroundcenters(s,i ,i+1);\n            //cout<<len1<< \" \"<<len2<<endl;\n            // find the largest of the two\n            int len = max(len1,len2);\n            if(len > end - start){\n                maxlen = max(len ,maxlen);\n                // if you center arond and you find a palindrome of length len then starting point is (i-(len-1)/2)\n                start = i -(len-1)/2;\n                end = i +(len/2);\n            }\n        }\n        return s.substr(start,maxlen);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}