{"id":534288851,"lang":"cpp","time":"1Â year","timestamp":1628265209,"status_display":"Accepted","runtime":"136 ms","url":"/submissions/detail/534288851/","is_pending":"Not Pending","title":"Longest String Chain","memory":"21.3 MB","code":"class Solution {\npublic:\n    map <string,int> m;\n    int dfs(string currentword,set <string>&s){\n        if(m.find(currentword)!=m.end()){\n            return m[currentword];\n        }\n        int maxlength = 1;\n        // now make all possible strings by deleting one letter \n        for(int i =0 ;i<currentword.size();i++){\n            string newword = currentword.substr(0,i) +currentword.substr(i+1);\n            if(s.find(newword)!=s.end()){\n                int currentlength = 1+ dfs(newword,s);\n                maxlength = max(maxlength ,currentlength);\n            }\n        }\n        m[currentword] = maxlength ;\n        return maxlength ;\n        \n        \n        \n        \n    }\n    \n    \n    \n    int longestStrChain(vector<string>& words) {\n        m.clear();\n        set <string> s;\n        for(int i =0 ;i<words.size();i++){\n            s.insert(words[i]);\n        }\n        \n        int ans =0;\n        for(int i =0 ;i<words.size();i++){\n            string currentword = words[i];\n            ans = max(ans,dfs(currentword,s));\n        }\n        return ans ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain"}