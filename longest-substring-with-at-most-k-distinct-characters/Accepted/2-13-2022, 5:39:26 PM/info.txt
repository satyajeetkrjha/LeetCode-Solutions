{"id":640832727,"lang":"cpp","time":"6 months, 1 week","timestamp":1644791966,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/640832727/","is_pending":"Not Pending","title":"Longest Substring with At Most K Distinct Characters","memory":"8.9 MB","code":"class Solution {\npublic:\n    int lengthOfLongestSubstringKDistinct(string s, int k) {\n        \n        int sz =s.size();\n        if(sz*k == 0){\n            return 0;\n        }\n        map <char ,int> rightmostposition;\n        int left =0 ;\n        int right =0 ;\n        int maxlen  = 1;\n        \n        while(right <sz){\n            rightmostposition[s[right]] = right;\n            right++;\n            \n            if(rightmostposition.size() == k+1){\n                int lowestIndex = INT_MAX;\n                for(auto[element,index]:rightmostposition){\n                  //  cout <<\"element ...  \"<< element<< \" index \"<< index << endl; \n                    lowestIndex = min(lowestIndex,index);\n                }\n                rightmostposition.erase(s[lowestIndex]);\n                left = lowestIndex+1;\n            }\n            maxlen = max(maxlen ,right-left);        \n        }\n    \n        return maxlen ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-substring-with-at-most-k-distinct-characters"}