{"id":724257026,"lang":"cpp","time":"2 months, 1 week","timestamp":1655450494,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/724257026/","is_pending":"Not Pending","title":"Longest Word in Dictionary","memory":"32.1 MB","code":"\nstruct Node{\n   Node* links[26];\n   bool flag = false ;\n   \n   void setEnd(){\n        flag = true;\n   }\n    \n   bool isEnd(){\n       return flag;\n   } \n   \n    bool containsKey(char ch){\n        return links[ch-'a']!=NULL  ;\n    }\n    \n    void put(char ch ,Node* node){\n        links[ch-'a'] = node;\n    }\n    \n    Node* get(char ch){\n        return links[ch-'a'];\n    }\n    \n};\n\n\n\n\n\n\n\n\n\n\nclass Solution {\n    Node* root ;\npublic:\n    Solution(){\n        root = new Node();\n    }\n    \n    void insert(string word){\n        Node* node = root ;\n        for(char ch :word){\n            if(!node->containsKey(ch)){\n                node->put(ch ,new Node());\n            }\n            node = node->get(ch);\n        }\n        node->setEnd();\n    }   \n    \n    bool search(string word){\n        int count =0;\n        Node* node = root ;\n        for(auto &ch :word){\n            node = node->get(ch);\n            if(node->isEnd()){\n                count ++;\n            }\n        }\n        return count == word.size();\n    }\n    \n    \n    \n    string longestWord(vector<string>& words) {\n        \n        for(auto &word :words){\n            insert(word);\n        }\n        \n        string ans ;\n        for(int i =0 ;i< words.size();i++){\n            string word = words[i];\n            bool find = search(word);\n            if(find && word.size() > ans.size()){\n                ans = word;\n            }\n            else if(find && word.size() == ans.size()){\n                ans = min(ans ,word);\n            }\n        }\n        return ans ;\n    \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"longest-word-in-dictionary"}