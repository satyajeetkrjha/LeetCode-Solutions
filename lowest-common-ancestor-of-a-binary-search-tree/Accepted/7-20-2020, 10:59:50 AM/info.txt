{"id":369205574,"lang":"cpp","time":"2 years, 1 month","timestamp":1595257190,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/369205574/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if( root->val <min(p->val,q->val)){\n            return lowestCommonAncestor(root->right,p,q);\n        }\n        else if (root-> val > max(p->val,q->val)){\n            return lowestCommonAncestor(root->left,p,q);\n        }\n        else{\n            return root;\n        }\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}