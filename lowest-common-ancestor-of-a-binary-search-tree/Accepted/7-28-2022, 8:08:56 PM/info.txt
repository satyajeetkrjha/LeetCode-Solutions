{"id":759438912,"lang":"cpp","time":"4Â weeks","timestamp":1659053336,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/759438912/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n    \n        int pVal = p->val ;\n        int qVal = q->val ;\n        TreeNode* cur = root ;\n        while(cur!=NULL){\n           int parentVal = cur->val ;\n           if(pVal > parentVal && qVal > parentVal){\n               cur = cur->right ;\n           }\n            else if(pVal <parentVal && qVal <parentVal){\n                cur = cur->left;\n            }\n            else\n            return cur;\n        }\n        return NULL ;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}