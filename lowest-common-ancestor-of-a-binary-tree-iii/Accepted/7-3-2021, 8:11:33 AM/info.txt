{"id":516740890,"lang":"cpp","time":"1 year, 1 month","timestamp":1625314293,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/516740890/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree III","memory":"10.2 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* parent;\n};\n*/\n\nclass Solution {\npublic:\n    int depth(Node* root){\n        int depth =0;\n        while(root!=NULL){\n            root =root->parent;\n            depth++;\n        }\n        return depth;\n    }\n    Node* lowestCommonAncestor(Node* p, Node * q) {\n        int d1 = depth(p);\n        int d2 =  depth(q);\n        int diff = d1-d2;\n        if(diff >0){ // move node p upwrads by this diff\n            while(diff >0){\n                p = p->parent;\n                diff--;\n            }\n        }\n        else {\n            diff = -diff;\n            while(diff >0){\n                q = q->parent;\n                diff--;\n            }\n        }\n        \n        // now both are at same level\n        while(p!=NULL && q!=NULL){\n             if(p ==q) \n                 return p;\n             p = p->parent ;\n             q=  q->parent ; \n        }\n        return NULL;\n      \n      }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree-iii"}