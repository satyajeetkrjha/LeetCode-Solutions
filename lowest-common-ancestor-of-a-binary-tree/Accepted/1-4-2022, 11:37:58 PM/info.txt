{"id":613337652,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1641357478,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/613337652/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"17.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        \n        stack <TreeNode*> st ;\n        set <TreeNode*> s ;\n        map <TreeNode* ,TreeNode*> parent ;\n        st.push(root);\n        parent[root] =NULL;\n        \n        while(parent.find(p) == parent.end() || parent.find(q) == parent.end()){\n            TreeNode* cur = st.top();\n            st.pop();\n            if(cur->left){\n                parent[cur->left] = cur;\n                st.push(cur->left);\n            }\n            if(cur->right){\n                parent[cur->right] = cur ;\n                st.push(cur->right);\n            }\n        }\n        while(p!= parent[p]){\n            s.insert(p);\n            p = parent[p];\n        }\n        \n        while(s.count(q) == 0){\n            q= parent[q];\n        }\n        return q ;    \n        \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}