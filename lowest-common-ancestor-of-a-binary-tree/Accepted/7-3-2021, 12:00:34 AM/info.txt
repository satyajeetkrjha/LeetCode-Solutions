{"id":516587226,"lang":"cpp","time":"1 year, 1 month","timestamp":1625284834,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/516587226/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(root ==NULL) return NULL;\n        if( root ==p || root == q){\n            return root;\n        }\n        TreeNode* left = lowestCommonAncestor(root->left,p,q);\n        TreeNode* right = lowestCommonAncestor(root->right,p,q);\n        if( left && right){\n            return root;\n        }\n        return left ? left:right;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}