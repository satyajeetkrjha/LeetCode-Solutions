{"id":549569947,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1630797925,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/549569947/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"17.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n      stack <TreeNode*> s ;\n      map <TreeNode* ,TreeNode*> parent ;\n      s.push(root);\n      parent[root]=NULL;\n      while(parent.find(p)== parent.end() || parent.find(q)== parent.end()){\n          TreeNode* cur = s.top();\n          s.pop();\n          if(cur->left!=NULL){\n              s.push(cur->left);\n              parent[cur->left]= cur;\n          }\n          if(cur->right !=NULL){\n              s.push(cur->right);\n              parent[cur->right]=cur; \n          } \n      }\n        set <TreeNode*> ancestors;\n        while(p!=NULL){\n            ancestors.insert(p);\n            p = parent[p];\n        }\n        \n        while(ancestors.count(q) == 0){\n             q = parent[q];\n        }\n        return q;\n            \n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}