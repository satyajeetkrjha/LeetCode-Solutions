{"id":732868913,"lang":"cpp","time":"1 month, 4 weeks","timestamp":1656360951,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/732868913/","is_pending":"Not Pending","title":"LRU Cache","memory":"N/A","code":"class LRUCache {\npublic:\n    \n    class node{\n        public:\n         int key ;\n         int val ;\n         node* next ;\n         node* prev;\n         node(int _key,int _val){\n             key = _key;\n             val = _val;\n         }\n    };\n    \n    node* head = new node(-1,-1);\n    node* tail = new node(-1,-1);\n    \n    int cap ;\n    unordered_map <int ,node*> m ;\n    \n    LRUCache(int capacity){\n        cap = capacity ;\n        head->next = tail ;\n        tail->prev = head ;\n    }\n    \n    void addnode(node* newnode){\n        node* temp = head->next ;\n        newnode->next = temp ;\n        newnode->prev = head ;\n        head->next = newnode ;\n        temp ->prev = newnode ;\n    }\n    \n    void deletenode(node* deletenode){\n        node *deletenext = deletenode->next ;\n        node *deleteprev = deletenode->prev;\n        \n        deleteprev->next = deletenext ;\n        deletenext->prev = deleteprev;\n        \n    }\n    \n    int get(int key) {\n        if(m.find(key)!=m.end()){\n            node *resnode = m[key];\n            int res = resnode->val ;\n            m.erase(key);\n            deletenode(resnode);\n            addnode(resnode);\n            m[key]  = head->next ;\n            return res;\n        }\n        return -1 ;\n    }\n    \n    void put(int _key, int value) {\n        if(m.find(_key)!=m.end()){\n            node *resnode = m[_key];\n            m.erase(_key);\n            deletenode(resnode);\n        }\n        \n        if(m.size() == cap){\n            m.erase(tail->prev->key);\n            deletenode(tail->prev);\n        }\n        \n        addnode(new node(_key,value));\n        m[_key] = head->next ;\n        \n        \n    }\n};\n","compare_result":"1111111111111111111100","title_slug":"lru-cache"}