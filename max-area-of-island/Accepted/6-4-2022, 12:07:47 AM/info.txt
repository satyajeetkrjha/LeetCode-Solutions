{"id":713938171,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1654315667,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/713938171/","is_pending":"Not Pending","title":"Max Area of Island","memory":"23.1 MB","code":"class Solution {\npublic:\n    \n    int sum =0;\n    \n    void dfs(vector<vector<int>>& grid ,int r ,int c ,int color){\n    \n     if(r <0 || c < 0 || r >= grid.size() || c >=grid[0].size() ||grid[r][c]!=1){\n            return ;\n        }\n        sum++;\n        grid[r][c] = color;\n        dfs(grid,r+1,c,color);\n        dfs(grid,r-1,c,color);\n        dfs(grid,r,c+1,color);\n        dfs(grid,r,c-1,color);\n        \n        \n    }\n    \n    \n    \n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        \n        int ans =INT_MIN;\n        int n = grid.size();\n        if(n ==0 ) return 0;\n        int m= grid[0].size();\n        \n         int color = 2 ;\n        for(int i =0 ;i< n;i++){\n            for(int j =0 ;j<m;j++){  \n                sum =0;\n                if(grid[i][j] == 1){\n                    dfs(grid,i,j,color);\n                    color++;\n                }\n                ans = max(ans ,sum);\n            }\n        }\n        return ans ;\n    }\n};","compare_resulttitle_slug":"max-area-of-island"}