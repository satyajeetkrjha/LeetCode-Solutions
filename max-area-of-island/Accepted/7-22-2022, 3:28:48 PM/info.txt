{"id":753985560,"lang":"cpp","time":"1Â month","timestamp":1658518128,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/753985560/","is_pending":"Not Pending","title":"Max Area of Island","memory":"23.2 MB","code":"class Solution {\npublic:\n    \n    int sum ;\n    void dfs(vector<vector<int>>& grid ,int color,int r ,int c){\n        if(r < 0 || c< 0 || r >=grid.size() || c >= grid[0].size() || grid[r][c]!=1)\n            return ;\n        grid[r][c] = color ;\n        sum ++;\n        dfs(grid,color,r,c+1);\n        dfs(grid,color,r+1,c);\n        dfs(grid,color ,r-1,c);\n        dfs(grid,color,r,c-1);\n        return ;\n        \n    }\n    \n    \n    \n    \n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n     \n        int n = grid.size();\n        int m = grid[0].size();\n        \n        \n        int color = 2 ;\n        int maxarea = 0;\n        for(int i =0 ;i< n;i++){\n            for(int j =0 ;j<m;j++){\n                if(grid[i][j] == 1){\n                    sum =0 ;\n                    dfs(grid,color,i ,j);\n                    maxarea = max(maxarea,sum);\n                    color++;\n                }\n            }\n        }\n        return maxarea ;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"max-area-of-island"}