{"id":356721940,"lang":"cpp","time":"2 years, 2 months","timestamp":1592776330,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/356721940/","is_pending":"Not Pending","title":"Maximal Square","memory":"11.3 MB","code":"#include <algorithm>\n#include <math.h>\nclass Solution {\npublic:\n    int maximalSquare(vector<vector<char>>& matrix) {\n        int rows =matrix.size();\n        if(rows ==0)\n            return 0;\n        int columns =matrix[0].size();\n        if(columns ==0)\n            return 0;\n        cout<<\"rows\"<<rows<<endl;\n        cout<<\"colums\"<<columns<<endl;\n        int dp[rows+1][columns+1];\n        for(int i=0;i<rows;i++){\n            for(int j=0;j<columns;j++){\n                dp[i][j]=0;\n            }\n        }\n        int ans=0;\n        for(int i=0;i<rows;i++){\n            for(int j=0;j<columns;j++){\n                if(matrix[i][j]== '1'){\n                    dp[i][j] =1;\n                if(i>0 &&  j>0)\n                dp[i][j]+=min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1]));\n                 ans =max(ans,dp[i][j]);\n               cout<<\"i \"<<i<<\" j \"<<j<<endl;\n               cout<<dp[i][j]<<endl;\n            }\n          }\n           \n        }\n        \n        return ans*ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square"}