{"id":356719486,"lang":"cpp","time":"2 years, 2 months","timestamp":1592775894,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/356719486/","is_pending":"Not Pending","title":"Maximal Square","memory":"N/A","code":"#include <algorithm>\n#include <math.h>\nclass Solution {\npublic:\n    int maximalSquare(vector<vector<char>>& matrix) {\n        int rows =matrix.size();\n        int columns =matrix[0].size();\n        int dp[rows+1][columns+1];\n        for(int i=0;i<rows;i++){\n            for(int j=0;j<columns;j++){\n                dp[i][j]=0;\n            }\n        }\n        for(int i=0;i<rows;i++){\n            for(int j=0;j<columns;j++){\n                if(matrix[i][j]== '1')\n                    dp[i][j] =1;\n                if(i>0 &&  j>0)\n                dp[i][j]+=min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1]));\n                cout<<\"i \"<<i<<\" j \"<<j<<endl;\n                cout<<dp[i][j]<<endl;\n            }\n        }\n        int ans = dp[rows-1][columns-1];\n        return ans*ans;\n        \n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximal-square"}