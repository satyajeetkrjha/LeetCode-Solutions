{"id":717831855,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654750313,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/717831855/","is_pending":"Not Pending","title":"Maximal Square","memory":"N/A","code":"class Solution {\npublic:\n    int maximalSquare(vector<vector<char>>& matrix) {\n     \n        int rows = matrix.size();\n        if(rows == 0)\n            return 0 ;\n        int cols = matrix[0].size();\n        if(cols == 0)\n            return 0;\n        \n        int dp [rows][cols];\n        memset(dp,0,sizeof(dp));\n        \n        for(int i =0 ;i< rows;i++){\n            for(int j =0 ;j<cols ;j++){\n                if(matrix[i][j] =='1'){\n                    dp[i][j] =1 ;\n                }\n            }\n        }\n    \n        \n        for(int i =0 ;i<rows ;i++){\n            for(int j =0 ;j<cols ;j++){\n                cout << dp[i][j]<< \" \";\n            }\n            cout << endl;\n        }\n        \n            \n        \n        int ans = INT_MIN;\n        for(int i =0 ;i<rows ;i++){\n            for(int j =0 ;j<cols ;j++){\n                if(i >0 && j>0){\n                     int val = matrix[i][j] == '1'? 1 :0;\n                     dp[i][j] = min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1]))+val;\n                     \n                }\n                ans = max(ans ,dp[i][j]);\n            }\n        }\n        \n        cout <<\"after filling dp tables\"<< endl;\n        \n        for(int i =0 ;i<rows ;i++){\n            for(int j =0 ;j<cols ;j++){\n                cout << dp[i][j]<< \" \";\n            }\n            cout << endl;\n        }\n        \n        \n        return ans*ans ;\n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111000011111010111100111011111111111000000110001111","title_slug":"maximal-square"}