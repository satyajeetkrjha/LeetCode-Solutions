{"id":516143936,"lang":"cpp","time":"1 year, 1 month","timestamp":1625199964,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/516143936/","is_pending":"Not Pending","title":"Maximize Distance to Closest Person","memory":"17.3 MB","code":"class Solution {\npublic:\n    int maxDistToClosest(vector<int>& seats) {\n        int n = seats.size();\n        int left[n+1];\n        int right[n+1];\n        \n        memset(left,n,sizeof(left));\n        memset(right,n,sizeof(right));\n        \n        for(int i =0;i<n;i++){\n            if(seats[i] ==1){\n                left[i]=0;\n            }\n            else if(i>0) {\n                left[i] = left[i-1]+1;\n            }\n        }\n        \n        for(int i =n-1;i>=0;i--){\n            if(seats[i] == 1){\n                right[i] =0;\n            }\n            else if (i <n-1){\n                right[i] = right[i+1]+1;\n            }\n        }\n        \n        for(int i =0;i<n;i++){\n            cout<<left[i]<<\" \";\n        }\n        cout<<endl;\n        \n        for(int i =0;i<n;i++){\n            cout<<right[i]<<\" \";\n        }\n        cout<<endl;\n        int ans = 0;\n        for(int i =0;i<n;i++){\n            if(seats[i] ==0 )\n            ans = max(ans ,min(left[i],right[i]));\n        }\n        return ans ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-distance-to-closest-person"}