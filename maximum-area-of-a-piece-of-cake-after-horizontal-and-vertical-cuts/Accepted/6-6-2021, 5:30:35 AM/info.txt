{"id":503811870,"lang":"cpp","time":"1 year, 2 months","timestamp":1622971835,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/503811870/","is_pending":"Not Pending","title":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","memory":"32.2 MB","code":"typedef long long int ll ;\nclass Solution {\npublic:\n    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        int n = horizontalCuts.size();\n        int m = verticalCuts.size();\n        sort(horizontalCuts.begin(),horizontalCuts.end());\n        sort(verticalCuts.begin(),verticalCuts.end());\n        \n        ll maxHeight = max(horizontalCuts[0],h-horizontalCuts[n-1]);\n        ll maxWidth = max(verticalCuts[0],w-verticalCuts[m-1]);\n        \n        for(int i=1;i<n;i++){\n            if(maxHeight <horizontalCuts[i]-horizontalCuts[i-1]){\n                maxHeight =horizontalCuts[i]-horizontalCuts[i-1];\n            }\n        }\n        for(int i=1;i<m;i++){\n            if(verticalCuts[i]-verticalCuts[i-1] >maxWidth){\n                maxWidth =verticalCuts[i]-verticalCuts[i-1];\n            }\n           \n        }\n        long long int ans = (maxHeight*maxWidth)%1000000007;\n        return ans ;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts"}