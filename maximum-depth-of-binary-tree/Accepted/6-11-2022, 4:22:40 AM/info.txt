{"id":719448594,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654935760,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/719448594/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxlevel =INT_MIN;\n    \n    void dfs(TreeNode* root ,int level){\n        if(!root)\n            return;\n    \n        \n        maxlevel = max(maxlevel,level);\n        level++;\n    \n        dfs(root->left,level);\n        dfs(root->right,level);\n            \n    }\n    int maxDepth(TreeNode* root) {\n        if(!root) return 0;\n        dfs(root,1);\n        return maxlevel;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}