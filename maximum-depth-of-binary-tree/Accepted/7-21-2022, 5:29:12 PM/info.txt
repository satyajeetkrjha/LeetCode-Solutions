{"id":753237267,"lang":"cpp","time":"1Â month","timestamp":1658438952,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/753237267/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    \n    int dfs(TreeNode* root){\n        if(!root)\n            return 0 ;\n        int lh = dfs(root->left);\n        int rh = dfs(root->right);\n        return max(lh,rh)+1;\n    }\n    \n    \n    \n    \n    \n    int maxDepth(TreeNode* root) {\n        int ans = dfs(root);\n        return ans ;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}