{"id":719443914,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654935209,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/719443914/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        queue <TreeNode*> q ;\n        q.push(root);\n        int level =0;\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i =0 ;i< sz;i++){\n                auto cur = q.front();\n                q.pop();\n                if(cur->left){\n                    q.push(cur->left);\n                }\n                if(cur->right){\n                    q.push(cur->right);\n                }\n            }\n            level++;\n        }\n        return level ;\n    }\n};","compare_result":"110000000000000000000000000000000000000","title_slug":"maximum-depth-of-binary-tree"}