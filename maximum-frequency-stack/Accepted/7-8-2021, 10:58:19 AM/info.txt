{"id":519324371,"lang":"cpp","time":"1 year, 1 month","timestamp":1625756299,"status_display":"Accepted","runtime":"312 ms","url":"/submissions/detail/519324371/","is_pending":"Not Pending","title":"Maximum Frequency Stack","memory":"98.6 MB","code":"class FreqStack {\npublic:\n    int maximum_frequency;\n    map <int,int > freq;\n    map <int ,stack<int> > m;\n    FreqStack() {\n          maximum_frequency =0;\n        \n    }\n    \n    void push(int val) {\n        ++freq[val] ; // increase the freuency of this new number\n        maximum_frequency = max(maximum_frequency ,freq[val]) ;// update the maximum frquency\n        m[freq[val]].push(val); // push the frequency and the corresponding number with it \n    }\n    \n    int pop() {\n        // pop the element with the maximum frequency from stack\n        int num = m[maximum_frequency].top(); \n        m[maximum_frequency].pop();\n        // reduce the frequency of the popped number in the freq map\n        --freq[num];\n        \n        // note that you decrease the maximum frequency whe stack with that maximum frequency is over and empty now\n        if(m[maximum_frequency].size() ==0){\n            m.erase(maximum_frequency);\n            maximum_frequency --;\n        }\n        return num ;\n        \n    }\n};\n\n/**\n * Your FreqStack object will be instantiated and called as such:\n * FreqStack* obj = new FreqStack();\n * obj->push(val);\n * int param_2 = obj->pop();\n */","compare_result":"1111111111111111111111111111111111111","title_slug":"maximum-frequency-stack"}