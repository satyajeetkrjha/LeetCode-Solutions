{"id":578967675,"lang":"cpp","time":"10Â months","timestamp":1635499756,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/578967675/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"16.1 MB","code":"class Solution {\npublic:\n    int findLength(vector<int>& nums1, vector<int>& nums2) {\n        // just longest common substring \n        int n = nums1.size() ;\n        int m = nums2.size();\n        \n        int dp[n+1][m+1];\n        memset(dp,0,sizeof(dp));\n        \n        \n        int res =0;\n        for(int i = 0 ;i<= n;i++){\n            for(int j = 0 ;j<= m;j++){\n                if( i == 0 || j ==0 ){\n                    dp[i][j] =0 ;\n                }\n                else if (nums1[i-1] == nums2[j-1]){\n                    dp[i][j] = dp[i-1][j-1]+1;\n                    res = max(res ,dp[i][j]);\n                }\n                else{\n                    dp[i][j] = 0;\n                }\n            }\n        }\n        return res ;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray"}