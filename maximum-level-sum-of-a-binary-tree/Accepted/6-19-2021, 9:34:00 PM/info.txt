{"id":510375228,"lang":"cpp","time":"1 year, 2 months","timestamp":1624152840,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/510375228/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"107.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        int maxsum =-INT_MAX;\n        \n        queue <TreeNode*> q;\n        q.push(root);\n        \n        int sum ;\n        int val =1;\n         int level =-1;\n        while(!q.empty()){\n            int sz =q.size();\n            int sum =0;\n            for(int i=0;i<sz;i++){\n                TreeNode* cur = q.front();\n                q.pop();\n                sum+=cur->val;\n                if(cur->left){\n                    q.push(cur->left);\n                }\n                if(cur->right){\n                    q.push(cur->right);\n                }\n            }\n            cout<<\"sum is \"<<sum<<endl;\n            cout<<\"maxsum is \"<<maxsum<<endl;\n            if(sum > maxsum){\n                maxsum =sum;\n                level =val;\n            }\n            val++;\n        }\n        return level ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree"}