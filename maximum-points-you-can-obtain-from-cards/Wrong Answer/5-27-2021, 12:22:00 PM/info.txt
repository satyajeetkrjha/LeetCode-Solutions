{"id":499062903,"lang":"cpp","time":"1 year, 3 months","timestamp":1622132520,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/499062903/","is_pending":"Not Pending","title":"Maximum Points You Can Obtain from Cards","memory":"N/A","code":"class Solution {\npublic:\n    int maxScore(vector<int>& cardPoints, int k) {\n        int n =cardPoints.size();\n        int front[k+5];\n        int back[k+5];\n        for(int i=0;i<k+1;i++){\n            front[i]=0;\n            back[i]=0;\n        }\n        // a0 a1 a2 a3 a4 a5 a6 a7\n        // front contains a0+a1+a2\n        //back contians   a7+a6+5\n        // we test which is max out of (a0,a7,a6) or (a0,a1,a7) ...\n        for(int i=0;i<k;i++){\n            front[i+1]= front[i]+cardPoints[i];\n            back[i+1] =back[i]+cardPoints[n-i-1];\n        }\n        for(int i=0;i<k;i++){\n            cout<<\"val1 \"<<front[i]<<endl;\n            cout<<\"val2 \"<<back[i]<<endl;\n        }\n        int maxsum =INT_MIN;\n        for(int i=0;i<k;i++){\n            cout<<\"front[i]+back[k-i] is \"<<front[i]+back[k-i]<<endl;\n            maxsum =max(maxsum,front[i]+back[k-i]);\n        }\n        return maxsum;\n    }\n};","compare_result":"1111111010111111011110111111111111111111","title_slug":"maximum-points-you-can-obtain-from-cards"}