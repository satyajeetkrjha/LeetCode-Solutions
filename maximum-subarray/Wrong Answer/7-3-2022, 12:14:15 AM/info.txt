{"id":737123050,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1656821655,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/737123050/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        \n        map <int,int> count ,first ;\n        int degree = 0 ;\n        int res =0;\n        for(int i =0 ;i< nums.size();i++){\n             if(first.count(nums[i]) == 0){\n                 first[nums[i]] = i;\n             }\n            else if(++count[nums[i]]> degree){\n                degree = count[nums[i]];\n                res = i - first[nums[i]]+1 ;\n            }\n            else if(count[nums[i]] == degree){\n                res  = min(res , i-first[nums[i]]+1);\n            }\n        }\n        return res ;\n        \n    }\n};","compare_result":"10010000100010000001010000010000010000000000010000010100000001000001000001000000000000100110010100010100000100000100000000000010000000000000000001000000001000000000000000000000000100000000000000000000000000000","title_slug":"maximum-subarray"}