{"id":363829632,"lang":"cpp","time":"2 years, 1 month","timestamp":1594217058,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/363829632/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"40.2 MB","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& A) {\n        int max_straight_sum =INT_MIN;\n        int min_straight_sum =INT_MAX;\n        int temp_max_sum =0;\n        int temp_min_sum =0;\n        int arr_sum =0;\n        for(int i=0;i<A.size();i++){\n            arr_sum+=A[i];\n            temp_max_sum +=A[i];\n            max_straight_sum =max(max_straight_sum,temp_max_sum);\n            temp_max_sum =temp_max_sum <0 ?0:temp_max_sum;\n            \n            temp_min_sum+=A[i];\n            min_straight_sum =min(min_straight_sum,temp_min_sum);\n            temp_min_sum =temp_min_sum >0 ? 0:temp_min_sum;\n            \n            \n        }\n        if(arr_sum == temp_min_sum)\n            return max_straight_sum;\n        else\n            return max(max_straight_sum,arr_sum-min_straight_sum);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray"}