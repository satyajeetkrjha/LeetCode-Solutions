{"id":706477989,"lang":"cpp","time":"3Â months","timestamp":1653426934,"status_display":"Accepted","runtime":"364 ms","url":"/submissions/detail/706477989/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"116.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    \n    ListNode* middle(ListNode* head){\n        ListNode* slow = head ;\n        ListNode* fast = head ;\n        while(fast!=NULL && fast->next!= NULL){\n            slow = slow->next ;\n            fast = fast->next->next;\n         }\n        return slow ;\n    }\n    \n    ListNode* reverse(ListNode* head){\n        ListNode* cur = head ;\n        ListNode *prev =NULL;\n        ListNode* next ;\n        while(cur!=NULL){\n            next = cur->next ;\n            cur->next = prev ;\n            prev = cur ;\n            cur = next;\n        }\n        head = prev ;\n        return head ; // start \n    }\n    \n    \n    \n    int pairSum(ListNode* head) {\n        ListNode* mid = middle(head);\n        ListNode* rev = reverse(mid);\n        ListNode* cur = head;\n        int maxsum = INT_MIN ;\n        while(cur!=NULL && rev!=NULL){\n            maxsum = max(maxsum ,cur->val+rev->val);\n            cur = cur->next ;\n            rev = rev->next ;\n        }\n        return maxsum ;\n    \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-twin-sum-of-a-linked-list"}