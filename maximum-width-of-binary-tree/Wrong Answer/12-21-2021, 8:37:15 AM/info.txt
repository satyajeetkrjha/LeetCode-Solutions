{"id":604987346,"lang":"cpp","time":"8 months, 1 week","timestamp":1640093835,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/604987346/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"typedef long long int ll;\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        if (!root) return 0;\n        ll max = 0;\n        queue<pair<TreeNode*, int>> q;\n        q.push(pair<TreeNode*, int>(root, 1));\n        while (!q.empty()) {\n            ll l = q.front().second, r = l; // right started same as left\n            for (int i = 0, n = q.size(); i < n; i++) {\n                TreeNode* node = q.front().first;\n                r = q.front().second;\n                q.pop();\n                if (node->left) q.push(pair<TreeNode*, int>(node->left, r * 2));\n                if (node->right) q.push(pair<TreeNode*, int>(node->right, r * 2 + 1));\n            }\n            max = std::max(max, r + 1 - l);\n        }\n        return max;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111","title_slug":"maximum-width-of-binary-tree"}