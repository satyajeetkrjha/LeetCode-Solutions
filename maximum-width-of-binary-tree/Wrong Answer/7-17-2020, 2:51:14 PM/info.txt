{"id":367961542,"lang":"cpp","time":"2 years, 1 month","timestamp":1595011874,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/367961542/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        if(root ==NULL)\n            return 0;\n        queue<TreeNode*> q;\n        q.push(root);\n        int ans =INT_MIN;\n        while(!q.empty()){\n            int sz = q.size();\n            ans = max(ans,sz);\n            for(int i=0;i<sz;i++){\n                TreeNode* cur =q.front();\n                q.pop();\n                if(cur ==NULL){\n                    // don't do anything\n                }\n                else if(!cur->left  && !cur->right){\n                    // don't do anything \n                }\n                else {\n                        q.push(cur->left);\n                        q.push(cur->right);\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111101100010000110110100100001110011110110111110110000100110110100100000010011110010110101100000010000110010000","title_slug":"maximum-width-of-binary-tree"}