{"id":736284313,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1656732517,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/736284313/","is_pending":"Not Pending","title":"Maximum XOR of Two Numbers in an Array","memory":"N/A","code":"\nstruct Node{\n     \n    Node *links[2];\n    \n    bool containsKey(int bit){\n        return (links[bit]!=NULL);\n    }\n    \n    Node* get(int bit){\n        return links[bit];\n    }\n    \n    void put(int index ,Node* node){\n        links[index] = node ;\n    } \n};\n\n\nclass Trie{\n   \n    private:\n        Node* root ;\n    public:\n         Trie(){\n             root = new Node();\n         }\n    \n     \n       void insert(int num){\n           Node* node = root ;\n           for(int i = 31;i>=0 ;i--){\n               int bit = (num >> i) & 1;\n           if(!node->containsKey(bit)){\n               node->put(bit,new Node());\n           }\n           node = node->get(bit);\n           }\n           \n       }\n       \n       int findmax(int num){\n           Node* node = root ;\n           int maxnum =0 ;\n           for(int i = 31 ;i>=0 ;i--){\n               int bit = (num >> i) & 1 ;\n               if(node->containsKey(!bit)){\n                   maxnum = maxnum | (1 << i);\n                   node = node->get(!bit);\n               }\n               else{\n                   node = node->get(bit);\n               }\n           }\n           return maxnum ;\n       }\n    \n    \n    \n    \n    \n    \n};\n\n\nclass Solution {\npublic:\n    int findMaximumXOR(vector<int>& nums) {\n        Trie trie ;\n        for(int i =0 ;i<nums.size();i++){\n            int val = nums[i];\n            trie.insert(val);\n        }\n        int maxans ;\n        for(int i =0 ;i< nums.size();i++){\n            maxans = max(maxans,trie.findmax(nums[i]));\n        }\n        return maxans ;\n    }\n};","compare_result":"000000000000000000000000011111111111111101","title_slug":"maximum-xor-of-two-numbers-in-an-array"}