{"id":715502169,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654495725,"status_display":"Accepted","runtime":"98 ms","url":"/submissions/detail/715502169/","is_pending":"Not Pending","title":"Merge Intervals","memory":"18.9 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n       \n        \n        // sort the intervals first according to their start time\n        sort(intervals.begin(),intervals.end()) ;\n        \n       \n        vector <vector <int> > res ;\n        res.push_back(intervals[0]);\n    \n        \n        for(int i =1 ;i<intervals.size();i++){\n            // get the last element from the res vector \n            int sz = res.size() ;\n           // cout <<\"sz is \"<< sz<< endl;\n            // end time of first should be greater than the start time\n            if(res[sz-1][1] >= intervals[i][0]){\n              cout <<intervals[sz-1][1]<< \" \"<< intervals[i][1]<<endl;\n              res[sz-1][1] = max(res[sz-1][1],intervals[i][1]);\n            }\n            else{\n                res.push_back(intervals[i]);\n            }\n        }\n        \n        return res ;\n    \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals"}