{"id":765751703,"lang":"cpp","time":"2 weeks, 6 days","timestamp":1659689600,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/765751703/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"13.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n \nclass Solution {\npublic:\n    \n    typedef pair<int, ListNode*> PII;\n  \n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n       \n        priority_queue<PII, vector<PII>, greater<PII> > pq;\n        \n        int sz  = lists.size();\n        if(sz == 0)\n            return NULL ;\n        \n        for(int i =0 ;i<sz;i++){\n            auto *cur = lists[i];\n            if(cur!=NULL){\n                cout << cur->val << endl;\n                pq.push({cur->val,cur});\n            }            \n        }\n        // what if all lists were null \n        if(pq.size() == 0) \n            return NULL ;\n        \n     \n        ListNode* dummy = new ListNode(-1);\n        ListNode* cur = dummy ;\n        \n        while(pq.size() >0){\n           auto[val,temp] = pq.top();\n           pq.pop();\n           if(temp->next!=NULL){\n               pq.push({temp->next->val,temp->next});\n           }\n          cur->next = temp;\n            cur = cur->next;\n            \n            \n        }\n        cur->next = NULL;\n        \n        return dummy->next ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}