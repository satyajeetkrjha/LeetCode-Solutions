{"id":615917152,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1641694652,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/615917152/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        int n  = lists.size();\n        while(lists.size() >1){\n            ListNode* a = lists[0];\n            ListNode* b = lists[1];\n            ListNode* merged = mergeList(a,b);\n            lists.push_back(merged);\n            lists.erase(lists.begin());\n            lists.erase(lists.begin());\n        }\n        return lists.front();\n        \n    }\n    \n    ListNode* mergeList (ListNode* a,ListNode* b){\n        if(a == NULL){\n            return b ;\n        }\n        if(b == NULL){\n            return a ;\n        }\n        if(a->val <= b->val){\n            a->next = mergeList(a->next ,b);\n            return a;\n        }\n        else{\n            b->next = mergeList(a,b->next);\n            return b;\n        }\n        \n    }\n    \n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists"}