{"id":717991788,"lang":"cpp","time":"2Â months, 2Â weeks","timestamp":1654766008,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/717991788/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    \n    ListNode* merge (ListNode* l1 ,ListNode* l2){\n        if(!l1)\n            return l2;\n        else if(!l2)\n            return l1;\n        else if(l1->val <= l2->val){\n            l1->next = merge(l1->next ,l2);\n            return l1;\n        }\n        else {\n            l2->next = merge(l1,l2->next);\n            return l2 ;\n        }\n    }\n    \n    \n    \n    \n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        \n        while(lists.size() >1){\n            lists.push_back(merge(lists[0],lists[1]));\n            lists.erase(lists.begin());\n            lists.erase(lists.begin());\n            \n        }\n        return lists.front();\n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists"}