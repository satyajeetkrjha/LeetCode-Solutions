{"id":364683786,"lang":"cpp","time":"2 years, 1 month","timestamp":1594380482,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/364683786/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"22.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {\n        if(!t1)\n            return t2;\n        if(!t2)\n            return t1;\n       queue <TreeNode*> q1;\n       queue <TreeNode*> q2; \n       q1.push(t1);\n       q2.push(t2);\n       while(!q2.empty()){\n           TreeNode* cur1 =q1.front();\n           q1.pop();\n           TreeNode* cur2 =q2.front();\n           q2.pop();\n           cur1->val+=cur2->val;\n           if(cur2->left){\n               if(cur1->left){\n                   q1.push(cur1->left);\n                   q2.push(cur2->left);\n               }\n               else\n               cur1->left =cur2->left;\n           }\n           if(cur2->right){\n               if(cur1->right){\n                  q1.push(cur1->right);\n                  q2.push(cur2->right); \n               }\n               else\n               cur1->right =cur2->right;\n           }\n           \n       }\n        return t1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}