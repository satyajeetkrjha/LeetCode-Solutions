{"id":357522237,"lang":"cpp","time":"2 years, 2 months","timestamp":1592946329,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/357522237/","is_pending":"Not Pending","title":"Min Stack","memory":"16.1 MB","code":"class MinStack {\npublic:\n    /** initialize your data structure here. */\n    stack<int> first;\n    stack<int> minstack;\n    MinStack() {\n        \n    }\n    \n    \n    void push(int x) {\n        first.push(x);\n        if(minstack.empty()){\n            //cout<<\"element in minstack is\"<<x<<endl;\n            minstack.push(x);\n        }\n        else{\n            int top = minstack.top();\n            if(x<top){\n               // cout<<\"element in minstack x is\"<<x<<endl;\n                minstack.push(x);\n            }\n            else{\n                 // cout<<\"element in minstack top is\"<<top<<endl;\n                  minstack.push(top);\n            }\n                \n        }\n        \n    }\n    \n    void pop() {\n         first.pop();\n         minstack.pop();\n    }\n    \n    int top() {\n        return first.top();\n    }\n    \n    int getMin() {\n        return minstack.top();\n        \n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(x);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"111111111111111111","title_slug":"min-stack"}