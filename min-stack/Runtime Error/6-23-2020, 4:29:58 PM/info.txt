{"id":357511899,"lang":"cpp","time":"2 years, 2 months","timestamp":1592944198,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/357511899/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\npublic:\n    /** initialize your data structure here. */\n    stack<int> s;\n    int minElem;\n    MinStack() {\n        \n    }\n    \n    \n    void push(int x) {\n        if(s.empty()){\n            s.push(x);\n            \n            minElem =x;\n        }\n        else{\n            if(x>=minElem){\n                s.push(x);\n                \n            }\n            else {\n               \n                s.push(2*x-minElem);\n                 minElem =x;\n                \n            }\n        }\n        \n        \n        \n    }\n    \n    void pop() {\n        int t=s.top();\n        s.pop();\n    \n        \n        if(t<minElem){\n            minElem =2*minElem-t;\n        } \n    }\n    \n    int top() {\n        int t= s.top();\n       \n        if(t<minElem){\n            return minElem;\n        }\n        else\n            return t;\n        \n    }\n    \n    int getMin() {\n            return minElem;\n        \n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(x);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"111111111000000000","title_slug":"min-stack"}