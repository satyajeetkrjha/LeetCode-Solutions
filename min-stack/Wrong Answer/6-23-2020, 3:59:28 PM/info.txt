{"id":357502815,"lang":"cpp","time":"2 years, 2 months","timestamp":1592942368,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/357502815/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\npublic:\n    /** initialize your data structure here. */\n    stack<int> s;\n    vector<int> v;\n    int minElem;\n    MinStack() {\n        \n    }\n    \n    \n    void push(int x) {\n        if(s.empty()){\n            s.push(x);\n            v.push_back(x);\n            minElem =x;\n        }\n        else{\n            if(x>=minElem){\n                s.push(x);\n                v.push_back(x);\n            }\n            else {\n               \n                s.push(2*x-minElem);\n                 minElem =x;\n                v.push_back(2*x-minElem);\n            }\n        }\n        cout<<\"min till now is \"<<minElem<<endl;\n        for(int i =0;i<v.size();i++){\n            cout<<v[i]<<\" \";\n        }\n        cout<<endl;\n        \n        \n    }\n    \n    void pop() {\n        int t=s.top();\n        s.pop();\n        cout<<\"t is\"<<t<<endl;\n        cout<<\"minElem after pop is \"<<minElem<<endl;\n        \n        if(t<minElem){\n            minElem =2*minElem-t;\n        } \n    }\n    \n    int top() {\n        int t= s.top();\n        s.pop();\n        cout<<\"minElem in top is \"<<minElem<<endl;\n        cout<<\"t in top is  \"<<t<<endl;\n        if(t<minElem){\n            return minElem;\n        }\n        else\n            return t;\n        \n    }\n    \n    int getMin() {\n            return minElem;\n        \n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(x);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"111111100000000000","title_slug":"min-stack"}