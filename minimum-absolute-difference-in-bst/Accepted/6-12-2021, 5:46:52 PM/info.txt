{"id":507008975,"lang":"cpp","time":"1 year, 2 months","timestamp":1623534412,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/507008975/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"25.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode* root,vector <int> &v){\n        if(root ==NULL){\n            return;\n        }\n        v.push_back(root->val);\n        if(root->left){\n            dfs(root->left,v);\n        }\n        if(root->right){\n            dfs(root->right,v);\n        }\n    }\n    int getMinimumDifference(TreeNode* root) {\n        vector <int> v;\n        dfs(root,v);\n        sort(v.begin(),v.end());\n        for(int i=0;i<v.size();i++){\n            cout<<v[i]<<\" \";\n        }\n        cout<<endl;\n        int min_dist =INT_MAX;\n        for(int i=1;i<v.size();i++){\n           min_dist =min(v[i]-v[i-1],min_dist);\n        }\n        return min_dist;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-absolute-difference-in-bst"}