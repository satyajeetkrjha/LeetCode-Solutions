{"id":639679496,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1644644447,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/639679496/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"17.6 MB","code":"class Solution {\npublic:\n    int minDeletions(string s) {\n        \n        map <char ,int> m ;\n        for(int i=0 ;i<s.size();i++){\n            char c = s[i];\n            m[c]++;\n        }\n        unordered_set <int> seen ;\n        \n        int ans =0;\n        for(auto[k,v]:m){\n            \n            while(seen.find(v)!=seen.end()){\n                v--;\n                ans ++;\n            }\n            if(v > 0) seen.insert(v);\n        }\n        /*\n        for(auto it :seen){\n            cout << it << \" \";\n        }\n        cout << endl;\n        */\n        return ans ;\n        \n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique"}