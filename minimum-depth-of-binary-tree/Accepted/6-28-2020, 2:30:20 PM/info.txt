{"id":359493437,"lang":"cpp","time":"2 years, 1 month","timestamp":1593369020,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/359493437/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"19.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(root==NULL)\n            return 0;\n        queue< TreeNode*> q;\n        q.push(root);\n        int depth =1;\n        while(!q.empty()){\n            int sz= q.size();\n            for(int i=0;i<sz;i++){\n                TreeNode* cur =q.front();\n                q.pop();\n                if(cur->left ==NULL && cur->right ==NULL){\n                    return depth;\n                }\n                if(cur->left)\n                q.push(cur->left);\n                if(cur->right)\n                q.push(cur->right);\n\n            }\n            depth++;\n        }\n        return depth;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}