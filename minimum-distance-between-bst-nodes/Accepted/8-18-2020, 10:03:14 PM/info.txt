{"id":382982240,"lang":"cpp","time":"2Â years","timestamp":1597802594,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/382982240/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDiffInBST(TreeNode* root) {\n        if(!root){\n            return 0;\n        }\n        vector <int> v;\n        queue <TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n           \n            int sz = q.size();\n            for(int i =0;i<sz;i++){\n              TreeNode* cur = q.front();\n               q.pop();\n               v.push_back(cur->val);\n                if(cur->left){\n                    q.push(cur->left);\n                }\n                if(cur->right){\n                    q.push(cur->right);\n                }\n            }\n        }\n       sort(v.begin(),v.end());\n        int diff =INT_MAX;\n        for(int i=1;i<v.size();i++){\n            diff =min(diff,v[i]-v[i-1]);\n        }\n        return diff ;\n            \n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes"}