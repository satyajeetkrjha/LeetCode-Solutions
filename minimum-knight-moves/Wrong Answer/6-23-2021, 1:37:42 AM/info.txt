{"id":511936593,"lang":"cpp","time":"1 year, 2 months","timestamp":1624426662,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/511936593/","is_pending":"Not Pending","title":"Minimum Knight Moves","memory":"N/A","code":"class Solution {\npublic:\n    int minKnightMoves(int x, int y) {\n        int dx[8] ={-2,-2,2,2,-1,-1,1,1};\n        int dy[8] ={-1,1,-1,1,-2,2,2,-2};\n        queue < pair <int,int> > q;\n        q.push(make_pair(0,0));\n        int steps =1;\n        while(!q.empty()){\n            pair <int,int> cur = q.front();\n            q.pop();\n           \n            for(int i=0;i<8;i++){\n                int nr = cur.first+dx[i];\n                int nc = cur.second+dy[i];\n                if( nr == x && nc == y){\n                    return steps;\n                }\n                q.push(make_pair(nr,nc));\n                \n            }\n             steps ++;\n        }\n        return steps ;\n    }\n};","compare_result":"10000000000000000000000000000000000000000","title_slug":"minimum-knight-moves"}