{"id":724956413,"lang":"cpp","time":"2 months, 1 week","timestamp":1655536100,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/724956413/","is_pending":"Not Pending","title":"Minimum Number of Flips to Convert Binary Matrix to Zero Matrix","memory":"N/A","code":"\nclass Solution {\npublic:\n \n    map <vector <vector <int> > ,int> dist ;\n    map <vector <vector <int> > ,bool> visited ;\n    \n    int dx[4] ={1,-1,0,0};\n    int dy[4]= { 0,0,-1,1};\n    \n  vector<vector<int>> modify (vector <vector <int> > mat,int r ,int c){\n        mat[r][c] = 1-mat[r][c];\n        for(int i =0 ;i<4;i++){\n            int nr = r + dx[i];\n            int nc = c + dy[i];\n            if(nr>=0 && nc>=0 && nr < mat.size() && nc <mat[0].size()){\n                mat[nr][nc] = 1-mat[nr][nc];\n            }\n        }\n      return mat;\n    }\n    \n   \n    \n    int minFlips(vector<vector<int>>& mat) {\n        \n        int n= mat.size();\n        int m = mat[0].size();\n           \n        queue <vector<vector <int> > > q ;\n        q.push(mat);\n        dist[mat] =0 ;\n        visited[mat] = true ;\n        \n        while(!q.empty()){\n            auto cur = q.front();\n            q.pop();\n            for(int i =0 ;i< mat.size();i++){\n                for(int j =0 ;j< mat[0].size();j++){\n                    auto newstate = modify(mat ,i,j);\n                    if((visited[newstate] == false) ||(dist[newstate] >dist[cur]+1)){\n                        dist[newstate] = dist[cur]+1;\n                        visited[newstate] = true;\n                        q.push(newstate);\n                    }\n                }\n            }\n        }\n      \n        vector < vector <int> > finalstate(n,vector <int> (m,0));\n        if(dist.find(finalstate) == dist.end()){\n            return -1;\n        }\n        return dist[finalstate];\n        \n    }\n};","compare_result":"01101110111010011111111010","title_slug":"minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix"}