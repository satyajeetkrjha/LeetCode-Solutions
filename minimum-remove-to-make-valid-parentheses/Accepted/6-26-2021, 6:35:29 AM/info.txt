{"id":513377010,"lang":"cpp","time":"1 year, 2 months","timestamp":1624703729,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/513377010/","is_pending":"Not Pending","title":"Minimum Remove to Make Valid Parentheses","memory":"12.1 MB","code":"class Solution {\npublic:\n    string minRemoveToMakeValid(string s) {\n        set <int > removableindices; // this contains all the indices that we need to remove\n        stack <int> st;\n        string ans;\n        for(int i=0;i<s.size();i++){\n            char c = s[i];\n            if( c == '('){ // opening bracket so push this to stack\n                st.push(i);\n            }\n            else if(s[i] == ')') {\n               // two cases ,one is that stack is empty and u see closing bracket so remove\n                if(st.empty()){\n                    removableindices.insert(i);\n                }\n                else {\n                    st.pop(); // an opening bracket found so pop it\n                }\n            }\n        }\n        \n        // if you still have non empty stack it means it contains more opening brackets than closing brackets so they are problematic index\n        while(!st.empty()){\n            removableindices.insert(st.top());\n            st.pop();\n        }\n        for(int i =0 ;i<s.size();i++){\n            if(removableindices.find(i) != removableindices.end()){\n                continue;\n            }\n            else{\n                ans+=s[i];\n            }\n        }\n        return ans ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-remove-to-make-valid-parentheses"}