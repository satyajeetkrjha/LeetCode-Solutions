{"id":551836493,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1631157246,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/551836493/","is_pending":"Not Pending","title":"Minimum Remove to Make Valid Parentheses","memory":"12.1 MB","code":"class Solution {\npublic:\n    string minRemoveToMakeValid(string s) {\n        stack <int> st;\n        set <int> removableindices ;\n        for(int i =0 ;i<s.size();i++){\n            char c= s[i];\n            if( c == '('){ // if it an opening bracket then just push it's index\n                st.push(i);\n            }\n            else if ( c == ')'){\n                \n                \n                if(st.empty()){\n                    // stack is empty so just push this problematic index into removableindices vector\n                    removableindices.insert(i);\n                }\n                else {\n// if stack has an index it means there is one opening inside it so just pop that index\n                    st.pop();\n                }\n            }\n        }\n        \n        // if stack is not empty it means there were some opening indexs that didn't find a closing index so push them into removable indices vector\n        while(!st.empty()){\n            removableindices.insert(st.top());\n            st.pop();\n        }\n        \n        string ans;\n        for(int i =0 ;i<s.size();i++){\n            if(removableindices.find(i) == removableindices.end()){\n                ans+=s[i];\n            }\n            \n        }\n        return ans ;\n        \n           \n    \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-remove-to-make-valid-parentheses"}