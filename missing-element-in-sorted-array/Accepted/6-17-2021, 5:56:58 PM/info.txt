{"id":509435726,"lang":"cpp","time":"1 year, 2 months","timestamp":1623967018,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/509435726/","is_pending":"Not Pending","title":"Missing Element in Sorted Array","memory":"31.5 MB","code":"class Solution {\npublic:\n    //this function tells us total missing elements till that index \n    int missing(int index,vector <int> &nums){\n        return nums[index] -nums[0]-index;\n    }\n    int missingElement(vector<int>& nums, int k) {\n        \n        int n= nums.size();\n        if(k > missing(nums.size()-1,nums)){\n            return nums[n-1]+k-missing(n-1,nums);\n        }\n        // we need to find that index such that missings[idx-1]<k <= missings[idx+1]\n        int start =0, end =n;\n        while(end -start >1){\n            int mid =(start +end)/2;\n            if(missing(mid,nums)  >= k){\n                end =mid;\n            }\n            else\n                start =mid;\n        }\n        cout<<\"start is \"<<start <<endl;\n        \n         return nums[start]+(k -missing(start,nums));\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"missing-element-in-sorted-array"}