{"id":509434142,"lang":"cpp","time":"1 year, 2 months","timestamp":1623966677,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/509434142/","is_pending":"Not Pending","title":"Missing Element in Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    //this function tells us total missing elements till that index \n    int missing(int index,vector <int> &nums){\n        return nums[index] -nums[0]-index;\n    }\n    int missingElement(vector<int>& nums, int k) {\n        \n        int n= nums.size();\n        if(k > missing(nums.size()-1,nums)){\n            return nums[n-1]+k-missing(n-1,nums);\n        }\n        // we need to find that index such that missings[idx-1]<k <= missings[idx+1]\n        int start =-1 ;int end =n;\n        while(end -start >1){\n            int mid =(start +end)/2;\n             cout<<\"start \"<<start <<endl;\n            cout<<\"end \"<<end<<endl;\n            cout<<\"mid \"<<mid <<endl;\n            if(missing(mid,nums)  > k){\n                end =mid;\n            }\n            else\n                start =mid;\n            \n           \n        }\n        cout<<\"start is \"<<start <<endl;\n        \n         return nums[end-1]+(k -missing(end-1,nums));\n        \n        \n    }\n};","compare_result":"101011111111111111111111111111","title_slug":"missing-element-in-sorted-array"}