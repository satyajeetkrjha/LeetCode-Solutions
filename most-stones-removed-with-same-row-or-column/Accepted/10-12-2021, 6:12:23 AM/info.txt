{"id":569962370,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1634033543,"status_display":"Accepted","runtime":"235 ms","url":"/submissions/detail/569962370/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"14.4 MB","code":"class Solution {\npublic:\n    int count;\n    vector<int> parent ;\n    vector <int> rank;\n    int find(int x){\n        if(parent[x] ==x){\n            return x;\n        }\n        return parent[x] = find(parent[x]);\n    }\n    void unionfun(int x ,int y){\n        int u = find(x);\n        int v = find(y);\n        if(u !=v){\n            count --;\n            if(rank[u]> rank[v]){\n            parent[v] = u;\n        }\n         else if (rank[v]> rank[u]){\n            parent[u] = v;\n        }\n          else{\n            parent[u] = v;\n            rank[v]++;\n          }\n            \n        }\n        \n    }\n    \n    \n    int removeStones(vector<vector<int>>& stones) {\n        int n = stones.size();\n        count = n;\n        parent.resize(n);\n        rank.resize(n);\n        \n        for(int i = 0 ;i<n;i++){\n            parent[i] = i;\n            rank[i] =0;\n        }\n        for(int i =0 ;i<n;i++){\n            for(int j = i+1;j<n;j++){\n                if(stones[i][0] == stones[j][0] || stones[i][1] == stones[j][1]){\n                    // form an edge so basically do union\n                    unionfun(i,j);\n                } \n            }\n        }\n        return n- count ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-stones-removed-with-same-row-or-column"}