{"id":779841653,"lang":"cpp","time":"4 days, 1 hour","timestamp":1661127920,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/779841653/","is_pending":"Not Pending","title":"N-Queens","memory":"7.4 MB","code":"class Solution {\npublic:\n    \n    vector <vector<string > >  res ;\n    \n    bool isValid(vector<string> &board,int row ,int column){\n        for(int i = row ;i>=0 ;i--){\n            if(board[i][column] == 'Q')\n                return false;\n        }\n        for(int i  = row ,j = column ;i>=0 && j>=0 ;i--,j--){\n            if(board[i][j] == 'Q')\n                return false;\n        }\n        for(int  i = row ,j= column ;i>=0 && j>=0 ;i--,j++){\n            if(board[i][j] == 'Q')\n                return false ;\n        }\n        return true ;\n    }\n    \n    void dfs(vector <string> &board ,int row){\n        if(row == board.size()){\n            res.push_back(board);\n            return ;\n        }\n        for(int i =0 ;i<board.size();i++){\n            if(isValid(board,row,i)){\n                board[row][i] = 'Q';\n                dfs(board,row+1);\n                board[row][i] ='.';\n            }\n        }\n    }\n    \n    vector<vector<string>> solveNQueens(int n) {\n        if(n<=0)\n            return {{}};\n        vector <string> board(n, string(n,'.'));\n        dfs(board,0);\n        return res ;\n    }\n};","compare_result":"111111111","title_slug":"n-queens"}