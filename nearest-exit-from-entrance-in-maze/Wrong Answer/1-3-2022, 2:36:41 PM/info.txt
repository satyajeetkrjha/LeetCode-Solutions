{"id":612339835,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1641238601,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/612339835/","is_pending":"Not Pending","title":"Nearest Exit from Entrance in Maze","memory":"N/A","code":"class Solution {\npublic:\n     int dx[4] ={1,-1,0,0};\n     int dy[4] ={0,0,1,-1};\n    int nearestExit(vector<vector<char>>& maze, vector<int>& entrance) {\n       \n        queue<pair<int ,int> > q ;\n        q.push({entrance[0],entrance[1]});\n    \n        int n = maze.size();\n        int m = maze[0].size();\n        \n        int moves =1;\n        maze[entrance[0]][entrance[1]] ='+';\n        \n        while(!q.empty()){\n            int sz = q.size();\n            for(int k = 0 ;k< sz;k++){\n                auto cur = q.front(); q.pop();\n               int r = cur.first ;\n               int c = cur.second ;\n               for(int i =0 ;i<4;i++){\n                    int nr = r+ dx[i];\n                    int nc = c+ dy[i] ;\n                  if(nr < 0 || nr >= n || nc < 0 || nc >= m || maze[nr][nc] == '+')                   {\n                    continue;\n                }\n        if(nr == 0 || nr == n-1 || nc == 0 || nc == m-1){\n            if(maze[nr][nc] =='.')\n            return moves ;\n        }\n                    q.push({nr,nc});\n                   maze[nr][nc]='+';\n            }\n                moves ++;   \n        }        \n   }\n        \n       return -1;     \n        \n        \n    }\n};","compare_result":"11111111111111111100111111111111111111111111111111111111011011111011111111110111110011111111111111111111101111110010111110111111111111111111111111111111111110110011111111111111111111010101100000","title_slug":"nearest-exit-from-entrance-in-maze"}