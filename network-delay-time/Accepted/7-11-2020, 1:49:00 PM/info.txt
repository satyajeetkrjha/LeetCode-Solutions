{"id":365196606,"lang":"cpp","time":"2 years, 1 month","timestamp":1594489740,"status_display":"Accepted","runtime":"328 ms","url":"/submissions/detail/365196606/","is_pending":"Not Pending","title":"Network Delay Time","memory":"43.5 MB","code":"\nclass Solution {\npublic:\n    #define pii pair<int,int>\n    vector <pii> adj[100005];\n    int visited[100005];\n    int dist[100005];\n    void dijkistra(int n){\n        priority_queue <pii,vector<pii>,greater<pii>> q;\n        q.push({0,n});\n        dist[n]=0;\n        while(!q.empty()){\n            int distance =q.top().first;\n            int node =q.top().second;\n            q.pop();\n            if(visited[node]){\n                continue;\n            }\n            visited[node]=1;\n            for(auto x:adj[node]){\n                int newnode =x.first;\n                int newdist =x.second;\n                if(newdist+distance<dist[newnode]){\n                    dist[newnode]=distance+newdist;\n                    q.push({dist[newnode],newnode});\n                }\n            }\n        }\n        \n        \n    }\n    int networkDelayTime(vector<vector<int>>& times, int N, int K) {\n        int n =times.size();\n        for(int i=0;i<n;i++){\n            int u= times[i][0];\n            int v =times[i][1];\n            int w =times[i][2];\n            adj[u].push_back({v,w});\n        }\n        for(int i=1;i<=N;i++){\n            visited[i]=0;\n            dist[i]=INT_MAX;\n        }\n        dijkistra(K);\n        int max_val =0;\n        for(int i=1;i<=N;i++){\n            if(dist[i]==INT_MAX){\n                return -1;\n            }\n            max_val=max(max_val,dist[i]);\n        }\n        return max_val;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time"}