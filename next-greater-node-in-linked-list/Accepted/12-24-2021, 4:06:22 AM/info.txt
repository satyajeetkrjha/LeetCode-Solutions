{"id":606413345,"lang":"cpp","time":"8Â months","timestamp":1640336782,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/606413345/","is_pending":"Not Pending","title":"Next Greater Node In Linked List","memory":"42.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nextLargerNodes(ListNode* head) {\n        vector <int> vec ;\n        ListNode* temp = head ;\n        while(temp!=NULL){\n            vec.push_back(temp->val);\n            temp = temp->next;\n        }\n        \n        stack <int> st;\n        vector <int> res(vec.size());\n        int sz = vec.size();\n        for(int i = sz-1; i>=0 ;i--){\n            if(!st.empty()){\n                while(!st.empty() && st.top() <= vec[i]){\n                    st.pop();\n                }\n            }\n            res[i] = st.empty() ? 0 : st.top();\n            cout <<\"stack size is \"<< st.size()<< endl;\n            st.push(vec[i]);\n        }\n        return res ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-greater-node-in-linked-list"}