{"id":548519888,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1630610337,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/548519888/","is_pending":"Not Pending","title":"Next Permutation","memory":"12.1 MB","code":"class Solution {\npublic:\n    void nextPermutation(vector<int>& nums) {\n      \n        int n = nums.size();\n        int i = n-2;\n        while(i>=0 && nums[i]>= nums[i+1]){\n            i--;\n        }\n        // now i stores the index where nums[i]<nums[i+1] because we came out of the loop\n        int index = i ;\n        cout <<\"index is \"<<index <<endl;\n        if(index >=0){\n            // find the first largest element on the right of this index\n            int j = nums.size()-1;\n            while(nums[index]>= nums[j]){\n                j --;\n            }\n            // so when you move out of this loop our nums[i]< nums[j]\n            swap (nums[index], nums[j]);   \n        }\n        reverse(nums.begin()+ index+1, nums.end());\n         \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation"}