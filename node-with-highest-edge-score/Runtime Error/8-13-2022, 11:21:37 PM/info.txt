{"id":773090846,"lang":"cpp","time":"1 week, 4 days","timestamp":1660447297,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/773090846/","is_pending":"Not Pending","title":"Node With Highest Edge Score","memory":"N/A","code":"\nclass Solution {\npublic:\n    int scores[100005];\n    vector <int> adj[100005];\n    bool visited[100005];\n    \n    void dfs(int u ){\n        if(!visited[u])\n            visited[u] = true;\n        for(int i =0;i< adj[u].size();i++){\n              int v = adj[u][i];\n             if(visited[v] || v == u) continue;\n              scores[v]+=u;\n               cout <<\"scores[v] is \"<< scores[v] << \"and u is \"<< u << \" and v is \"<< v <<  endl;\n              dfs(v);  \n        }\n  }\n    int edgeScore(vector<int>& edges) {\n        /*\n        memset(visited,false,sizeof(visited));\n        int n = edges.size();\n        for(int i = 0 ;i<n;i++){\n            int node = edges[i];\n            adj[i].push_back(node);\n        }\n    \n        for(int i =0 ;i<n;i++){\n                dfs(i);\n            //memset(visited,false,sizeof(visited));\n        }\n        \n        \n        int node;\n        \n        for(int i =0 ;i<n;i++){\n            cout << scores[i]<<\" \";\n        }\n        cout << endl;\n        */\n         int n = edges.size();\n        for(int i =0 ;i<edges.size();i++){\n            scores[edges[i]]+= i;\n        }\n        /*\n         for(int i =0 ;i<n;i++){\n            cout << scores[i]<<\" \";\n        }\n        cout << endl;\n        */\n        int ans = INT_MIN ;\n        int node=0 ;\n        for(int i =n ;i>=0;i--){\n            if(scores[i]>=ans){\n                ans = scores[i];\n                node = i;\n            }\n        }\n        \n        \n       \n        \n        return node ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000","title_slug":"node-with-highest-edge-score"}