{"id":512516764,"lang":"cpp","time":"1 year, 2 months","timestamp":1624533096,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/512516764/","is_pending":"Not Pending","title":"Number of Connected Components in an Undirected Graph","memory":"14.1 MB","code":"class Solution {\npublic:\n    vector <int> adj[2005];\n    bool visited[2005];\n    void dfs(int u ){\n        cout<<\"dfs vertex u is \"<<u<<endl;\n        if(visited[u])\n            return ;\n        visited[u] =true;\n        cout<<\"adj[u].size is \"<<adj[u].size()<<endl;\n        for(int i=0;i<adj[u].size();i++){\n            int v = adj[u][i];\n            cout<<\"v is \"<<v<<endl;\n            if(!visited[v]){\n                dfs(v);\n            }\n        }\n    }\n    int countComponents(int n, vector<vector<int>>& edges) {\n        for(int i=0;i<n;i++)\n            visited[i]=false;\n        \n        for(int i=0;i<edges.size();i++){\n            vector <int> edge  = edges[i];\n            int u = edge[0];int v = edge[1];\n            cout<<\"u is \"<<u<<endl;\n            cout<<\"v is \"<<v<<endl;\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        int c=0;\n        for(int i=0;i<n;i++){\n            if(visited[i] == false){\n                cout<<\"start node is \"<<i<<endl;\n                dfs(i);\n                c++;\n            }\n        }\n        \n        return c;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"number-of-connected-components-in-an-undirected-graph"}