{"id":549083134,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1630709499,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/549083134/","is_pending":"Not Pending","title":"Number of Islands","memory":"13.1 MB","code":"class Solution {\npublic:\n    int numIslands(vector<vector<char>>& grid) {\n       int n = grid.size();\n       int m = grid[0].size();\n        \n        int dx [4]={0,0,1,-1};\n        int dy[4]={1,-1,0,0};\n       \n        queue <pair <int,int> > q;\n        int count =0 ;\n        for(int i =0 ;i<n;i++){\n            for(int j =0 ;j<m;j++){\n                if(grid[i][j] == '1'){\n                    count ++;\n                    grid[i][j] = '2';\n                    q.push(make_pair(i,j));\n                    while(!q.empty()){\n                        pair <int ,int> vertices = q.front();\n                        q.pop();\n                        for(int dir =0 ;dir<4;dir++){\n                        int ndx = vertices.first + dx[dir];\n                        int ndy = vertices.second + dy[dir];\n                        if(ndx>=0 && ndy >=0 && ndx <n && ndy <m && grid[ndx][ndy] == '1'){\n                            q.push(make_pair(ndx,ndy));\n                            grid[ndx][ndy]='2';\n                        }\n                    }\n                }\n                      \n                }\n            }\n        }\n        return count ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}