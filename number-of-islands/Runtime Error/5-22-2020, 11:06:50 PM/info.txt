{"id":343322488,"lang":"cpp","time":"2 years, 3 months","timestamp":1590203210,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/343322488/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution {\n   int count;\n    int dx[4]={-1,0,1,0};\n     int dy [4]={0,1,0,-1};\n    \n    \npublic:\n    void dfs (vector<vector<char>>& grid,int r,int c,int numsRows,int numCols,vector<vector<int>>& visited ){\n        visited[r][c] =1;\n        for(int dir =0;dir<4;dir++){\n            int nr = r+dx[dir];\n            int nc =c+ dy[dir];\n            if(nr >=0 && nc >=0 && nr <= numsRows-1 && nc <= numCols-1){\n                 if(!visited[nr][nc] && grid[nr][nc]=='1')\n                     dfs(grid,nr,nc,numsRows,numCols,visited);\n            }\n        }\n        \n    }\n    int numIslands(vector<vector<char>>& grid) {\n     int   r =grid.size();// number of rows\n      int  m=grid[0].size(); // number of columns\n       vector<vector<int> > visited(r+1,vector<int>(m+1,0));\n        count=0;\n        \n\n        for(int i =0;i<r;i++){\n            for(int j=0;j<m;j++){\n                if(grid[i][j] =='1' && !visited[i][j]){\n                    count++;\n                    dfs(grid ,i,j,r,m,visited);\n                }\n            }\n        }\n        return count;\n         \n    }\n};","compare_result":"11000000000000000000000000000000000000000000000","title_slug":"number-of-islands"}