{"id":728011985,"lang":"cpp","time":"2Â months","timestamp":1655857128,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/728011985/","is_pending":"Not Pending","title":"Number of Ways to Arrive at Destination","memory":"35 MB","code":"typedef long long int ll ;\nclass Solution {\npublic:\n    const int mod = 1e9+7;\n    vector <pair <ll ,ll> > adj[10005];\n    ll dist[100005];\n    ll ways[100005];\n    void dijkistra(int u){\n        priority_queue<pair <ll ,ll> ,vector <pair <ll ,ll> > ,\n        greater<pair <ll ,ll> >> pq ;\n        for(int i =0 ;i<10005;i++){\n            dist[i] = LONG_MAX;\n        }\n        memset(ways ,0,sizeof(ways));\n        dist[u] =0 ;\n        ways[u] = 1;\n        pq.push({0,u});\n        while(!pq.empty()){\n            auto[weight,node]=pq.top();\n            pq.pop();\n            for(auto[newnode ,newdist]:adj[node]){\n                if(dist[newnode] > weight +newdist){\n                    dist[newnode] = weight + newdist ;\n                    ways[newnode] = ways[node];\n                    pq.push({dist[newnode],newnode});\n                }\n                else if( dist[newnode] == weight + newdist){\n                    ways[newnode]= (ways[newnode]+ ways[node])%mod;\n                }\n            }\n        }\n    }\n    \n    \n    \n    \n    int countPaths(int n, vector<vector<int>>& roads) {\n        \n       \n        for(int i  =0 ;i< roads.size();i++){\n            int u = roads[i][0];int v= roads[i][1]; int w = roads[i][2];\n            adj[u].push_back({v,w});\n            adj[v].push_back({u,w});\n        }\n        \n        \n        dijkistra(0);\n        return ways[n-1];\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-to-arrive-at-destination"}