{"id":345342026,"lang":"cpp","time":"2Â years, 3Â months","timestamp":1590570346,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/345342026/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"9.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if(!head)\n            return head;\n        ListNode* odd=head;\n        ListNode* even =head->next;\n        ListNode* odd_head=head;\n        ListNode* even_head=head->next;\n        \n        while(even!=NULL && even->next!=NULL){\n            // move odd and even \n            odd ->next= odd->next->next;\n            even->next =even->next->next;\n            odd =odd->next;\n            even =even->next;\n        }\n        odd->next=even_head;\n        return head;\n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list"}