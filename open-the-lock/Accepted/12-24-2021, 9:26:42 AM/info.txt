{"id":606495555,"lang":"cpp","time":"8Â months","timestamp":1640356002,"status_display":"Accepted","runtime":"512 ms","url":"/submissions/detail/606495555/","is_pending":"Not Pending","title":"Open the Lock","memory":"117 MB","code":"class Solution {\npublic:\n    int openLock(vector<string>& deadends, string target) {\n      \n      set <string> dds(deadends.begin(),deadends.end());\n      set <string> visited ;\n      queue<string> q;\n      string initial = \"0000\";\n      if(initial == target)\n          return 0;\n      // if the initial is in deadend then it's a big no \n      if(dds.find(initial)!= dds.end()){\n          return - 1;\n      }\n    \n      visited.insert(initial);\n      q.push(initial);\n    \n      int steps =0;\n        \n      while(!q.empty()){\n          int sz = q.size();\n          for(int i =0 ;i<sz;i++){\n              string s = q.front();\n              q.pop();\n              vector <string> possibilities = fun(s);\n              \n              for(auto str: possibilities){\n                  if(str == target) return ++steps;\n                  \n                  if(visited.find(str)!=visited.end()){\n                      continue;\n                  }\n                  \n                  if(dds.find(str) == dds.end()){\n                      q.push(str);\n                      visited.insert(str);\n                  }\n                  \n              }\n          }\n          steps++; \n      }\n        return -1 ;\n    }\n    \n    vector<string> fun(string s){\n        vector <string > res ;\n        for(int i =0 ;i<4;i++){\n            string temp = s;\n            temp[i] = (s[i] -'0'+1)%10 +'0';\n            res.push_back(temp);\n            temp[i]= (s[i]-'0'-1+10)%10+'0';\n            res.push_back(temp);\n        }\n        return res ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"open-the-lock"}