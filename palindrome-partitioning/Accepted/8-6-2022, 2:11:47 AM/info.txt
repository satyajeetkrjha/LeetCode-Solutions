{"id":766418606,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1659766307,"status_display":"Accepted","runtime":"143 ms","url":"/submissions/detail/766418606/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"80 MB","code":"class Solution {\npublic:\n     vector <vector <string> > res ;\n    bool isPalindrome(string s ,int i ,int j){\n        while(i<j){\n            if(s[i]!=s[j])\n                return false;\n            i++,j--;\n        }\n        return true;\n    }\n    vector<string> temp ; // temp\n    void backtrack(string &s,int i){ \n        if(i>=s.size()){\n            res.push_back(temp);\n            return ;\n        }\n        for(int j = i ;j <s.size();j++){\n            if(isPalindrome(s,i,j)){\n                string substring = s.substr(i,j-i+1);\n                temp.push_back(substring);\n                backtrack(s,j+1);\n                temp.pop_back();\n            }\n        }\n    }\n    vector<vector<string>> partition(string s) {\n        backtrack(s,0);\n        return res ;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning"}