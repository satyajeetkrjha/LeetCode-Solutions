{"id":620869199,"lang":"cpp","time":"7 months, 1 week","timestamp":1642321006,"status_display":"Accepted","runtime":"468 ms","url":"/submissions/detail/620869199/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"497.3 MB","code":"class Solution {\npublic:\n    \n   \n    \n    bool dfs(vector<int> nums,int index ,int subsetsum,vector <vector <int> > &cache){\n        if(subsetsum == 0){\n            return true;\n        }\n        if(index == 0 || subsetsum <0){\n            return false;\n        }\n        \n        if(cache[index][subsetsum]!= -1){\n            return (cache[index][subsetsum]==true);\n        }\n        bool res = dfs(nums,index-1,subsetsum-nums[index-1],cache)\n            || dfs(nums,index-1,subsetsum,cache);\n        cache[index][subsetsum] = res;\n        return res ;\n    \n        \n    }\n    \n    bool canPartition(vector<int>& nums) {\n       int n = nums.size();\n       int totalsum = 0 ;\n        for(int i =0 ;i<nums.size();i++){\n            totalsum+= nums[i];\n        }\n         if(totalsum % 2 !=0){\n            return false;\n        }\n        \n        int subsetsum = totalsum /2;\n        \n         vector <vector <int> > cache(n+1,vector<int> (subsetsum+1,-1));\n       \n        return dfs(nums,n-1,subsetsum,cache);\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}