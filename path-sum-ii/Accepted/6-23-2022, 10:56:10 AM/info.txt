{"id":729374954,"lang":"cpp","time":"2Â months","timestamp":1655996170,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/729374954/","is_pending":"Not Pending","title":"Path Sum II","memory":"19.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    vector <vector<int> > res ;\n    \n    vector <int> v;\n    void dfs(TreeNode* root,int pathsum,int targetSum){\n        if(!root)\n            return ;\n        pathsum+= root->val;\n        v.push_back(root->val);\n        if(!root->left && !root->right && pathsum == targetSum){\n            res.push_back(v);\n         }\n        if(root->left){\n            dfs(root->left,pathsum,targetSum);\n        }\n        if(root->right){\n            dfs(root->right,pathsum,targetSum);\n        }\n        if(v.size()>0){\n            v.pop_back();\n        }\n        \n    }\n    \n    \n    \n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        if(root ==NULL)\n            return res ;\n        int pathsum =0 ;\n        dfs(root,pathsum ,targetSum);\n        return res ;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}