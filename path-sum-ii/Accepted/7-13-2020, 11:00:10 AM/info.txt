{"id":366064899,"lang":"cpp","time":"2 years, 1 month","timestamp":1594652410,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/366064899/","is_pending":"Not Pending","title":"Path Sum II","memory":"26 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector <vector<int> > ans;\n    vector <int> v;\n    bool flag =false;\n    void dfs(TreeNode* root,int pathsum,int sum){\n        cout<<\"pathsum is \"<<pathsum<<endl;\n        if(!root)\n            return ;\n        pathsum+=root->val;\n         v.push_back(root->val);\n         printvector(v);\n        \n        if(root->left ==NULL && root->right ==NULL && pathsum ==sum){\n            ans.push_back(v);\n            cout<<\"vector cleared\"<<endl;\n\n        }\n       \n       \n        if(root->left){\n            dfs(root->left,pathsum,sum);\n        }\n        if(root->right){\n            dfs(root->right,pathsum,sum);\n        }\n        if(v.size()>0)\n        v.pop_back();\n        \n    }\n    void printvector(vector <int> v){\n        for(int i=0;i<v.size();i++){\n            cout<<v[i]<<\" \";\n        }\n        cout<<endl;\n    }\n    vector<vector<int>> pathSum(TreeNode* root, int sum) {\n          int pathsum =0;\n              if(root== NULL)\n                  return ans ;\n          dfs(root,pathsum,sum);\n        return ans;\n    }\n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}