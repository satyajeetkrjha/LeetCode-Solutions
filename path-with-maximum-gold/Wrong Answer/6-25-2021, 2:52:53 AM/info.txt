{"id":512902922,"lang":"cpp","time":"1 year, 2 months","timestamp":1624603973,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/512902922/","is_pending":"Not Pending","title":"Path with Maximum Gold","memory":"N/A","code":"class Solution {\npublic:\n     int visited[100][100];\n    void dfs (vector<vector<int>>& grid ,int &maxsum ,int r,int c){\n        if(visited[r][c] ==1)\n            return;\n         visited[r][c] =1;\n        int n = grid.size();\n        int m = grid[0].size();\n        maxsum = max(maxsum ,maxsum+grid[r][c]);\n        cout<<\"r and c \"<<r<<\" \"<<c<<endl;\n        cout<<\"maxsum is \"<<maxsum <<endl;\n        if(r+1 >=0 && r+1<n && c>=0 && c<m && !visited[r+1][c] && grid[r+1][c]>0){\n            dfs(grid,maxsum,r+1,c);\n        }\n         if(r-1 >=0 && c>=0 && r-1<n && c <m &&  !visited[r-1][c] && grid[r-1][c]>0){\n            dfs(grid,maxsum,r-1,c);\n        }\n        if(r >=0 && c+1>=0 && r<n && c+1<m && !visited[r][c+1] && grid[r][c+1]>0){\n            dfs(grid,maxsum,r,c+1);\n        }\n        \n        if(r >=0 && c-1>=0 && r<n && c-1<m && !visited[r][c-1] && grid[r][c-1]>0){\n            dfs(grid,maxsum,r,c-1);\n        }\n         visited[r][c]=0;\n    \n    }\n        \n        \n    int getMaximumGold(vector<vector<int>>& grid) {\n        int r = grid.size();\n        int c = grid[0].size();\n        int maxsum =0;\n        int x =-1;int y=-1;\n        int visited[r+1][c+1];\n        for(int i=0;i<r;i++){\n            for(int j=0;j<c;j++){\n                if(grid[i][j]>0){\n                    visited[i][j] =0;\n                    x =i;\n                    y=j;\n                   \n                }\n            }\n        }\n        \n        dfs(grid,maxsum,x,y);\n        return maxsum;\n        \n    }\n};","compare_result":"0001000000000000000000100000000000000000000000000","title_slug":"path-with-maximum-gold"}