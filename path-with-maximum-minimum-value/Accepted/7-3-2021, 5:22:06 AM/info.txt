{"id":516691570,"lang":"cpp","time":"1 year, 1 month","timestamp":1625304126,"status_display":"Accepted","runtime":"236 ms","url":"/submissions/detail/516691570/","is_pending":"Not Pending","title":"Path With Maximum Minimum Value","memory":"33.3 MB","code":"class Solution {\npublic:\n    const int neigh[4][2] = {{1,0},{0,1},{-1,0},{0,-1}};\n    typedef tuple<int, int, int> cij;\n    int maximumMinimumPath(vector<vector<int>>& A) {\n        int m = A.size(), n = A[0].size();\n        priority_queue<cij> pq;\n        pq.push({A[0][0],0,0});\n        vector<vector<int>> seen(m,vector<int>(n));\n        seen[0][0]=1;\n\n        int ret = INT_MAX;\n        while(!pq.empty()){\n            auto [c,i,j] = pq.top();pq.pop();\n            ret = min(ret, c);\n\t\t\t     if(i==m-1 && j==n-1) break;\n            for(auto[di,dj]: neigh){\n                int ii = i+di, jj=j+dj;\n                if(ii>= 0 and ii<m and jj>=0 and jj<n and !seen[ii][jj]) {\n                  seen[ii][jj] = 1;\n                  pq.push({A[ii][jj],ii,jj});\n                }\n            }\n        }\n        return ret;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-with-maximum-minimum-value"}