{"id":720334165,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1655024509,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/720334165/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* next;\n\n    Node() : val(0), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}\n\n    Node(int _val, Node* _left, Node* _right, Node* _next)\n        : val(_val), left(_left), right(_right), next(_next) {}\n};\n*/\n\nclass Solution {\npublic:\n    Node* connect(Node* root) {\n        queue<Node*> q;\n        q.push(root);\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i =0 ;i<sz;i++){\n                auto cur= q.front();\n                q.pop();\n                if(i == sz-1){\n                    cur->next =NULL;\n                }\n                else {\n                    cur->next = q.front();\n                }\n                if(cur->left)\n                    q.push(cur->left);\n                if(cur->right)\n                    q.push(cur->right);\n            }\n        }\n        return root;\n        \n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000000","title_slug":"populating-next-right-pointers-in-each-node"}