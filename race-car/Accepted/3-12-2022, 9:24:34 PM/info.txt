{"id":658777241,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1647138274,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/658777241/","is_pending":"Not Pending","title":"Race Car","memory":"9.6 MB","code":"class Solution {\npublic:\n    int racecar(int target) {\n        queue<vector<int>> q;\n        q.push({0,0,1}) ;// moves ,position and speed\n      \n        while(!q.empty()){\n            auto vec  = q.front();\n            q.pop();\n            \n            int moves = vec[0];\n            int pos = vec[1];\n            int speed = vec[2];\n            \n            if(pos == target) return moves ;\n            \n            if(abs(pos) >2*target) continue ;\n            \n            q.push({moves+1,pos+speed,speed*2});\n           \n            if((pos+speed > target && speed >0 )|| (pos +speed <target && speed <0)){\n                q.push({\n                    moves+1,\n                    pos,\n                    speed >0 ?-1:1\n                    });\n            }  \n        }\n        return 0;\n            \n            \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"race-car"}