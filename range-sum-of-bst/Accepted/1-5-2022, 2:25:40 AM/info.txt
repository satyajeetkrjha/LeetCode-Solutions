{"id":613433734,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1641367540,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/613433734/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sum =0;\n    void inorder(TreeNode* root,int low ,int high){\n        if(!root){\n            return ;\n        }\n        inorder(root->left,low,high);\n        if(root->val >=low && root->val <=high){\n            sum+=root->val;\n        } \n        inorder(root->right,low,high);\n    }\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        inorder(root,low,high);\n        return sum ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}