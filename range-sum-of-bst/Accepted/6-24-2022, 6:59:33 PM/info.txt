{"id":730446329,"lang":"cpp","time":"2Â months","timestamp":1656111573,"status_display":"Accepted","runtime":"137 ms","url":"/submissions/detail/730446329/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   vector <int> res ;\n    void dfs(TreeNode* root, int low, int high){\n        if(!root)\n            return;\n        dfs(root->left,low,high);\n        if(root->val >= low && root->val <= high){\n            res.push_back(root->val);\n        }\n        dfs(root->right,low,high);\n    }\n    int rangeSumBST(TreeNode* root, int low, int high) {\n         dfs(root,low ,high);\n         int sum =0 ;\n        for(auto &it:res){\n            sum += it;\n        }\n        return sum ;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}