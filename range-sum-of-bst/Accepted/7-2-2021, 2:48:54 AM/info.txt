{"id":516198059,"lang":"cpp","time":"1 year, 1 month","timestamp":1625208534,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/516198059/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode * root ,int &sum ,int low ,int high){\n        if(!root) \n            return ;\n        dfs(root->left,sum,low,high);\n        dfs(root->right,sum ,low,high);\n        if(root !=NULL && root->val >=low && root->val <=high){\n            sum+=root->val;\n        }\n        \n    }\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        int sum =0 ;\n        dfs(root ,sum,low,high);;\n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}