{"id":621298774,"lang":"cpp","time":"7 months, 1 week","timestamp":1642374930,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/621298774/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"N/A","code":"class Solution {\npublic:\n    \n    void dfs(string source,map <string ,priority_queue<string ,vector<string>,greater<string>>> &adj , vector<string>&res){\n        cout <<\"source is ....\"<< source<< endl;\n        res.push_back(source);\n       while(!adj[source].empty()){\n          string neighbournode = adj[source].top();\n           adj[source].pop();\n           dfs(neighbournode,adj,res);\n       }\n    }\n    \n    \n    vector<string> findItinerary(vector<vector<string>>& tickets) {\n        vector<string> res ;\n    map <string ,priority_queue<string ,vector<string>,greater<string>>> adj;\n        \n        for(auto node :tickets){\n            adj[node[0]].push(node[1]);\n        }\n        dfs(\"JFK\",adj,res);\n        return res;\n        \n        \n        \n    }\n};","compare_result":"11110110110001000000000010000001000000001100000000000100000000010100010000001000","title_slug":"reconstruct-itinerary"}