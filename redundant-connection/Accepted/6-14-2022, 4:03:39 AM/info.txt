{"id":721907431,"lang":"cpp","time":"2 months, 1 week","timestamp":1655193819,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/721907431/","is_pending":"Not Pending","title":"Redundant Connection","memory":"8.6 MB","code":"class Solution {\npublic:\n    vector <int> parent;\n    \n    int findparent(int u){\n        while(parent[u]!=u){\n            u = parent[u];\n        }\n        return u ;\n    }\n    \n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        \n        int n = edges.size();\n        parent.resize(n+2,-1);\n        for(int i =1 ;i<=n;i++){\n            parent[i] =i;\n        }\n        \n        vector <int> res ;\n        \n        for(int i =0 ;i< edges.size();i++){\n            int u = edges[i][0] ;int v = edges[i][1];\n            int p1 = findparent(u);\n            int p2 = findparent(v);\n            if(p1 == p2){\n               res.push_back(u);\n               res.push_back(v);\n               break;\n            }\n            parent[p1] = p2;\n        }\n        return res ;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"redundant-connection"}