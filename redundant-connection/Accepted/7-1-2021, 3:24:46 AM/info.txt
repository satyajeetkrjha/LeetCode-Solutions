{"id":515745510,"lang":"cpp","time":"1 year, 1 month","timestamp":1625124286,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/515745510/","is_pending":"Not Pending","title":"Redundant Connection","memory":"9 MB","code":"class Solution {\npublic:\n    int find( vector <int> & parents ,int i){\n       while(parents[i]!=i){\n           i = parents[i];\n       }\n        return i;\n    }\n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        int n = edges.size();\n        vector <int> parents(n+2,0);\n        for(int i =1;i<=n;i++){\n            parents[i] =i;\n        }\n        vector <int> temp;\n        for(int i =0;i<edges.size();i++){\n            vector <int> nodes = edges[i];\n            int u = nodes[0];int v = nodes[1];\n            int f1 = find(parents ,u);\n            int f2 = find(parents ,v);\n            \n            if(f1 == f2){\n                temp.push_back(u);\n                temp.push_back(v);\n                break;\n            }\n            parents[f1]=f2;\n        }\n        return temp;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"redundant-connection"}