{"id":754019221,"lang":"cpp","time":"1Â month","timestamp":1658521637,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/754019221/","is_pending":"Not Pending","title":"Redundant Connection","memory":"8.9 MB","code":"class Solution {\npublic:\n     vector <int> parent ;\n    int findParent(int u){\n       while(parent[u]!=u){\n           u = parent[u];\n       } \n        return u ;\n    }\n    \n    \n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        int n = edges.size();\n       \n        parent.resize(n+2);\n        for(int i =1 ;i<=n;i++) parent[i] =i;\n        vector <int> res ;\n       \n        for(int i =0 ;i<edges.size();i++){\n            int u = edges[i][0];int v = edges[i][1];\n            int p1 = findParent(u);\n            int p2 = findParent(v);\n            \n            if(p1 == p2){\n                res.push_back(u);\n                res.push_back(v);\n                break;\n            }\n            parent[p1] = p2 ;\n            \n        }\n        return res ;\n\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"redundant-connection"}