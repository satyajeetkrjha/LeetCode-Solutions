{"id":346262180,"lang":"cpp","time":"2 years, 2 months","timestamp":1590758598,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/346262180/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"10.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n       ListNode* cur=head;\n        if(!head)\n            return head;\n        while(cur!=NULL & cur->next!=NULL){\n            if(cur->val == cur->next->val){\n                cur->next =cur->next->next;\n            }\n            else{\n                cur=cur->next;\n            }\n            \n        }\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list"}