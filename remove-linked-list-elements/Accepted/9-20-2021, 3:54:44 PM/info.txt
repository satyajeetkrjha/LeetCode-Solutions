{"id":558230343,"lang":"cpp","time":"11 months, 1 week","timestamp":1632167684,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/558230343/","is_pending":"Not Pending","title":"Remove Linked List Elements","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void printList(ListNode* head){\n        while(head!=NULL){\n            cout<<head->val <<\" \";\n            head = head->next;\n        }\n        cout<<endl;\n        \n    }\n    ListNode* removeElements(ListNode* head, int val) {\n       ListNode* sentinal = new ListNode(0);\n        sentinal->next = head;\n        printList(sentinal->next);\n        ListNode* prev = sentinal ;\n        ListNode* cur = head ;\n        while(cur!=NULL){\n            if(cur->val == val){\n                prev->next = cur->next;\n            }\n            else{\n                prev = cur;\n            }\n            cur = cur->next;\n        }\n        return sentinal->next;\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-linked-list-elements"}