{"id":378008772,"lang":"cpp","time":"2Â years","timestamp":1596912722,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/378008772/","is_pending":"Not Pending","title":"Remove Zero Sum Consecutive Nodes from Linked List","memory":"11.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeZeroSumSublists(ListNode* head) {\n        if(!head)\n            return NULL;\n        ListNode* dummy  = new ListNode(0);\n        dummy-> next = head;\n        ListNode* cur  = dummy ;\n        int presum =0;\n        map <int ,ListNode*> m;\n        while(cur!=NULL){\n            presum+=cur->val;\n            if(m.find(presum)!=m.end()){\n                cur = m[presum]->next;\n                int p = presum+cur->val;\n                while(p!=presum){\n                    m.erase(p);\n                    cur = cur->next;\n                    p+=cur->val;\n                }\n                m[presum]->next =cur->next;\n                \n            }\n            else{\n                m[presum] = cur;\n            }\n            cur = cur->next;\n        }\n        return dummy->next;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-zero-sum-consecutive-nodes-from-linked-list"}