{"id":727644956,"lang":"cpp","time":"2Â months","timestamp":1655821905,"status_display":"Accepted","runtime":"87 ms","url":"/submissions/detail/727644956/","is_pending":"Not Pending","title":"Reorder List","memory":"17.8 MB","code":"class Solution {\n public:\n  ListNode* reverse(ListNode* head) {\n    ListNode *cur = head, *prev = NULL;\n\n    while (cur != NULL) {\n      auto next = cur->next;\n      cur->next = prev;\n      prev = cur;\n      cur = next;\n    }\n\n    head = prev ;\n      return head ;\n  }\n\n  void merge(ListNode* l1, ListNode* l2) {\n    while (l1 && l2) {\n      auto next_l1 = l1->next ;\n      auto next_l2 = l2->next ;\n      l1->next = l2;\n      l2->next = next_l1;\n      l1 = next_l1 ;\n      l2 = next_l2 ;  \n    }\n  }\n\n  void reorderList(ListNode* head) {\n    auto slow = head, fast = head;\n    while (fast && fast->next) {\n      slow = slow->next;\n      fast = fast->next->next;\n    }\n\n    auto head1 = head, head2 = slow->next;\n    slow->next = NULL;\n    \n    ListNode* reversedhalf = reverse(head2);\n    merge(head1, reversedhalf);\n  }\n};","compare_result":"111111111111","title_slug":"reorder-list"}