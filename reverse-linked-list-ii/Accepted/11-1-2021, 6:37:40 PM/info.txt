{"id":580663464,"lang":"cpp","time":"9Â months, 3Â weeks","timestamp":1635806260,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/580663464/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int m, int n) {\n        if(head == NULL){\n            return NULL;\n        }\n        ListNode* prev = NULL;\n        ListNode* cur = head ;\n        \n        while(m >1){\n            prev = cur ;\n            cur = cur->next ;\n            m -- ;\n            n --;\n        }\n        \n        ListNode* conn = prev ;\n        ListNode* tail = cur;\n        \n        ListNode* nextofnext = NULL;\n        while(n >0){\n            nextofnext = cur->next ;\n            cur->next = prev;\n            prev = cur ;\n            cur = nextofnext;\n            n --;\n        }\n        \n        if(conn!=NULL){\n            conn->next = prev;\n        }\n        else{\n            head = prev;\n        }\n        \n        tail->next = cur ;\n        return head ;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}