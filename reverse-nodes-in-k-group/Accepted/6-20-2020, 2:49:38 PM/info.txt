{"id":356217080,"lang":"cpp","time":"2 years, 2 months","timestamp":1592678978,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/356217080/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"10.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    \n    ListNode* reverseKGroup(ListNode* head, int k) {\n      if(!head) return NULL;\n      ListNode* prev=NULL;\n      ListNode* next=NULL;\n      ListNode* cur =head;\n      int count =0;\n      for(int i=0;i<k;i++){\n            if(!cur) return head;\n            cur=cur->next;\n        }\n      cur=head;\n      for(int i=0;i<k;i++){\n          if(!cur) break;\n            next=cur->next;\n            cur->next=prev;\n            prev=cur;\n            cur=next;\n        }\n        head->next =reverseKGroup(next,k);\n        return prev;\n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group"}