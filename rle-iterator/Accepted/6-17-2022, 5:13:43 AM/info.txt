{"id":724311815,"lang":"cpp","time":"2 months, 1 week","timestamp":1655457223,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/724311815/","is_pending":"Not Pending","title":"RLE Iterator","memory":"8.6 MB","code":"class RLEIterator {\n    \nvector <int> vec;   \nint index ;    \n    \npublic:\n    \n    RLEIterator(vector<int>& encoding) {\n        vec = encoding ;\n        index  =0 ;\n    }\n    \n    int next(int n) {\n        \n        int sz = vec.size();\n        while(index < sz){\n            if(vec[index] <n){\n                n = n -vec[index]; \n                index = index +2 ;\n            }\n            else {\n                vec[index] -= n ;\n                return vec[index+1];\n            }\n        }\n        return -1;\n        \n    \n    }\n};\n\n/**\n * Your RLEIterator object will be instantiated and called as such:\n * RLEIterator* obj = new RLEIterator(encoding);\n * int param_1 = obj->next(n);\n */","compare_result":"11111111111","title_slug":"rle-iterator"}