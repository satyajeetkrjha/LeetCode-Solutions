{"id":736888247,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1656792818,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/736888247/","is_pending":"Not Pending","title":"Rotate List","memory":"11.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        \n        if(head ==NULL)\n            return NULL ;\n        ListNode* cur = head ;\n        int len =1 ;\n        while(cur->next!=NULL){\n            cur = cur->next ;\n            len ++;\n        }\n       \n        //cout <<\"len is \"<< len << endl;\n        //cout <<\"val is \"<< cur->val << endl;\n        cur->next = head ;\n        k = k % len ;\n       \n        k = len -k;\n        //cout <<\" k is \"<< k <<endl;\n        while(k--){\n            cur = cur->next ;\n        }\n        head = cur->next ;\n        cur->next = NULL ;\n        return head ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}