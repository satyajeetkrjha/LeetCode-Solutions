{"id":715367782,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654480923,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/715367782/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"13.1 MB","code":"\nclass Solution {\npublic:\n    int orangesRotting(vector<vector<int>>& grid) {\n      int numfresh = 0 ;\n      int numrotten =0;\n      int n = grid.size();\n      int m = grid[0].size();\n       \n      queue <pair <int ,int> > q;\n        \n      for(int i =0 ;i<n;i++){\n          for(int j =0 ;j<m;j++){\n              if(grid[i][j] == 1){\n                  numfresh++;\n              }\n              if(grid[i][j] == 2){\n                  numrotten++;\n                  q.push({i,j});\n              }\n          }\n      }\n        \n    //test case 4 that there are no fresh oranges so nothing gets rotten\n        if(numfresh == 0){\n            return 0;\n        }\n        \n        // there are no rotten oranges so nothing gets rotten\n        if(numrotten == 0){\n            return -1 ;\n        }\n        \n        \n        int time =0;\n        /*\n        imagine a situation where there are total 10 rotten oranges and \n        only one fresh orange at level 2 .now we already marked it rotten so we don't need to process bfs at all after this from the newwly added rotten orange .Think hard\n        */\n        int dx[4] ={-1,1,0,0};\n        int dy[4] ={0,0,-1,1};\n        while(!q.empty() && numfresh >0){\n            int sz = q.size();\n            for(int i =0 ;i<sz;i++){\n                auto cur = q.front(); // this is a rotten orange\n                q.pop();\n               // now look at its neighbours and rot them\n                for(int k =0 ;k<4;k++){\n                    int nr = cur.first+dx[k];\n                    int nc = cur.second+dy[k];\n                    if(nr >=0 && nc>=0 && nr <grid.size() && nc <grid[0].size() && grid[nr][nc] == 1){\n                        grid[nr][nc] = 2;\n                        numfresh --;\n                        q.push({nr,nc});\n                    }\n                }\n                \n            }\n            time++;\n        }\n        \n        if(numfresh == 0)\n          return time ;\n        return -1 ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges"}