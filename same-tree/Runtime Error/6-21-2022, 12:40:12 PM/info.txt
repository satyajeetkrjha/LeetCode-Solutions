{"id":727737253,"lang":"cpp","time":"2Â months","timestamp":1655829612,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/727737253/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool isSameTree(TreeNode* p, TreeNode* q) {\n       if(p->val !=q->val)\n           return false ;\n        queue <TreeNode*> q1;\n        queue <TreeNode*> q2;\n        q1.push(p); q2.push(q);\n        while(!q1.empty() && !q2.empty()){\n            auto cur1 = q1.front() ; q1.pop();\n            auto cur2 = q2.front() ; q2.pop();\n            \n            if(cur1->val != cur2->val)\n                return false ;\n            \n            \n            \n            if(cur1->left && cur2->left){\n                 q1.push(cur1->left);\n                 q2.push(cur2->left);\n            }\n            else if(cur1->left || cur2->left)\n                return false;\n           \n            \n           if(cur2->right && cur1->right){\n               q1.push(cur1->right);\n               q2.push(cur2->right);\n           }\n            else if(cur1->right || cur2->right){\n                return false;\n            }\n        \n            \n        }\n        return true ;\n    }\n};","compare_result":"111000000000000000000000000000000000000000000000000000000000","title_slug":"same-tree"}