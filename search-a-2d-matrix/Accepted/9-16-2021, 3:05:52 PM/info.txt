{"id":556070004,"lang":"cpp","time":"11 months, 1 week","timestamp":1631819152,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/556070004/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"9.6 MB","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int n  = matrix.size();\n        if(n ==0)\n            return false ;\n        int m = matrix[0].size();\n        \n        int left = 0 ;\n        int right = (m*n)-1;\n        \n       // cout<<\"n is \"<<n<<endl;\n        //cout<<\"m is \"<<m <<endl;\n        //cout<<\"left and right before start are \"<<left <<\" \"<<right <<endl;\n        while(left <= right){\n            \n            int pivot = (left+right)/2;\n            int r = pivot /m;\n            int c= pivot % m;\n            //cout<<\"left \"<<left <<endl;\n            //cout<<\"right \"<<right <<endl;\n            //cout<<\"pivot is \"<<pivot <<endl;\n            //cout<<\"r and c before breaking is \"<<r << c <<endl;\n            if(matrix[r][c] == target){\n                return true;\n            }\n            else {\n                if(matrix[r][c]<target){\n                    left = pivot+1;\n                }\n                else{\n                    right = pivot -1;\n                }\n            }\n            \n        }\n        return false ;\n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}