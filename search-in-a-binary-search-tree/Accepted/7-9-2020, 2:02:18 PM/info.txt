{"id":364369713,"lang":"cpp","time":"2 years, 1 month","timestamp":1594317738,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/364369713/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if(root==NULL)\n            return root;\n        TreeNode* cur=root;\n        while(cur){\n            if(cur->val == val){\n                return cur;\n            }\n            else if(cur->val > val){\n                cur =cur->left;\n            }\n            else {\n                cur =cur->right;\n            }\n        }\n        return cur;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}