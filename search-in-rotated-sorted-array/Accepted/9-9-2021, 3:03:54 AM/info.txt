{"id":551943593,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1631171034,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/551943593/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"11.1 MB","code":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        \n        int low = 0 ;\n        int high = nums.size() -1 ;\n        \n        while(low <= high){\n            int mid = (low+high)/2;\n            if(nums[mid] == target){\n                return mid ;\n            }\n            else if (nums[low]<=nums[mid]){\n                // [low .....mid] is sorted portion\n                if(target >= nums[low] && target <nums[mid]){\n                    high = mid-1;\n                }\n                else\n                    low = mid+1; // target is in another sorted half \n            }\n            else{\n                \n                if(target > nums[mid] && target <=nums[high]){\n                    low = mid+1;\n                }\n                else{\n                    high = mid -1;\n                }\n                \n            }\n        }\n        return -1;\n        \n        \n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array"}