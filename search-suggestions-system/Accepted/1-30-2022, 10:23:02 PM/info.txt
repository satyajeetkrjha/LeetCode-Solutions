{"id":631332741,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1643599382,"status_display":"Accepted","runtime":"327 ms","url":"/submissions/detail/631332741/","is_pending":"Not Pending","title":"Search Suggestions System","memory":"91 MB","code":"\nstruct Node{\n    \n    Node* links[26];\n    bool flag ;\n    \n    void setEnd(){\n        flag = true;\n    }\n    \n    bool getEnd(){\n        return flag ;\n    }\n    \n    void put(char ch ,Node* node){\n        links[ch-'a'] = node;\n    }\n    \n    bool containsKey(char ch){\n        return (links[ch-'a']!=NULL);\n    }\n    \n    Node* get(char ch){\n        return links[ch-'a'];\n    }\n    \n};\n\n\n\n\n\nclass Solution {\n    \n    private :\n        Node* root ;\n        vector <vector <string> > results ;\n    \npublic:\n    \n    Solution(){\n        root = new Node();\n    }\n    \n    void insert(string word){\n        Node* node = root ;\n        for(int i =0 ;i<word.size();i++){\n            char ch = word[i];\n            if(!node->containsKey(ch)){\n                node->put(ch,new Node());\n            }\n            node = node->get(ch);\n        }\n        node->setEnd();\n    }\n    \n    void dfs(Node* node ,string &word, vector<string> &res){\n        if(res.size() == 3){\n            return;\n        }\n        if(node->getEnd()){\n            res.push_back(word);\n        }\n        \n        for( char c = 'a';c<='z';c++){\n            if(node->containsKey(c)){\n                word += c;\n                dfs(node->get(c) ,word,res);\n                word.pop_back();\n            }\n        }\n        \n    }\n    \n    vector<string> moveToPrefix(string word){\n        // carry the root forward to the prefix first \n        Node* node = root ;\n        vector<string> res;\n        for(int i =0 ;i<word.size();i++){\n            char ch = word[i];\n            if(!node->containsKey(ch)){\n                return res;\n            }\n            node = node->get(ch);\n        }\n        dfs(node,word,res);\n        return res ;\n        \n    }\n    \n    vector<vector<string>> suggestedProducts(vector<string>& products, string searchWord) {\n        \n        for(int i =0 ;i<products.size();i++){\n            insert(products[i]);\n        }\n        \n        string prefix ;\n        for(int i =0;i<searchWord.size();i++){\n            prefix = prefix+searchWord[i];\n            results.push_back(moveToPrefix(prefix));\n        }\n        \n        \n        return results ;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"search-suggestions-system"}