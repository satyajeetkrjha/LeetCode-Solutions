{"id":611794140,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1641172565,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/611794140/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    set <int> s;\n    void dfs (TreeNode* root){\n        if(!root)\n            return ;\n        dfs(root->left);\n        s.insert(root->val);\n        if(s.size() ==3){\n            return ;\n        }\n        dfs(root->right);\n    }\n    int findSecondMinimumValue(TreeNode* root) {\n        dfs(root);\n        if(s.size() ==1)\n            return -1 ;\n        int c =0;\n        int ans ;\n        for(auto it :s){\n            c++;\n            if( c== 2){\n                ans = it ;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111101111111111111111","title_slug":"second-minimum-node-in-a-binary-tree"}