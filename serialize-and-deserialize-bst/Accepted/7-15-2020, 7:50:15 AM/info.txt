{"id":366928922,"lang":"cpp","time":"2 years, 1 month","timestamp":1594813815,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/366928922/","is_pending":"Not Pending","title":"Serialize and Deserialize BST","memory":"26.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Codec {\npublic:\n\n    // Encodes a tree to a single string.\n    string serialize(TreeNode* root) {\n       string res;\n       queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n           TreeNode* cur =q.front();\n            q.pop();\n            if(cur ==NULL)\n                return res;\n            res+=to_string(cur->val)+\",\";\n            if(cur->left){\n                q.push(cur->left);\n            }\n            if(cur->right){\n                q.push(cur->right);\n            }           \n        }\n        cout<<\"res is \"<<res<<endl;\n        return res;\n    }\n    TreeNode* construct(TreeNode* root,int val){\n        if(root == NULL){\n            root= new TreeNode(val);\n            return root;\n        }\n        if(val >root->val){\n            root->right =construct(root->right,val);\n        }\n        else if(val <root->val){\n            root->left =construct(root->left,val);\n        }\n        return root;\n    }\n\n    // Decodes your encoded data to tree.\n    TreeNode* deserialize(string data) {\n        cout<<\"data\"<<data<<endl;\n        TreeNode* root =NULL;\n        int temp=0;\n        for(int i =0;i<data.size();i++){\n            if(data[i]!=','){\n                temp= temp*10+(int)(data[i]-'0');\n            }\n            if(data [i]==','){\n                root=construct(root,temp);\n                temp =0;\n            }\n        }\n        return root;   \n        \n    }\n};\n\n// Your Codec object will be instantiated and called as such:\n// Codec codec;\n// codec.deserialize(codec.serialize(root));","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"serialize-and-deserialize-bst"}