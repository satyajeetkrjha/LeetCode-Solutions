{"id":517179703,"lang":"cpp","time":"1 year, 1 month","timestamp":1625390308,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/517179703/","is_pending":"Not Pending","title":"Shortest Bridge","memory":"N/A","code":"class Solution {\npublic:\n    void flood_fill(vector<vector<int>>& grid ,int i ,int j,  vector <pair <int,int>> &r){\n        if( i <0 || j < 0 || i >= grid.size() || j>=grid[i].size() || grid[i][j] ==0)\n            return ;\n        grid[i][j] =0;\n        r.push_back(make_pair(i,j));\n        flood_fill(grid,i+1,j,r);\n        flood_fill(grid,i-1,j,r);\n        flood_fill(grid,i,j+1,r);\n        flood_fill(grid,i,j-1,r);\n        return ;\n        \n        \n    }\n    int shortestBridge(vector<vector<int>>& grid) {\n        vector <pair <int,int>> first ;\n        vector <pair <int,int>> second ;\n        int n = grid.size();\n        int m = grid[0].size();\n       \n        \n        int count =1;\n        for(int i =0;i<n;i++){\n            for(int j =0;j<m;j++){\n                if(grid[i][j] == 1){\n                    if( count ==1){\n                        flood_fill(grid,i,j,first);\n                    }\n                    if( count ==2){\n                        flood_fill(grid,i,j,second);\n                    }\n                    count++;\n                }\n            }\n        }\n        int ans = INT_MAX;\n        for(int i =0;i<first.size();i++){\n            for(int j =0;j<second.size();j++){\n                auto[a,b] = first[i];\n                auto[c,d] = second[j];\n                cout<<\"values are \"<< a<< \" \"<<b<< \" \"<<c <<\" \"<<d<<endl;\n                ans = min (ans ,abs(a-c)+abs(b-d)-1);\n            }\n        }\n        return ans ;\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000","title_slug":"shortest-bridge"}