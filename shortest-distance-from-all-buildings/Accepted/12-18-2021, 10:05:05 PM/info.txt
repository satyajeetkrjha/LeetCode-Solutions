{"id":603813943,"lang":"cpp","time":"8 months, 1 week","timestamp":1639883105,"status_display":"Accepted","runtime":"329 ms","url":"/submissions/detail/603813943/","is_pending":"Not Pending","title":"Shortest Distance from All Buildings","memory":"44.5 MB","code":"class Solution {\npublic:\n    \n    int dx[4] ={1,-1,0,0};\n    int dy[4] ={0,0,1,-1};\n    \n    int shortestDistance(vector<vector<int>>& grid) {\n       \n        int rows = grid.size();\n        int columns = grid[0].size();\n        \n      \n        \n        vector <vector <int>> total(rows, vector <int> (columns,0));\n        \n        int emptylandvalue =0;\n        \n        \n        int mindist = INT_MAX;\n        for(int i =0 ;i<rows;i++){\n            for(int j = 0 ;j<columns ;j++){\n                if(grid[i][j] == 1){\n                      queue <pair <int,int>> q;\n                      q.push({i,j});\n                      int steps =0;\n                      mindist =INT_MAX;\n                    \n                    while(!q.empty()){\n                         steps ++;\n                        int sz = q.size();\n                        for(int i =0 ;i<sz;i++){\n                            auto curr = q.front();\n                            q.pop();\n                            for(int dir =0 ;dir <4;dir++){\n                                int nr = curr.first + dx[dir];\n                                int nc = curr.second + dy[dir];\n                                if(nr>=0 && nc >=0 && nr < rows && nc <columns\n                                   &&\n                                   grid[nr][nc] == emptylandvalue\n                                  ){\n                                    grid[nr][nc] --;\n                                    total[nr][nc]+= steps;\n                                    q.push({nr,nc});\n                                    mindist = min(mindist,total[nr][nc]);\n                                }\n                            }\n                        }\n                    }\n                    emptylandvalue --;\n                    \n                }\n            }\n        } \n        \n        return mindist == INT_MAX ? -1 :mindist;\n        \n        \n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-distance-from-all-buildings"}