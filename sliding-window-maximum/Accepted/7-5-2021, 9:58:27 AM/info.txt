{"id":517742151,"lang":"cpp","time":"1 year, 1 month","timestamp":1625493507,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/517742151/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"145.7 MB","code":"class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n       priority_queue <pair <int ,int> > pq;\n       vector <int> ans;\n        for(int i=0;i< nums.size();i++){\n            \n            // if root element is out of the sliding window then just pop it\n            while(!pq.empty() && pq.top().second <=(i-k)){\n                  pq.pop();\n            }\n               pq.push(make_pair(nums[i],i));\n              // rem that you will fill       \n             if(i>=k-1){\n                 ans.push_back(pq.top().first);\n             }\n                      \n                    \n     }\n    return ans ;\n};\n        };","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum"}