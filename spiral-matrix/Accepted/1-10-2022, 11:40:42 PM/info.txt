{"id":617399153,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1641876042,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/617399153/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.7 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n       \n        int rows = matrix.size();\n        int cols = matrix[0].size();\n        \n        int left = 0 ;\n        int right = cols -1;\n        \n        int top = 0 ;\n        int bottom = rows -1 ;\n        \n        int dir = 0 ;\n        \n        \n        vector <int> res ;\n        while(left<= right && top <=bottom){\n            \n            if(dir == 0){\n                for(int i = left ;i<=right ;i++){\n                    res.push_back(matrix[top][i]);\n                }\n                top++;\n            }\n            else if(dir == 1){\n                for(int i = top ;i<=bottom ;i++){\n                    res.push_back(matrix[i][right]);\n                }\n                right --;\n            }\n            else if(dir == 2){\n                for(int i = right ;i>= left ;i--){\n                    res.push_back(matrix[bottom][i]);\n                }\n                  bottom--;\n            }\n            else if(dir == 3){\n                for(int i = bottom ;i>=top ;i--){\n                    res.push_back(matrix[i][left]);\n                }\n                left++;\n            }\n            dir=(dir+1)%4;\n            \n        }\n        return res ;\n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix"}