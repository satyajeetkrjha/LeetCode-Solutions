{"id":549672781,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1630813885,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/549672781/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"7 MB","code":"class Solution {\npublic:\n    void printSolution(vector <int> ans){\n        for(int i =0 ;i<ans.size();i++){\n          cout<<ans[i]<< \" \";   \n        }\n        cout <<endl;\n       \n    }\n    \n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        int r = matrix.size();\n        int c = matrix[0].size();\n        \n        int top = 0 ;int bottom = r-1;\n        int left = 0 ;int right = c-1;\n        \n        int dir = 0 ;\n        \n        vector <int> ans ;\n        \n        \n        cout<<\"top is \"<<top<<endl;\n        cout<<\"left is \"<<left <<endl;\n        cout << \"bottom is \"<<bottom <<endl;\n        cout <<\"right is \"<<right<<endl;\n        \n        \n        while( top <= bottom && left <= right){\n            \n            if(dir == 0){\n                for(int i = left ;i<=right;i++){\n                    ans.push_back(matrix[top][i]);\n                }\n                 printSolution(ans);\n                top++;\n            }\n            else if( dir  == 1){\n                cout<<\"top and bottom is \"<<top << \" \"<<bottom <<endl;\n                for(int i = top ;i <= bottom ;i++){\n                    cout <<\"right and i are\"<<right <<\" \"<<i <<endl;\n                    ans.push_back(matrix[i][right]);\n                }\n                printSolution(ans);\n                right --;\n            }\n            else if ( dir == 2){\n                for(int i = right ;i>= left ;i--){\n                    ans.push_back(matrix[bottom][i]);\n                    cout <<\"bottom and i are \"<<bottom <<\" \"<<i <<endl;\n                }\n                 bottom --;\n            }\n            else if ( dir == 3){\n                cout<<\"bottom and top are  \"<<bottom <<\" \"<<top <<endl;\n                for(int i = bottom ;i>= top ;i--){\n                    ans.push_back(matrix[i][left]);\n                    cout <<\"left and i are \"<< left << \" \"<< i << endl;\n    \n                }\n                 left++;\n            }\n            dir = ( dir+1)%4;\n            \n        }\n        return ans ;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix"}