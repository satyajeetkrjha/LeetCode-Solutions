{"id":650877749,"lang":"cpp","time":"5 months, 4 weeks","timestamp":1646094891,"status_display":"Accepted","runtime":"342 ms","url":"/submissions/detail/650877749/","is_pending":"Not Pending","title":"Step-By-Step Directions From a Binary Tree Node to Another","memory":"115.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* lcafinder (TreeNode* root ,int startvalue ,int destvalue){\n        if(root == NULL){\n            return NULL;\n        }\n        if(root->val == startvalue || root->val == destvalue){\n            return root;\n        }\n        \n        auto left = lcafinder(root->left,startvalue,destvalue);\n        auto right = lcafinder(root->right,startvalue,destvalue);\n        \n        if(left!=NULL && right!=NULL){\n            return root ;\n        }\n        \n      return !left ? right: !right ? left:NULL; \n        \n    }\n    \n    bool search(TreeNode* root ,int startvalue ,string &s){\n        \n        if(root ==NULL)\n            return false;\n        \n        if(root->val == startvalue){\n            return true;\n        }\n        \n        auto leftsearch = search(root->left,startvalue,s+='L');\n        if(leftsearch){\n            return true;\n        }\n        s.pop_back();\n        \n        \n        auto rightsearch = search(root->right,startvalue,s+='R');\n        if(rightsearch){\n            return true;\n        }\n        s.pop_back();\n        return false;\n        \n    }\n    \n    \n    string getDirections(TreeNode* root, int startValue, int destValue) {\n        \n        TreeNode*  lca = lcafinder(root,startValue,destValue);\n        string s1 ,s2 ;\n        search(lca,startValue,s1);\n        search(lca,destValue,s2);\n        for(auto &it:s1){\n            it='U';\n        }\n        \n        return s1+s2;\n        \n        \n        \n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"step-by-step-directions-from-a-binary-tree-node-to-another"}