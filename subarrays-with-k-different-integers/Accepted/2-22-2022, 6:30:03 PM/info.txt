{"id":647053273,"lang":"cpp","time":"6Â months","timestamp":1645572603,"status_display":"Accepted","runtime":"501 ms","url":"/submissions/detail/647053273/","is_pending":"Not Pending","title":"Subarrays with K Different Integers","memory":"56.1 MB","code":"class Solution {\npublic:\n    \n    \n    int atmost(vector <int> &nums ,int k){\n        int left =0 ;\n        int right =0 ;\n        int count =0 ;\n        map <int ,int> m;\n        int n = nums.size();\n        \n        while(right <n){\n            if(m.find(nums[right]) == m.end()){\n                m[nums[right]] =1;\n            }\n            else{\n                m[nums[right]]++;\n            }\n    \n          while( m.size() > k){\n             m[nums[left]] --;\n             if(m[nums[left]] ==0){\n                 m.erase(nums[left]);\n                }\n              left++;\n            }  \n            count += right -left+1;\n            right++;\n        \n        }\n        return count ;\n    }\n    \n    int subarraysWithKDistinct(vector<int>& nums, int k) {\n        return atmost(nums,k) - atmost(nums,k-1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"subarrays-with-k-different-integers"}