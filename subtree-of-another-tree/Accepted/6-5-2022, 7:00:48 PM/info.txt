{"id":715293408,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1654470048,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/715293408/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"29 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    \n    bool isIdentical(TreeNode* a ,TreeNode* b){\n        if(a == NULL && b==NULL)\n            return true;\n        \n        \n        if(a ==NULL || b == NULL)\n            return false ;\n        \n        \n        return (a->val == b->val) && isIdentical(a->left,b->left) && isIdentical(a->right ,b->right);\n        \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        \n        if(root == NULL || subRoot ==NULL)\n            return false ;\n        \n        if(isIdentical(root,subRoot)){\n            return true;\n        }\n        \n        \n        return isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}