{"id":778531015,"lang":"cpp","time":"5 days, 11 hours","timestamp":1661002967,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/778531015/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool isIdentical(TreeNode* p,TreeNode* q){\n        if(!p && !q)\n            return true;\n        if(!p or !q)\n            return false;\n        if(p->val != q->val)\n            return false ;\n        return isIdentical(p->left,q->left) && isIdentical(p->right,q->right);\n    }\n    \n    \n    \n    \n    \n    bool isSubtree(TreeNode* root, TreeNode* subRoot) {\n        if(!root || !subRoot)\n            return true ;\n        if(isIdentical(root,subRoot))\n            return false ;\n        return isSubtree(root->left ,subRoot) || isSubtree(root->right,subRoot);\n    }\n};","compare_result":"10000100000110000000000000000000011111111111111111111111111011011111111111111101111111111110111111111111011111110000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"subtree-of-another-tree"}