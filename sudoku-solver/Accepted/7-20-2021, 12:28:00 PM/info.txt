{"id":525571984,"lang":"cpp","time":"1 year, 1 month","timestamp":1626798480,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/525571984/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"6.5 MB","code":"// Bad practice, just doing this for competitive programming!\n#include <bits/stdc++.h>\nusing namespace std;\n\nclass Solution {\n public:\n  bool isValid(vector<vector<char>>& board, int r, int c, char value) {\n    for (int i = 0; i < 9; i++) {\n      if (board[i][c] == value) {\n        return false;\n      }\n    }\n\n    for (int i = 0; i < 9; i++) {\n      if (board[r][i] == value) {\n        return false;\n      }\n    }\n\n    int subi = r / 3 * 3;\n    int subj = c / 3 * 3;\n\n    for (int i = 0; i < 3; i++) {\n      for (int j = 0; j < 3; j++) {\n        if (board[i + subi][j + subj] == value) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  bool solveSudohelper(vector<vector<char>>& board, int i, int j) {\n    // you are at index (3,3) so next time u move to (3,4) but if you are at\n    // (3,8) ,u do (4,0)\n    if (i == board.size()) {\n      return true;\n    }\n    int ni = 0;\n    int nj = 0;\n    if (j == board.size()) {\n      nj = 0;\n      ni = i + 1;\n    } else {\n      nj = j + 1;\n      ni = i;\n    }\n\n    if (board[i][j] != '.') {\n      return solveSudohelper(board, ni, nj);\n    } else {\n      // all possible values are 1 to 9\n      for (char po = '1'; po <= '9'; po++) {\n        // cout<<\"po is \"<<po<<endl;\n        if (isValid(board, i, j, po) == true) {\n          board[i][j] = po;\n          if(solveSudohelper(board, ni, nj)) return true;\n          board[i][j] = '.';\n        }\n      }\n    }\n    return false;\n  }\n\n  void solveSudoku(vector<vector<char>>& board) {\n    solveSudohelper(board, 0, 0);\n  }\n};","compare_result":"111111","title_slug":"sudoku-solver"}