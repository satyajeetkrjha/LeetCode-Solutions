{"id":357145676,"lang":"cpp","time":"2 years, 2 months","timestamp":1592866480,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/357145676/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sumOfLeftLeaves(TreeNode* root) {\n        int sum =0;\n        if(root==NULL)\n            return sum;\n        queue <TreeNode* >q ;\n        q.push(root);\n        \n        while(!q.empty()){\n            TreeNode* cur = q.front();\n            q.pop();\n            if(cur->left){\n                sum+=cur->left->val;\n                q.push(cur->left);\n            }\n            if(cur->right){\n                q.push(cur->right);\n            }\n        }\n        return sum;\n    }\n};","compare_result":"111111001010100000100000000000000011111010110000110000101100000000000000010110000000000000110000101100","title_slug":"sum-of-left-leaves"}