{"id":632617196,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1643764900,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/632617196/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"N/A","code":"typedef long long int ll ;\nclass Solution {\npublic:\n    int sumSubarrayMins(vector<int>& arr) {\n     \n        stack <pair <int ,int> > previous ,next ;\n        int n = arr.size();\n        vector <int> left(n);\n        vector<int> right(n);\n        \n        for(int i =0 ;i<n ;i++){\n            left[i] = i+1;\n            right[i] = n-i;\n        }\n        \n        \n        for(int i =0 ;i<n;i++){\n            \n            while(!previous.empty() && previous.top().first >arr[i]){\n                previous.pop();\n            }\n            left[i] = previous.empty() ? i+1:i- previous.top().second;\n            previous.push({arr[i],i});\n            \n            \n            while(!next.empty() && next.top().first > arr[i]){\n                auto x = next.top();\n                next.pop();\n                right[x.second] = i - x.second ;\n            }\n            \n            next.push({arr[i],i});\n            \n        }\n        \n        ll ans = 0 ;\n        const int mod = 1e9+7;\n        for(int i =0 ;i<n ;i++){\n           ans = (ans + arr[i]*left[i]*right[i])%mod; \n        }\n        return ans ;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"sum-of-subarray-minimums"}