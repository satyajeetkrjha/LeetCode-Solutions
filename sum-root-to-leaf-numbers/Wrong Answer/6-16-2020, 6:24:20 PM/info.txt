{"id":354621663,"lang":"cpp","time":"2 years, 2 months","timestamp":1592346260,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/354621663/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int treeSum(TreeNode* root,int val){\n        if(root ==NULL)\n            return 0;\n        val = val*10+root->val;\n        if(root->left ==NULL || root->right==NULL){\n            return val;\n        }\n        return treeSum(root->left,val) + treeSum(root->right,val);\n    }\n    int sumNumbers(TreeNode* root) {\n        int val=0;\n       int ans = treeSum(root,val);\n        return ans;\n    }\n};","compare_result":"11111010100000010000100000000110000100000000001001000000000000000001000001000000000000000000000000000000000000","title_slug":"sum-root-to-leaf-numbers"}