{"id":728968665,"lang":"cpp","time":"2Â months","timestamp":1655955125,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/728968665/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"N/A","code":"class Solution {\npublic:\n    \n    int dx[4] ={1,-1,0,0};\n    int dy[4] ={0,0,-1,1};\n    vector<vector<int>> visited;\n    void dfs(vector<vector<char>>& board ,int r ,int c){\n        if(r<=0 || r>=board.size()-1 || c<=0 || c>=board[0].size()-1 || visited[r][c] == 1){\n            return;\n        }\n        visited[r][c] =1 ;\n        \n        if(board[r][c] == 'O')\n            board[r][c] = 'X';\n        \n        for(int i =0 ;i<4 ;i++){\n            int nr = r+dx[i];\n            int nc = c+dy[i];\n            dfs(board,nr,nc);\n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    void solve(vector<vector<char>>& board) {\n        int n = board.size();\n        int m = board[0].size();\n        visited.resize(n,vector<int>(m,0));\n        \n        for(int i =0 ;i<n;i++){\n            for(int j =0 ;j<m;j++){\n                if(board[i][j] == 'X'){\n                    dfs(board,i,j);\n                }\n            }\n        }\n        \n        \n    }\n};","compare_result":"1111101111101101110100100000000010110101000001000000100001","title_slug":"surrounded-regions"}