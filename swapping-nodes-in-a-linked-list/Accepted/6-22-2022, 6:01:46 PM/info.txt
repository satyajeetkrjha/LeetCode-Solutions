{"id":728814273,"lang":"cpp","time":"2Â months","timestamp":1655935306,"status_display":"Accepted","runtime":"1242 ms","url":"/submissions/detail/728814273/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"180 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapNodes(ListNode* head, int k) {\n        ListNode* ptr1 = head ;\n        ListNode* ptr2 = head ;\n        ListNode* kth;\n        for(int i= 1;i<k;i++){\n            ptr1 = ptr1->next;\n        }\n        \n        // now ptr1 is pointing to the kth node exactly\n        kth = ptr1 ;\n        // now to make ptr2 node k nodes behind ptr1 ,we move ptr1 by 1 step \n        ptr1 = ptr1->next ;\n        \n        while(ptr1!=NULL){\n           ptr1 = ptr1->next ;\n            ptr2 =ptr2->next;\n        }\n        \n        swap(ptr2->val,kth->val);\n        \n        return head ;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list"}