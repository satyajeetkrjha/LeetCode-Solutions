{"id":756781730,"lang":"cpp","time":"1Â month","timestamp":1658797491,"status_display":"Accepted","runtime":"234 ms","url":"/submissions/detail/756781730/","is_pending":"Not Pending","title":"Swim in Rising Water","memory":"15.2 MB","code":"class Solution {\npublic:\n    int swimInWater(vector<vector<int>>& grid) {\n        int n = grid.size();\n        priority_queue<vector<int> ,vector <vector <int> > ,greater <vector <int> > > pq;\n        int time =0;\n        pq.push({grid[0][0],0,0});\n        \n        int visited[n+1][n+1];\n        memset(visited ,false,sizeof(visited));\n        \n        int dx[4] ={1,-1,0,0};\n        int dy[4] ={0,0,-1,1};\n        \n        while(!pq.empty()){\n            auto temp = pq.top();\n            pq.pop();\n            int t = temp[0];\n            int r = temp[1];\n            int c = temp[2];\n            time = max(time ,t);\n            \n            if(r == n-1 && c == n-1){\n                return time ;\n            }\n            \n            if(!visited[r][c]){\n                visited[r][c] = 1;\n                for(int i =0 ;i< 4;i++){\n                    int nr = r + dx[i];\n                    int nc = c+ dy[i];\n                    if(nr>=0 && nc>=0 && nr <n && nc <n){\n                        pq.push({grid[nr][nc],nr,nc});\n                    }\n                }\n            }\n            \n        }\n        return time ;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"swim-in-rising-water"}