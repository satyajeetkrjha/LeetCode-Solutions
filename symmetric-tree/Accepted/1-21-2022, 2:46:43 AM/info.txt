{"id":624502782,"lang":"cpp","time":"7Â months","timestamp":1642751203,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/624502782/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool dfs(TreeNode* a ,TreeNode* b){\n        if(!a && !b){\n            return true;\n        }\n        if(!a || !b)\n            return false ;\n        \n        return a->val == b->val && dfs(a->left,b->right) && dfs(a->right,b->left);\n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        return dfs(root ,root);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}