{"id":359556368,"lang":"cpp","time":"2 years, 1 month","timestamp":1593380163,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/359556368/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool symmetric( TreeNode* nodeA, TreeNode* nodeB){\n        if(nodeA == NULL && nodeB ==NULL){\n            return true;\n        }\n        if(nodeA == NULL || nodeB ==NULL){\n            return false;\n        }\n        if(nodeA->val == nodeB ->val){\n            if(symmetric(nodeA->left,nodeB->right) && symmetric(nodeA->right,nodeB->left)){\n                return true;\n                \n            }\n        }\n        return false;\n    }\n\n    bool isSymmetric(TreeNode* root) {\n        bool ans =true;\n        ans = symmetric(root,root);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}