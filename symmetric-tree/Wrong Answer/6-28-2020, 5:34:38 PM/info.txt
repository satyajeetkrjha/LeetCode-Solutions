{"id":359555906,"lang":"cpp","time":"2 years, 1 month","timestamp":1593380078,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/359555906/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool symmetric( TreeNode* nodeA, TreeNode* nodeB){\n        if(nodeA == NULL && nodeB ==NULL){\n            return true;\n        }\n        if(nodeA == NULL || nodeB ==NULL){\n            return false;\n        }\n        if(nodeA->val ==nodeB ->val){\n            if(symmetric(nodeA->left,nodeB->left) && symmetric(nodeB->right,nodeB->right)){\n                return true;\n                \n            }\n        }\n        return false;\n    }\n\n    bool isSymmetric(TreeNode* root) {\n        bool ans =true;\n        ans = symmetric(root,root);\n        return ans;\n    }\n};","compare_result":"100011000101010000010010101010011100110000100001000000000010010000100111001001110000000010110000100001101001001000010010100001110110001101000010111100011001010011100111011000001100001100110010000","title_slug":"symmetric-tree"}