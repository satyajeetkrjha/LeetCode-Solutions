{"id":759352834,"lang":"cpp","time":"4Â weeks","timestamp":1659041694,"status_display":"Accepted","runtime":"2279 ms","url":"/submissions/detail/759352834/","is_pending":"Not Pending","title":"Target Sum","memory":"20 MB","code":"class Solution {\npublic:\n    int target;\n    int n ;\n    vector<int> nums ;\n    int dp[25][100005];\n    int backtrack(int index ,int total){\n        if (index == n){\n            return total == target ? 1 : 0 ;\n        }\n      \n        return \n            backtrack(index+1,total+nums[index])+backtrack(index+1,total-nums[index]);\n\n            \n    }\n    int findTargetSumWays(vector<int>& nums1, int target1) {\n        target = target1 ;\n        nums = nums1 ;\n        n = nums.size();\n        cout <<\"n is \"<< n << \" \"<< target << endl;\n        for(auto &it:nums){\n            cout << it << \" \";\n        }\n        cout << endl;\n        int total =0 ;\n        for(int i =0 ;i<nums.size();i++){\n            total +=  nums[i];\n        }\n       memset(dp,sizeof(dp),0);\n        return backtrack(0,0);\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum"}