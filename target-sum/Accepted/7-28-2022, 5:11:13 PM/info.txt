{"id":759361594,"lang":"cpp","time":"4Â weeks","timestamp":1659042673,"status_display":"Accepted","runtime":"373 ms","url":"/submissions/detail/759361594/","is_pending":"Not Pending","title":"Target Sum","memory":"62.1 MB","code":"class Solution {\npublic:\n    map <pair<int ,int> ,int> m ;\n    vector <int> nums ;\n    int n;\n    int target ;\n    \n    int backtrack(int index ,int total){\n        if(index == n){\n            return total == target ? 1 :0;\n        }\n        auto findcomb= m.find({index,total});\n        if(findcomb!=m.end()){\n            return findcomb->second ;\n        }\n        return m[{index,total}] = \n            backtrack(index+1,total+nums[index])\n              +backtrack(index+1 ,total-nums[index]);\n    }\n    \n    \n    \n    int findTargetSumWays(vector<int>& nums1, int target1) {\n        nums = nums1;\n        target = target1 ;\n        n = nums.size();\n        return backtrack(0 ,0);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum"}