{"id":779738083,"lang":"cpp","time":"4 days, 4 hours","timestamp":1661114481,"status_display":"Accepted","runtime":"588 ms","url":"/submissions/detail/779738083/","is_pending":"Not Pending","title":"Target Sum","memory":"62.4 MB","code":"class Solution {\npublic:\n    map <pair <int,int>,int> m ;\n    int backtrack(vector<int> &nums,int index ,int sum ,int target){\n        if(index == nums.size()){\n            return target == sum ? 1:0;\n        }\n        auto it= m.find({index,sum});\n        if(it!=m.end()){\n            return it->second;\n        }\n        return m[{index,sum}] =\n            backtrack(nums,index+1,nums[index]+sum,target)\n            + backtrack(nums,index+1,sum-nums[index],target);\n    }\n    \n    int findTargetSumWays(vector<int>& nums, int target) {\n        return backtrack(nums,0 ,0 ,target);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum"}