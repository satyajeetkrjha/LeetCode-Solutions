{"id":604925144,"lang":"cpp","time":"8 months, 1 week","timestamp":1640080488,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/604925144/","is_pending":"Not Pending","title":"The Maze II","memory":"N/A","code":"class Solution {\npublic:\n    int dx[4] ={1,-1,0,0};\n    int dy[4] ={0,0,1,-1};\n    \n    int shortestDistance(vector<vector<int>>& maze, vector<int>& start, vector<int>& destination) {\n        int  n = maze.size();\n        int m = maze[0].size();\n        if(n == 0 || m ==0 )\n            return 0;\n        \n        int dist[n+1][m+1] ;\n        \n        for(int i =0 ;i<n;i++){\n            for(int j =0 ;j<m;j++){\n                dist[i][j] = -1;\n            }\n        }\n        \n        queue<pair<int ,int> > q;\n        q.push({start[0],start[1]});\n        \n        dist[start[0]][start[1]] = 0;\n        \n        while(!q.empty()){\n            auto curr = q.front();\n            q.pop();\n            \n            for(int i =0 ;i<4 ;i++){\n                int currdist = dist[curr.first][curr.second];\n                int r = curr.first ;\n                int c = curr.second ;\n                while(r+dx[i] >= 0 && c+dy[i]>=0 && r+dx[i]< n && c+dy[i]< m && maze[r+dx[i]][c+dy[i]]!=1){\n                    r += dx[i];\n                    c += dy[i];\n                    currdist ++;\n                }\n               // cout <<\"r and c are \"<< r << \" \"<< c << endl;\n               / cout <<\"currdist is \"<<currdist<< endl;\n            \n                if(dist[r][c] == -1 || (currdist <dist[r][c])){\n                    dist[r][c] = currdist ;\n                    q.push({r,c});\n                }\n            }\n        }\n        return dist[destination[0]][destination[1]];\n        \n        \n    }\n};","compare_result":null,"title_slug":"the-maze-ii"}