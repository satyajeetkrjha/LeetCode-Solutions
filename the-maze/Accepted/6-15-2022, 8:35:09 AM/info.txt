{"id":722844413,"lang":"cpp","time":"2 months, 1 week","timestamp":1655296509,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/722844413/","is_pending":"Not Pending","title":"The Maze","memory":"18.7 MB","code":"class Solution {\npublic:\n    int dx[4] ={1,-1,0,0};\n    int dy[4] ={0,0,-1,1};\n    bool hasPath(vector<vector<int>>& maze, vector<int>& start, vector<int>& destination) {\n        \n        queue <pair <int ,int> > q;\n        q.push({start[0],start[1]});\n        \n        int n = maze.size();\n        int m = maze[0].size();\n        \n        int visited[n+1][m+1];\n        memset(visited,0,sizeof(visited));\n        visited[start[0]][start[1]] =1;\n        while(!q.empty()){\n            auto cur = q.front();\n            q.pop();\n            if(cur.first == destination[0] && cur.second == destination[1])\n                return true ;\n            \n            for(int i =0 ;i< 4;i++){\n                int nr =  cur.first + dx[i];\n                int nc =  cur.second + dy[i];\n                while(nr>=0 && nc>=0 && nr < n && nc <m && maze[nr][nc] == 0){\n                    nr+= dx[i];\n                    nc +=dy[i];\n                }\n                if(!visited[nr- dx[i]][nc-dy[i]]){\n                    visited[nr-dx[i]][nc-dy[i]] =1 ;\n                    q.push({nr-dx[i],nc- dy[i]});\n                }   \n            }\n       }\n     \n        return false;\n      }\n    \n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-maze"}