{"id":722810047,"lang":"cpp","time":"2 months, 1 week","timestamp":1655292051,"status_display":"Accepted","runtime":"102 ms","url":"/submissions/detail/722810047/","is_pending":"Not Pending","title":"Tree Diameter","memory":"19.7 MB","code":"class Solution {\npublic:\n     vector <int> adj[10005];\n    pair<int ,int> bfs(int node ,vector <int> &dist,int n){\n        \n        dist[node] = 0 ;\n       \n        queue <int> q;\n        q.push(node);\n        while(!q.empty()){\n            auto cur = q.front();\n            q.pop();\n            for(int i =0 ;i<adj[cur].size();i++){\n              int v = adj[cur][i];\n              if(dist[v] == -1){\n                dist[v] = dist[cur]+1;\n                q.push(v);\n            }\n                \n          }\n        }\n        \n        int ans = INT_MIN;\n        int farthestnode=0;\n        for(int i =0 ;i<=n;i++){\n            if(dist[i]> ans){\n                ans = dist[i];\n                farthestnode = i ;\n            }\n        }\n        return {ans,farthestnode};\n\n    }\n    \n    \n    int treeDiameter(vector<vector<int>>& edges) {\n        int startnode =0 ;\n        int n = edges.size();\n        \n       \n        \n        for(int i =0 ;i<n;i++){\n            int u = edges[i][0];int v = edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n            startnode = u;\n        }\n        \n        vector <int> dist(n+2,-1);\n        \n        auto firstbfsval = bfs(startnode,dist,n); \n        \n     \n        for(int i =0 ;i<=n;i++) dist[i] = -1;\n        \n        auto secondbfs =bfs(firstbfsval.second,dist,n);\n\n        return secondbfs.first ;\n        \n        \n        \n        \n        \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"tree-diameter"}