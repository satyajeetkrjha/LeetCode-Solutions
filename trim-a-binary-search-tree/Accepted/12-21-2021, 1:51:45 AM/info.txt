{"id":604860473,"lang":"cpp","time":"8 months, 1 week","timestamp":1640069505,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/604860473/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"23.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        if(!root){\n            return root ;\n        }\n        if(root-> val >= low && root->val <= high){\n            root->left = trimBST(root->left,low,high);\n            root->right = trimBST(root->right,low,high);\n            return root ;\n        }\n        if(root->val < low){\n          return trimBST(root->right,low,high);   \n        }\n        return trimBST(root->left,low,high);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree"}