{"id":556573583,"lang":"cpp","time":"11 months, 1 week","timestamp":1631901757,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/556573583/","is_pending":"Not Pending","title":"Unique Paths II","memory":"7.6 MB","code":"class Solution {\npublic:\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        int n  = obstacleGrid.size();\n        int m =  obstacleGrid[0].size();\n        int dp[n+1][m+1];\n        \n        if(obstacleGrid[0][0] ==1 ) return 0;\n        for(int i =0 ;i<n;i++){\n            for(int j =0 ;j<m;j++){\n                dp[i][j] =0;\n            }\n        }\n        dp[0][0] =1;\n        for(int i =1 ;i<n;i++){\n            if(obstacleGrid[i][0] == 1){\n                dp[i][0] =0;\n            }\n            else {\n                dp[i][0] = dp[i-1][0];\n            }\n        }\n        for(int i =1 ;i<m;i++){\n            if(obstacleGrid[0][i] == 1){\n                dp[0][i] =0;\n            }\n            else{\n                dp[0][i] = dp[0][i-1];\n            }\n        }\n        \n        for(int i =1 ;i<n;i++){\n            for(int j =1 ;j<m;j++){\n                if(obstacleGrid[i][j] ==1){\n                    dp[i][j] =0;\n                }\n                else{\n                    dp[i][j] = dp[i-1][j]+dp[i][j-1];\n                }\n            }\n        }\n        return dp[n-1][m-1];\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii"}