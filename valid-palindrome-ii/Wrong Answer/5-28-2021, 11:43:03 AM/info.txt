{"id":499482227,"lang":"cpp","time":"1 year, 2 months","timestamp":1622216583,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/499482227/","is_pending":"Not Pending","title":"Valid Palindrome II","memory":"N/A","code":"class Solution {\npublic:\n    bool isValid(string s,int l,int r){\n        while(l<r){\n            if(s[l]== s[r]){\n                l++;\n                r--;\n            }\n            else{\n                return false;\n            }\n        }\n        return true;\n    }\n    bool validPalindrome(string s) {\n    \n        int l =0;\n        int r =s.size();\n        while(l<r){\n            if(s[l] == s[r]){\n                l++;\n                r--;\n            }\n            else{\n                break;\n            }\n        }\n        // we reached first point of conflict so now check if we can form the remaining middle string as palindrom by removing first or last\n        return isValid(s,l+1,r) || isValid(s,l,r-1);\n    }\n};","compare_result":"1011111000110000110110000010110000010110000100110000000110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000011110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000111110000000000111","title_slug":"valid-palindrome-ii"}