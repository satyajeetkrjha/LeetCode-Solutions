{"id":358962368,"lang":"cpp","time":"2 years, 1 month","timestamp":1593265210,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/358962368/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if(root==NULL)\n            return true;\n        stack <TreeNode*> s;\n        vector <int> res;\n        // a simple in order traversal nd then check if a[i]<a[i+1]\n        TreeNode* cur =root;\n        while(!s.empty() || cur!=NULL){\n            while(cur!=NULL){\n                s.push(cur);\n                cur=cur->left;\n            }\n            cur =s.top();\n            s.pop();\n            res.push_back(cur->val);\n            cur =cur->right;\n        }\n        bool ans=true;\n        for(int i=0;i<res.size()-1;i++){\n            if(res[i]>=res[i+1]){\n                ans=false;\n                break;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}