{"id":716228987,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1654575550,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/716228987/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        \n        stack <TreeNode*> st ;\n        vector <int> v ;\n        \n        TreeNode* cur = root ;\n        while(cur!=NULL || !st.empty()){\n            \n            while(cur!=NULL){\n                st.push(cur);\n                cur = cur->left;\n            }\n            \n            cur = st.top();\n            st.pop();\n            v.push_back(cur->val);\n            cur = cur->right;\n        }\n        \n        for(int i =0 ;i<v.size()-1;i++){\n            if(v[i]>=v[i+1])\n                return false;\n        }\n        return true ;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}