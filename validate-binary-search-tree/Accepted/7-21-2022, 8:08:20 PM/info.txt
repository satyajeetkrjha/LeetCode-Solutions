{"id":753304549,"lang":"cpp","time":"1Â month","timestamp":1658448500,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/753304549/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        vector <int> vec;\n        stack <TreeNode*> st ;\n        TreeNode* cur = root ;\n        while(cur!=NULL || !st.empty()){\n            while(cur!=NULL){\n                st.push(cur);\n                cur = cur->left ;\n            }\n            cur = st.top();\n            st.pop();\n            vec.push_back(cur->val);\n            cur = cur->right;\n        }\n        for(int i=0 ;i<vec.size()-1;i++){\n            if(vec[i]>= vec[i+1])\n                return false ;\n        }\n        return true ;\n        \n        \n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}