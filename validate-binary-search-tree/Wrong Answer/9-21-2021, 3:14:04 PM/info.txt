{"id":558778717,"lang":"cpp","time":"11 months, 1 week","timestamp":1632251644,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/558778717/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool Validate(TreeNode* root ,int low ,int high){\n        if(root ==NULL) return true ;\n        if((low!=NULL && root->val <= low) || (high!=NULL && root->val >= high)){\n            return false;\n        }\n        return \n            Validate(root->left,low,root->val) && Validate(root->right,root->val,high);\n    }\n    bool isValidBST(TreeNode* root) {\n      return Validate(root ,NULL ,NULL);\n    }\n};","compare_result":"11111111001111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}