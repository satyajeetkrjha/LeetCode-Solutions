{"id":546406858,"lang":"cpp","time":"12Â months","timestamp":1630287098,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/546406858/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"9.4 MB","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        int orderMap[26]={0};\n        for(int i =0 ;i<order.size();i++){\n            char c = order[i];\n            orderMap[c-'a']=i;\n        }\n        \n       \n        for(int i =0 ;i<words.size()-1;i++){\n            for(int j =0 ;j<words[i].size();j++){\n              if(j >= words[i+1].size()){\n                  return false ;\n              }\n              string first = words[i];\n              string second = words[i+1];\n              if(first[j]!=second[j]){\n                  int currentWordChar = first[j]-'a';\n                  int nextWordChar = second[j]-'a';\n                  if(orderMap[currentWordChar]>orderMap[nextWordChar]){\n                      return false;\n                  }\n                  else\n                      break;\n                  \n              }  \n            }\n        }\n        \n        return true ;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary"}