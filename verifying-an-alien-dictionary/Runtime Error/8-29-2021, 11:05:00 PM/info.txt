{"id":546440772,"lang":"cpp","time":"12Â months","timestamp":1630292700,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/546440772/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"N/A","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        int orderMap[26]={0};\n        for(int i =0 ;i<order.size();i++){\n            int c= order[i]-'a';\n            cout<<\"c is \"<<c<<endl;\n            orderMap[c]=i;\n        }\n        \n        for(int i =0 ;i<26;i++){\n            cout<<orderMap[i]<<\" \";\n        }\n        cout<<endl;\n        \n        for(int i =0 ;i<words.size()-1;i++){\n            for(int j =0 ;j<words[i].size();j++){\n                if(j >= words[i+1].size()) {\n                    return false;\n                }\n                string firstword = words[i];\n                string secondword= words[i+1];\n                if(firstword[j]!=secondword[j]){\n                    int currentword = firstword[j]-'a';\n                    int nextword = secondword[j+1]-'a';\n                    if(orderMap[currentword]>orderMap[nextword]){\n                        return false;\n                    }   \n                }\n            }\n        }\n        return true ;\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"verifying-an-alien-dictionary"}