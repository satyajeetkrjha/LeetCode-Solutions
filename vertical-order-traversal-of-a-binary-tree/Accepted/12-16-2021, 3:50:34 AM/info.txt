{"id":602634219,"lang":"cpp","time":"8 months, 1 week","timestamp":1639644634,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/602634219/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"13.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n       \n        map <int ,map <int ,multiset <int> > > m;\n        queue <pair <TreeNode*, pair <int ,int> > > q;\n        q.push({root ,{0,0}});\n        while(!q.empty()){\n            pair <TreeNode* ,pair <int ,int> > cur = q.front();\n            q.pop();\n            TreeNode* temp = cur.first ;\n            pair <int ,int> pr = cur.second;\n            \n           int x = pr.first ;\n            int y = pr.second ;\n            m[x][y].insert(temp->val);\n            if(temp->left){\n                 q.push({temp->left,{x-1,y+1}});\n            }\n            if(temp->right){\n                q.push({temp->right,{x+1,y+1}});\n            }\n        }\n \n        vector <vector <int> > res ;\n        for(auto it :m){\n          vector <int> temp;\n            for(auto itr:it.second){\n                temp.insert(temp.end(),itr.second.begin(),itr.second.end());\n            }\n            res.push_back(temp);\n        }\n        return res ;\n        \n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree"}