{"id":602620958,"lang":"cpp","time":"8 months, 1 week","timestamp":1639642054,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/602620958/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        map<int ,map <int ,multiset < int> > >m ;\n        queue <pair <TreeNode* ,pair <int,int> >> q;\n        q.push({root ,{0,0}});\n        while(!q.empty()){\n            pair <TreeNode* ,pair <int,int>> cur = q.front();\n            TreeNode* temp = cur.first ;\n            int x = cur.second.first;\n            int y = cur.second.second ;\n            q.pop();\n            m[x][y].insert(temp->val);\n            if(temp->left){\n                q.push({temp->left,{x-1,y-1}});\n                \n            }\n            if(temp->right){\n                q.push({temp->right,{x+1,y+1}});\n            }\n            \n        }\n        \n        vector <vector<int>> res ;\n        for( auto it:m){\n            vector <int> temp;\n            for(auto val :it.second){\n                temp.insert(temp.end(),val.second.begin(),val.second.end());\n            }\n            res.push_back(temp);\n            \n        }\n        return res;\n    }\n};","compare_result":"11111111111001101000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree"}