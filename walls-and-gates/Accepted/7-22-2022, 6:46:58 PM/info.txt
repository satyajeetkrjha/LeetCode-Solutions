{"id":754081050,"lang":"cpp","time":"1Â month","timestamp":1658530018,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/754081050/","is_pending":"Not Pending","title":"Walls and Gates","memory":"14.5 MB","code":"class Solution {\npublic:\n    void wallsAndGates(vector<vector<int>>& rooms) {\n     \n        const int INF = 2147483647;\n        int n = rooms.size();\n        int m = rooms[0].size();\n        queue <pair <int ,int> > q;\n        for(int i =0 ;i<n;i++){\n            for(int j =0 ;j< m;j++){\n                if(rooms[i][j] ==0)\n                    q.push({i,j});\n            }\n        }\n        \n        int dx[4] ={1,-1,0,0,};\n        int dy[4] ={ 0,0,-1,1};\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i =0 ;i<sz;i++){\n                auto cur = q.front();\n                q.pop();\n                for(int i =0 ;i<4;i++){\n                    int nr = cur.first+dx[i];\n                    int nc = cur.second +dy[i];\n                    if(nr>=0 && nc>=0 && nr <n && nc <m && rooms[nr][nc] ==INF){\n                        rooms[nr][nc] =rooms[cur.first][cur.second]+1;\n                        q.push({nr,nc});\n                    }\n                }\n                \n            }\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"walls-and-gates"}