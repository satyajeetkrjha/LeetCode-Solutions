{"id":637768309,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1644394670,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/637768309/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        int n = s.size();\n        int m = p.size();\n        int dp[m+1][n+1];\n        \n        for(int i =0 ;i<m;i++){\n            for(int j =0 ;j<n;j++){\n                dp[i][j] =0;\n            }\n        }\n        \n        for(int i = m-1 ;i>=0 ;i--){\n            for(int j = n-1;j>=0 ;j--){\n                if( i == m-1 && j == n-1){\n                    dp[i][j] =1;\n                }\n                else if( i == m-1){\n                    dp[i][j] = 0;\n                }\n                else if(j == n-1){\n                    if(p[i] =='*'){\n                        dp[i][j] = dp[i+1][j];\n                    }\n                    else{\n                        dp[i][j] = 0;\n                    }\n                }\n                else{\n                    if(p[i] == '?'){\n                        dp[i][j] = dp[i+1][j+1];\n                    }\n                    else if(p[i] =='*'){\n                        dp[i][j] = dp[i+1][j] || dp[i][j+1];\n                    }\n                    else if(p[i] ==  p[j]){\n                        dp[i][j] = dp[i+1][j+1];\n                    }\n                    else{\n                        dp[i][j] = 0;\n                    }\n                    \n                }\n            }\n        }\n        return dp[0][0];\n        \n    }\n};","compare_result":"10010111111011100110100111001111111101111011010010011110111010010000010110111111110111010111001000000001100110111001100101011011111001000110101010011101111001101011111111101011100001111001001001111111110110011110011001110010110111010111101111101101011011001111100100101111011010010110000010101111100010011000110111111010111011100111001111000111100011001111110010101110111010011101010101101101011101001100101111100110100111111011111010110111100110011010011011000111011101110111110001001110110111100111101111111010110110011010110110010101111001001100101001101001110100010111110011010110100111010001100011111010101011100111010100101011011100011011110111111100110101001111111110100111001100011100101111100101011011100100111101101100110111100101011101011111101010011101100111011001010101011111110110110111011111011111111110000011111111010101011111000111111101000110111111111101011110101111111011111100011101110001001101111101110011010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"wildcard-matching"}