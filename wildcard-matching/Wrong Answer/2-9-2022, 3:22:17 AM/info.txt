{"id":637770510,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1644394937,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/637770510/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution {\npublic:\n    bool isMatch(string s, string p) {\n        int n = s.size();\n        int m = p.size();\n        int dp[m+1][n+1];\n        \n        for(int i =0 ;i<m;i++){\n            for(int j =0 ;j<n;j++){\n                dp[i][j] =0;\n            }\n        }\n        \n        for(int i = m-1 ;i>=0 ;i--){\n            for(int j = n-1;j>=0 ;j--){\n                if( i == m-1 && j == n-1){\n                    dp[i][j] =1;\n                }\n                else if( i == m-1){\n                    dp[i][j] = 0;\n                }\n                else if(j == n-1){\n                    if(p[i] =='*'){\n                        dp[i][j] = dp[i+1][j];\n                    }\n                    else{\n                        dp[i][j] = 0;\n                    }\n                }\n                else{\n                    if(p[i] == '?'){\n                        dp[i][j] = dp[i+1][j+1];\n                    }\n                    else if(p[i] =='*'){\n                        dp[i][j] = dp[i+1][j] || dp[i][j+1];\n                    }\n                    else if(p[i] ==  s[j]){\n                        dp[i][j] = dp[i+1][j+1];\n                    }\n                    else{\n                        dp[i][j] = 0;\n                    }\n                    \n                }\n            }\n        }\n        return dp[0][0];\n        \n    }\n};","compare_resulttitle_slug":"wildcard-matching"}