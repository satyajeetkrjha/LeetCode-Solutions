{"id":777330637,"lang":"cpp","time":"1Â week","timestamp":1660866428,"status_display":"Accepted","runtime":"669 ms","url":"/submissions/detail/777330637/","is_pending":"Not Pending","title":"Word Ladder","memory":"14.6 MB","code":"class Solution {\npublic:\n    queue <string> q ;\n    map <string ,bool >m ;\n    \n    void transform(string word){\n        for(int i =0 ;i<word.size();i++){\n            for(char c='a';c<='z';c++){\n                 string temp = word;\n                 temp[i] = c;\n                 if(m.find(temp)!=m.end()){\n                     if(!m[temp]){\n                         m[temp] = true;\n                         q.push(temp);\n                     }\n                 }\n            }\n        }\n    }\n    \n    \n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n        int n = wordList.size();\n        for(int i =0;i<wordList.size();i++){\n            m[wordList[i]] = false ;\n        }\n        if(beginWord == endWord)\n            return 0;\n        q.push(beginWord);\n        int dist =1;\n        while(!q.empty()){\n            int sz = q.size();\n            for(int i =0 ;i<sz;i++){\n                auto cur = q.front();\n                q.pop();\n                if(cur == endWord)\n                    return dist;\n                 transform(cur);\n            }\n           dist++;\n        }\n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder"}