{"id":365737660,"lang":"cpp","time":"2 years, 1 month","timestamp":1594586809,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/365737660/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\npublic:\n     map<string ,int> visited;\n     queue<string> q;\n    void transform(vector<string>& wordList, string word){\n      for(int i=0;i<word.size();i++){\n          for(char c ='a';c<='z';c++){\n              string temp = word;\n              temp[i]=c;\n              string newword =temp;\n              //cout<<\"newword is now \"<<newword<<endl;\n              if(visited.find(newword)!=visited.end()){\n                  if(visited[newword]==0){\n                  cout<<\"neeword pushed in queue now is \"<<newword<<endl;\n                  q.push(newword);\n                  visited[newword]++;\n                  }\n                  \n              }\n          }\n      }\n    }\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n       \n        for(int i=0;i<wordList.size();i++){\n            string word =wordList[i];\n            visited[word]=0;\n        }\n        q.push(beginWord);\n        visited[beginWord]++;\n        int level=1;\n        bool flag =false;\n        while(!q.empty()){\n            int sz= q.size();\n            cout<<\"size of queue is \"<<sz<<endl;\n            for(int i=0;i<sz;i++){\n                string word =q.front();\n                q.pop();\n                cout<<\"word is \"<<word<<endl;\n                if(word == endWord){\n                    flag=true;\n                    break;\n                }\n    \n                //do all possible transformations by changing one word at a time in te word taken out from the queue\n                transform(wordList,word);\n            }\n            level++;\n        }\n        if(flag ==true)\n        return level;\n        else\n            return 0;\n    }\n};","compare_result":"0101000000000011100000000000000000000000000","title_slug":"word-ladder"}